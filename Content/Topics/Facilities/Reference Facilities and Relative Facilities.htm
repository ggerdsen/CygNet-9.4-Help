<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en" xml:lang="en" data-mc-search-type="Stem" data-mc-help-system-file-name="CygNet.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Facilities|Facilities Overview">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Reference Facilities and Relative Facilities</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/NoBorder8.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/HTML5.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><a class="MCBreadcrumbsLink" href="Facilities.htm">Facilities</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="Facilities Overview.htm">Facilities Overview</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Reference Facilities and Relative Facilities</span>
        </div>
        <h2>Reference Facilities and Relative Facilities</h2>
        <p>CygNet supports the ability to resolve and/or display information about a facility that is different from the facility of the configured point for an object. For any given facility you can define a path to another facility within your CygNet environment  based on an attribute and a definition.</p>
        <p>Known as <b>Reference Facilities</b> and <b>Relative Facilities</b>, these concepts are similar, but the implementation and configuration of each differs.</p>
        <h4>Reference Facilities</h4>
        <p><b>Reference Facilities</b> can only be configured for CygNet-aware tools in CygNet Studio via the <b>[ReferenceFacility]</b> property. Referenced facilities  only support a <i>single</i> level of resolution. They can be configured to resolve to a facility that matches a Source Attribute or a Facility Filter Rule.</p>
        <ul>
            <li class="HyperlinkList" value="1"><b>CygNet-aware tools</b> — See <a href="../CygNet Studio/Configuring a Reference Facility.htm">Configuring a Reference Facility</a> for more information about this type of facility configuration for CygNet-aware tools.</li>
            <li class="HyperlinkList" value="2"><b>Group Grid Tool</b> — You can also specify a reference facility for a point selected for a column in the <a href="../CygNet Studio/Group Grid Tool Columns Tab.htm#Point">Group Grid Tool</a>.</li>
        </ul>
        <p class="Example">Example</p>
        <p class="Indent">In the CygNet Studio CygNet-Aware tools, a reference facility can be specified by configuring a filter and an attribute. However the resolution is only one-level deep.</p>
        <p class="Indent">Say you have a <b>Well</b> that is connected to a <b>Central Delivery Point</b> (CDP), it would be possible to show both facilities on a templated screen, because of their single relationship. However, say you have a <b>Tank</b> connected to a <b>Tank Battery</b> that is connected to the <b>CDP</b>, and you had a <b>Well</b> screen, you would not be able to show anything other than the <b>Well</b> and the <b>CDP</b>. Further, if you had a <b>Gas Meter</b> linked to the <b>Well</b>. That’s only one-level away, so you could build a <b>Well</b> screen that shows the <b>Gas Meter</b> and the <b>CDP</b>.</p>
        <h4>Relative Facilities</h4>
        <p><b>Relative Facilities</b> represent a more sophisticated method of referencing related facilities because it allows for <i>multi-level</i> resolution of facilities. This type of facility resolution is configurable (or scripted) from different locations within CygNet.</p>
        <ul>
            <li class="HyperlinkList" value="1"><b>Canvas</b> — The Canvas HMI&#160;application supports relative facilities across its controls, and resolution is based on the CygNet .NET API. Global relative facility definition configuration is done on the Backstage View; the definitions are stored as XML and encoded inside the Canvas global settings file (.gsf). Relative facility definitions can also be exported to an XML file from Canvas. See <a href="../../../Subsystems/Canvas/Content/Topics/Using_Canvas/Settings_Relative_Facilities.htm">Configuring Relative Facilities</a> for more information.</li>
            <li class="HyperlinkList" value="2"><b>CygNet .NET API</b> — The CygNet .NET API includes the <b>CygNet.API.Facilities.Relative</b> namespace, which provides a collection of relative facility definitions and associated methods. Refer to the standalone online help file <b>CygNet.API.chm</b>, found in the <b>CygNet\Bin</b> directory for more information. See <a href="../Scripting/CygNet .NET Framework API.htm">CygNet .NET API</a>.</li>
            <li class="HyperlinkList" value="3"><b>CygNet Bridge REST API</b> — The CygNet Bridge API provides access to CygNet data without direct access to a CygNet system and supports the retrieval of the relationship name and facility tag of a relative facility. See <a href="../CygNet Bridge API/CygNet Bridge API.htm">CygNet Bridge API</a>.</li>
            <li class="HyperlinkList" value="4"><b>Well Test</b> — The CygNet Well Test Module uses relative facilities definitions to resolve to related facilities within a well test environment. See <a href="../Well Test/Creating the Relative Facilities File.htm">Creating the Relative Facilities File</a> for usage information and instructions on exporting the relative facilities definitions from Canvas.</li>
        </ul>
        <p class="Example">Example</p>
        <p class="Indent">Using Canvas or any of the other applications that support relative facility resolution, you define the relationships between all of the entities.  Then on a Canvas screen or in script you supply the relative facility definition, the source facility and the relative link, and the referenced facilities will automatically resolve.</p>
        <p class="Indent">In Canvas you would be able to build a <b>Well</b> screen showing a <b>Gas Meter</b> linked to a <b>Well</b>  connected to a <b><b>Central Delivery Point</b></b> (CDP), and a <b>Tank</b> connected to a <b>Tank Battery</b> connected to the <b>CDP</b>, since a Canvas screen can resolve multiple levels of resolution.</p>
        <h3>A note about point configuration and facility attributes</h3>
        <p>In <b>CygNet Studio</b>, you must configure a screen object to the point level to resolve the reference facility, even if you want to only show facility attributes. For example, in order to have a text box object show a facility description, you need to configure the UDC of the text box  for facility attributes to work.  While not necessarily related to reference facility configuration, it's important to know that you cannot show facility attributes in a Studio object unless you have a UDC defined for the object. In Studio any facility resolution is done at the point level.</p>
        <p>In <b>Canvas</b>, however, it is possible to configure objects to show facility attributes without the need to configure the UDC.    The relative facility methods in the CygNet .NET API do not require the UDC; they just require relative facility definitions, relative facility name, and the source facility tag. In Canvas the resolution is done at the facility level, rather than at the point level.</p>
        <hr width="100%" size="1" />
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/NoBorder8.css');" summary="MasterFooter" class="TableStyle-NoBorder8" cellspacing="0">
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <tbody>
                <tr class="TableStyle-NoBorder8-Body-Body1">
                    <td class="TableStyle-NoBorder8-BodyB-Column1-Body1">
                        <p><a href="mailto:softwaredocs.feedback@weatherford.com?subject=Documentation%20feedback"><img src="../../Resources/Images/Shared Images/Feedback_footer.png" alt="Let us know how we can improve this topic." title="Let us know how we can improve this topic." class="Inline" /></a>
                        </p>
                    </td>
                    <td class="TableStyle-NoBorder8-BodyA-Column1-Body1">
                        <p class="MasterFooterContact"><a href="https://www.weatherford.com/en/products-and-services/production/production-4-0/iot-scada-platform//" target="_blank"><img src="../../Resources/Images/Shared Images/WFT_31x21.png" alt="CygNet at weatherford.com" title="CygNet at weatherford.com" /></a>
                        </p>
                        <p class="MasterFooterContact">© <span class="CygNetVariablesCurrentYear">2020</span> Weatherford. All rights reserved.</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>