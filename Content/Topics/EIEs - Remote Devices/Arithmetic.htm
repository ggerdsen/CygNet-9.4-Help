<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en" xml:lang="en" data-mc-search-type="Stem" data-mc-help-system-file-name="CygNet.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Devices|Remote Devices|Device Template Files|Reference Methods">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Arithmetic Examples</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/NoBorder8.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/HTML5.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><a class="MCBreadcrumbsLink" href="../Devices/Devices.htm">Devices</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="EIE Remote Devices.htm">Remote Devices</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="Device Template Files.htm">Device Template Files</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="Reference Methods.htm">Reference Methods</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Arithmetic Examples</span>
        </div>
        <h2>Arithmetic Examples</h2>
        <p>This topic provides numerous useful examples of the various ways you can use reference methods in your device template files to perform conversions with constant values and/or reference data group element values. A sample device template file using each example is available upon request; it can be loaded to a DDS and used to test your reference methods. It is called ReferenceTester.dtf.</p>
        <p>See the following subsections for details:</p>
        <ul>
            <li class="HyperlinkList" value="1"><a href="#Addition2" class="selected">Addition (A)</a>
            </li>
            <li class="HyperlinkList" value="2"><a href="#Addition" class="selected">Addition (B)</a>
            </li>
            <li class="HyperlinkList" value="3"><a href="#Average" class="selected">Average Value (A)</a>
            </li>
            <li class="HyperlinkList" value="4"><a href="#Average2" class="selected">Average Value (B)</a>
            </li>
            <li class="HyperlinkList" value="5"><a href="#Division2" class="selected">Division (A)</a>
            </li>
            <li class="HyperlinkList" value="6"><a href="#Division" class="selected">Division (B)</a>
            </li>
            <li class="HyperlinkList" value="7"><a href="#Exponent3" class="selected">Exponent/Raise to Power (A)</a>
            </li>
            <li class="HyperlinkList" value="8"><a href="#Exponent4" class="selected">Exponent/Raise to Power (B)</a>
            </li>
            <li class="HyperlinkList" value="9"><a href="#Maximum" class="selected">Maximum Value (A)</a>
            </li>
            <li class="HyperlinkList" value="10"><a href="#Maximum2" class="selected">Maximum Value (B)</a>
            </li>
            <li class="HyperlinkList" value="11"><a href="#Minimum" class="selected">Minimum Value (A)</a>
            </li>
            <li class="HyperlinkList" value="12"><a href="#Minimum2" class="selected">Minimum Value (B)</a>
            </li>
            <li class="HyperlinkList" value="13"><a href="#Multipli2" class="selected">Multiplication (A)</a>
            </li>
            <li class="HyperlinkList" value="14"><a href="#Multipli" class="selected">Multiplication (B)</a>
            </li>
            <li class="HyperlinkList" value="15"><a href="#Subtract2" class="selected">Subtraction (A)</a>
            </li>
            <li class="HyperlinkList" value="16"><a href="#Subtract" class="selected">Subtraction (B)</a>
            </li>
        </ul>
        <p>For information about example data group elements and values used below, see <a href="Example Values.htm">Example Values</a>.</p>
        <h3><a name="Addition2"></a>Addition (A)</h3>
        <p>The following example uses two child elements to add two values. The first child element references the operation <a href="Available Reference Operations.htm#opAssignId">opAssignId</a> and the value of the data group element <a href="Example Values.htm">raw10</a> to assign the current value of 10 as the initial value for <b>AddConst</b>. The second child element references the operation <a href="Available Reference Operations.htm#opAddVal">opAdd</a> to add the constant value "5" to the value assigned by the first child element. The result is 15.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;AddConst desc="Add Constant Value" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssignId" deid="raw10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opAdd" value="5"/&gt;</p>
                    <p class="Code">&lt;/AddConst&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. A useful element to know is <a href="ref.htm" style="font-style: normal;">ref</a>.</p>
        <h3><a name="Addition"></a>Addition (B)</h3>
        <p>The following example uses two child elements to add two values. The first child element references the operation <a href="Available Reference Operations.htm#opAssign">opAssign</a> and the constant value "10" to assign the current value of 10 as the initial value for <b>AddId</b>. The second child element references the operation <a href="Available Reference Operations.htm#opAddId">opAddId</a> to add the  value of the referenced data group element&#160;<a href="Example Values.htm">raw5</a> to the value assigned by the first child element. The result is 15.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;AddId desc="Add DEID Value" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssign" value="10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opAddId" deid="raw5"/&gt;</p>
                    <p class="Code">&lt;/AddId&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. A useful element to know is <a href="ref.htm" style="font-style: normal;">ref</a>.</p>
        <h3><a name="Average"></a>Average Value (A)</h3>
        <p>The following example uses specialized child elements to select an average value from a set of defined values. The first child element references the operation <a href="Available Reference Operations.htm#opAverage">opAverage</a> to specify that its children are part of a data set from which the average value is required. Then the <a href="dataSet element.htm">dataSet</a> element is defined. Finally, child <a href="dataSet element.htm">item</a> elements are defined. Each <b>item</b> element specifies a value; the value can either be a constant (<b>value</b>) or variable (<b>deid</b>). In this example, the average value from the data set is 55.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;AverageVal desc="Average value of dataset" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAverage"&gt;</p>
                    <p class="Code3">&lt;dataSet&gt;</p>
                    <p class="Code4">&lt;item value="50"/&gt;</p>
                    <p class="Code4">&lt;item value="60"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw10"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw100"/&gt;</p>
                    <p class="Code3">&lt;/dataSet&gt;</p>
                    <p class="Code2">&lt;/ref&gt;</p>
                    <p class="Code">&lt;/AverageVal&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. Useful elements to know are <a href="ref.htm" style="font-style: normal;">ref</a>, <a href="dataSet element.htm">dataSet</a>, and <a href="dataSet element.htm">item</a>.</p>
        <h3><a name="Average2"></a>Average Value (B)</h3>
        <p>The following example uses specialized child elements to select an average value from a set of defined values where some of the values are outside the data set, but within the parent data group element. The first child element references the operation <a href="Available Reference Operations.htm#opAssignId">opAssignId</a> to assign a starting value that will be compared to values in the data set. The second child element references the operation <a href="Available Reference Operations.htm#opScaleFactorId">opScaleFactorId</a> to apply a scale factor of 2 to the value 1. The result is 2. A third child element references the operation <a href="Available Reference Operations.htm#opAverage">opAverage</a> to specify that an average value is to be returned. Then the <a href="dataSet element.htm">dataSet</a> element is defined. Finally, child <a href="dataSet element.htm">item</a> elements are defined. Each <b>item</b> element specifies a value; the value can either be a constant (<b>value</b>) or variable (<b>deid</b>). In this example, the value 2 is used along with the values in the data set to determine an average; the average value is assigned to the parent data group element. In this case, the average value from the data set is 29.25.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;AveValDEID desc="Average value of data group element" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssignId" deid="raw1"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opScaleFactorId" deid="raw2"/&gt;</p>
                    <p class="Code2">&lt;ref prec="2" refOp="opAverage"&gt;</p>
                    <p class="Code3">&lt;dataSet&gt;</p>
                    <p class="Code4">&lt;item value="100"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw5"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw10"/&gt;</p>
                    <p class="Code3">&lt;/dataSet&gt;</p>
                    <p class="Code2">&lt;/ref&gt;</p>
                    <p class="Code">&lt;/AveValDEID&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. Useful elements to know are <a href="ref.htm" style="font-style: normal;">ref</a>, <a href="dataSet element.htm">dataSet</a>, and <a href="dataSet element.htm">item</a>.</p>
        <h3><a name="Division2"></a>Division (A)</h3>
        <p>The following example uses two child elements to divide one value by another value. The first child element references the operation <a href="Available Reference Operations.htm#opAssignId">opAssignId</a> and the value of the data group element <a href="Example Values.htm">raw10</a> to assign the current value of 10 as the initial value for <b>DivConst</b>. The second child element references the operation <a href="Available Reference Operations.htm#opDivVal">opDiv</a> to divide the initial value 10 by the constant value assigned by the second child element. The result is 5.</p>
        <div class="Note">
            <p><span class="NoteHeading">Important:</span> Because this operation introduces the illogical possibility of division by zero (0), special attributes are available to accommodate the possibility. See <a href="Available Reference Operations.htm#opDivVal">divZeroAction</a> and <a href="Available Reference Operations.htm#opDivVal">divZeroSentinel</a>.</p>
        </div>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;DivConst desc="Divide Constant Value" readOnly="true" type="ui2" isRef="1" divZeroAction="returnSentinel" divZeroSentinel="000"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssignId" deid="raw10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opDiv" value="2"/&gt;</p>
                    <p class="Code">&lt;/DivConst&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#value">value</a>, <a href="ref.htm#deid">deid</a>, <a href="DataGroupElement Element.htm#divZeroAction">divZeroAction</a>, and <a href="DataGroupElement Element.htm#divZeroSentinel">divZeroSentinel</a>. A useful element to know is <a href="ref.htm" style="font-style: normal;">ref</a>.</p>
        <h3><a name="Division"></a>Division (B)</h3>
        <p>The following example uses two child elements to divide one value by another value. The first child element references the operation <a href="Available Reference Operations.htm#opAssign">opAssign</a> and the constant value "10" to assign the current value of 10 as the initial value for <b>DivId</b>. The second child element references the operation <a href="Available Reference Operations.htm#opDivId">opDivId</a> to divide the constant value "10" by the value of the reference data group element assigned by the second child element. The result is 5.</p>
        <div class="Note">
            <p><span class="NoteHeading">Important:</span> Because this operation introduces the illogical possibility of division by zero (0), special attributes are available to accommodate the possibility. See <a href="Available Reference Operations.htm#opDivId">divZeroAction</a> and <a href="Available Reference Operations.htm#opDivId">divZeroSentinel</a>.</p>
        </div>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;DivId desc="Divide Constant Value" readOnly="true" type="ui2" isRef="1" divZeroAction="noAction"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssign" value="10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opDivId" deid="raw2"/&gt;</p>
                    <p class="Code">&lt;/DivId&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, <a href="ref.htm#value">value</a>, <a href="DataGroupElement Element.htm#divZeroAction">divZeroAction</a>, and <a href="DataGroupElement Element.htm#divZeroSentinel">divZeroSentinel</a>. A useful element to know is <a href="ref.htm" style="font-style: normal;">ref</a>.</p>
        <h3><a name="Exponent3"></a>Exponent/Raise to Power (A)</h3>
        <p>The following example uses two child elements to raise one value to the power of the other. The first child element references the operation <a href="Available Reference Operations.htm#opAssignId">opAssignId</a> and the value of the data group element&#160;<a href="Example Values.htm">raw10</a> to assign the current value of 10 as the initial value for <b>PowConst</b>. The second child element references the operation <a href="Available Reference Operations.htm#opPow">opPow</a> and uses a constant value to raise the initial value to the power of "2". The result is 100.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;PowConst desc="Raise Power by Constant Value (10^2)" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssignId" deid="raw10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opPow" value="2"/&gt;</p>
                    <p class="Code">&lt;/PowConst&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. A useful element to know is <a href="ref.htm" style="font-style: normal;">ref</a>.</p>
        <h3><a name="Exponent4"></a>Exponent/Raise to Power (B)</h3>
        <p>The following example uses two child elements to raise one value to the power of the other. The first child element references the operation <a href="Available Reference Operations.htm#opAssign">opAssign</a> and the constant value "10" to assign the current value of 10 as the initial value for <b>PowId</b>. The second child element references the operation <a href="Available Reference Operations.htm#opPowId">opPowId</a> and uses a reference data group element value to raise the initial value to the power of "2". The result is 100.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;PowId desc="Raise Power by DEID Value (10^2)" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssign" value="10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opPowId" deid="raw2"/&gt;</p>
                    <p class="Code">&lt;/PowId&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. A useful element to know is <a href="ref.htm" style="font-style: normal;">ref</a>.</p>
        <h3><a name="Maximum"></a>Maximum Value (A)</h3>
        <p>The following example uses specialized child elements to select a maximum value from a set of defined values. The first child element references the operation <a href="Available Reference Operations.htm#opMax">opMax</a> to specify that its children are part of a data set from which the maximum value is required. Then the <a href="dataSet element.htm">dataSet</a> element is defined. Finally, child <a href="dataSet element.htm">item</a> elements are defined. Each <b>item</b> element specifies a value; the value can either be a constant (<b>value</b>) or variable (<b>deid</b>). In this example, the maximum value from the data set is 50.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;MaxVal desc="Maximum value of dataset" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opMax"&gt;</p>
                    <p class="Code3">&lt;dataSet&gt;</p>
                    <p class="Code4">&lt;item value="50"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw1"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw2"/&gt;</p>
                    <p class="Code3">&lt;/dataSet&gt;</p>
                    <p class="Code2">&lt;/ref&gt;</p>
                    <p class="Code">&lt;/MaxVal&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. Useful elements to know are <a href="ref.htm" style="font-style: normal;">ref</a>, <a href="dataSet element.htm">dataSet</a>, and <a href="dataSet element.htm">item</a>.</p>
        <h3><a name="Maximum2"></a>Maximum Value (B)</h3>
        <p>The following example uses specialized child elements to select a maximum value from a set of defined values where some of the values are outside the data set, but within the parent data group element. The first child element references the operation <a href="Available Reference Operations.htm#opAssignId">opAssignId</a> to assign a starting value that will be compared to values in the data set. The second child element references the operation <a href="Available Reference Operations.htm#opScaleFactor">opScaleFactor</a> to apply a scale factor of 10 to the value 2. The result is 200. A third child element references the operation <a href="Available Reference Operations.htm#opMax">opMax</a> to specify that a maximum value is to be returned. Then the <a href="dataSet element.htm">dataSet</a> element is defined. Finally, child <a href="dataSet element.htm">item</a> elements are defined. Each <b>item</b> element specifies a value; the value can either be a constant (<b>value</b>) or variable (<b>deid</b>). In this example, the value 200 is compared to the values in the data set; the maximum value is assigned to the parent data group element. In this case, the maximum value for the data group element is 200.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;MaxValDEID desc="Maximum value of data group element" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssignId" deid="raw2"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opScaleFactor" scaleFactor="10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="2" refOp="opMax"&gt;</p>
                    <p class="Code3">&lt;dataSet&gt;</p>
                    <p class="Code4">&lt;item value="50"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw1"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw10"/&gt;</p>
                    <p class="Code3">&lt;/dataSet&gt;</p>
                    <p class="Code2">&lt;/ref&gt;</p>
                    <p class="Code">&lt;/MaxValDEID&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. Useful elements to know are <a href="ref.htm" style="font-style: normal;">ref</a>, <a href="dataSet element.htm">dataSet</a>, and <a href="dataSet element.htm">item</a>.</p>
        <h3><a name="Minimum"></a>Minimum Value (A)</h3>
        <p>The following example uses specialized child elements to select a minimum value from a set of defined values. The first child element references the operation <a href="Available Reference Operations.htm#opMin">opMin</a> to specify that its children are part of a data set from which the minimum value is required. Then the <a href="dataSet element.htm">dataSet</a> element is defined. Finally, child <a href="dataSet element.htm">item</a> elements are defined. Each <b>item</b> element specifies a value; the value can either be a constant (<b>value</b>) or variable (<b>deid</b>). In this example, the minimum value from the data set is 1, because the data group element referenced (<b>raw1</b>) contains the value 1.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;MinVal desc="Minimum value of dataset" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opMin"&gt;</p>
                    <p class="Code3">&lt;dataSet&gt;</p>
                    <p class="Code4">&lt;item value="50"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw1"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw2"/&gt;</p>
                    <p class="Code3">&lt;/dataSet&gt;</p>
                    <p class="Code2">&lt;/ref&gt;</p>
                    <p class="Code">&lt;/MinVal&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. Useful elements to know are <a href="ref.htm" style="font-style: normal;">ref</a>, <a href="dataSet element.htm">dataSet</a>, and <a href="dataSet element.htm">item</a>.</p>
        <h3><a name="Minimum2"></a>Minimum Value (B)</h3>
        <p>The following example uses specialized child elements to select a minimum value from a set of defined values where some of the values are outside the data set, but within the parent data group element. The first child element references the operation <a href="Available Reference Operations.htm#opAssignId">opAssignId</a> to assign a starting value that will be compared to values in the data set. The second child element references the operation <a href="Available Reference Operations.htm#opScaleFactor">opScaleFactor</a> to apply a scale factor of 10 to the value 2. The result is 200. A third child element references the operation <a href="Available Reference Operations.htm#opMin">opMin</a> to specify that a minimum value is to be returned. Then the <a href="dataSet element.htm">dataSet</a> element is defined. Finally, child <a href="dataSet element.htm">item</a> elements are defined. Each <b>item</b> element specifies a value; the value can either be a constant (<b>value</b>) or variable (<b>deid</b>). In this example, the value 200 is compared to the values in the data set; the minimum value is assigned to the parent data group element. In this case, the minimum value from the data set is 1, because the data group element referenced (<b>raw1</b>) contains the value 1.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;MinValDEID desc="Minimum value of data group element" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssignId" deid="raw2"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opScaleFactor" scaleFactor="10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="2" refOp="opMin"&gt;</p>
                    <p class="Code3">&lt;dataSet&gt;</p>
                    <p class="Code4">&lt;item value="50"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw1"/&gt;</p>
                    <p class="Code4">&lt;item deid="raw10"/&gt;</p>
                    <p class="Code3">&lt;/dataSet&gt;</p>
                    <p class="Code2">&lt;/ref&gt;</p>
                    <p class="Code">&lt;/MinValDEID&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. Useful elements to know are <a href="ref.htm" style="font-style: normal;">ref</a>, <a href="dataSet element.htm">dataSet</a>, and <a href="dataSet element.htm">item</a>.</p>
        <h3><a name="Multipli2"></a>Multiplication (A)</h3>
        <p>The following example uses two child elements to multiply values. The first child element references the operation <a href="Available Reference Operations.htm#opAssignId">opAssignId</a> and the value of the data group element&#160;<a href="Example Values.htm">raw10</a> to assign the current value of 10 as the initial value for <b>MultConst</b>. The second child element references the operation <a href="Available Reference Operations.htm#opMultVal">opMult</a> to multiply the constant value "5" by the value assigned by the first child element. The result is 50.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;MultConst desc="Multiply Constant Value" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssignId" deid="raw10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opMult" value="5"/&gt;</p>
                    <p class="Code">&lt;/MultConst&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. A useful element to know is <a href="ref.htm" style="font-style: normal;">ref</a>.</p>
        <h3><a name="Multipli"></a>Multiplication (B)</h3>
        <p>The following example uses two child elements to multiply values. The first child element references the operation <a href="Available Reference Operations.htm#opAssign">opAssign</a> and the constant value "10" to assign the current value of 10 as the initial value for <b>MultId</b>. The second child element references the operation <a href="Available Reference Operations.htm#opMultId">opMultId</a> to multiply the value of the referenced data group element&#160;<a href="Example Values.htm">raw5</a> by the value assigned by the first child element. The result is 50.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;MultId desc="Multiply DEID Value" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssign" value="10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opMultId" deid="raw5"/&gt;</p>
                    <p class="Code">&lt;/MultId&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. A useful element to know is <a href="ref.htm" style="font-style: normal;">ref</a>.</p>
        <h3><a name="Subtract2"></a>Subtraction (A)</h3>
        <p>The following example uses two child elements to subtract one value from another value. The first child element references the operation <a href="Available Reference Operations.htm#opAssignId">opAssignId</a> and the value of the data group element&#160;<a href="Example Values.htm">raw10</a> to assign the current value of 10 as the initial value for <b>SubConst</b>. The second child element references the operation <a href="Available Reference Operations.htm#opSubVal">opSub</a> to subtract the constant value "5" from the value assigned by the first child element. The result is 5.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;SubConst desc="Subtract Constant Value" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssignId" deid="raw10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opSub" value="5"/&gt;</p>
                    <p class="Code">&lt;/SubConst&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. A useful element to know is <a href="ref.htm" style="font-style: normal;">ref</a>.</p>
        <h3><a name="Subtract"></a>Subtraction (B)</h3>
        <p>The following example uses two child elements to subtract one value from another value.  The first child element references the operation <a href="Available Reference Operations.htm#opAssign">opAssign</a> and the constant value "10" to assign the current value of 10 as the initial value for <b>SubId</b>. The second child element references the operation <a href="Available Reference Operations.htm#opSubId">opSubId</a> to subtract the  value of the referenced data group element&#160;<a href="Example Values.htm">raw5</a> from the value assigned by the first child element. The result is 5.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;SubId desc="Subtract DEID Value" readOnly="true" type="ui2" isRef="1"&gt;</p>
                    <p class="Code2">&lt;ref prec="0" refOp="opAssign" value="10"/&gt;</p>
                    <p class="Code2">&lt;ref prec="1" refOp="opSubId" deid="raw5"/&gt;</p>
                    <p class="Code">&lt;/SubId&gt;</p>
                </td>
            </tr>
        </table>
        <p>Useful attributes to know are <a href="DataGroupElement Element.htm#isRef">isRef</a>, <a href="ref.htm#prec">prec</a>, <a href="ref.htm#refOp">refOp</a>, <a href="ref.htm#deid">deid</a>, and <a href="ref.htm#value">value</a>. A useful element to know is <a href="ref.htm" style="font-style: normal;">ref</a>.</p><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <hr width="100%" size="1" />
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/NoBorder8.css');" summary="MasterFooter" class="TableStyle-NoBorder8" cellspacing="0">
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <tbody>
                <tr class="TableStyle-NoBorder8-Body-Body1">
                    <td class="TableStyle-NoBorder8-BodyB-Column1-Body1">
                        <p><a href="mailto:softwaredocs.feedback@weatherford.com?subject=Documentation%20feedback"><img src="../../Resources/Images/Shared Images/Feedback_footer.png" alt="Let us know how we can improve this topic." title="Let us know how we can improve this topic." class="Inline" /></a>
                        </p>
                    </td>
                    <td class="TableStyle-NoBorder8-BodyA-Column1-Body1">
                        <p class="MasterFooterContact"><a href="https://www.weatherford.com/en/products-and-services/production/production-4-0/iot-scada-platform//" target="_blank"><img src="../../Resources/Images/Shared Images/WFT_31x21.png" alt="CygNet at weatherford.com" title="CygNet at weatherford.com" /></a>
                        </p>
                        <p class="MasterFooterContact">© <span class="CygNetVariablesCurrentYear">2020</span> Weatherford. All rights reserved.</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>