<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en" xml:lang="en" data-mc-search-type="Stem" data-mc-help-system-file-name="CygNet.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Scripting|CxHmiFac|FacNavBar Object">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>FacNavBar Methods</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/NoBorder.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/HelpTable2.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/NoBorder8.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/HTML5.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><a class="MCBreadcrumbsLink" href="CygNet Scripting.htm">Scripting</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="CxHmiFac.htm">CxHmiFac</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="CxHmiFac FacNavBar Object.htm">FacNavBar Object</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">FacNavBar Methods</span>
        </div>
        <h2>FacNavBar Methods</h2>
        <p>The <b>FacNavBar</b> object contains the following methods:</p>
        <table class="TableStyle_NoBorder" cellspacing="0" style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/NoBorder.css');margin-left: 0;margin-right: auto;">
            <col />
            <col />
            <tr>
                <td class="TableStyle_NoBorder_Body_0_0_RowSep_ColSep">
                    <ul>
                        <li class="HyperlinkList" value="1"><a href="#AboutBox" class="selected">AboutBox</a>
                        </li>
                        <li class="HyperlinkList" value="2"><a href="#CanNavNext" class="selected">CanNavNext</a>
                        </li>
                        <li class="HyperlinkList" value="3"><a href="#CanNavPrev" class="selected">CanNavPrev</a>
                        </li>
                        <li class="HyperlinkList" value="4"><a href="#CanSelNext" class="selected">CanSelNext</a>
                        </li>
                        <li class="HyperlinkList" value="5"><a href="#CanSelPrev" class="selected">CanSelPrev</a>
                        </li>
                        <li class="HyperlinkList" value="6"><a href="#EnableAllInitialFilterRules" class="selected">EnableAllInitialFilterRules</a>
                        </li>
                        <li class="HyperlinkList" value="7"><a href="#EnableInitialFilterRule" class="selected">EnableInitialFilterRule</a>
                        </li>
                        <li class="HyperlinkList" value="8"><a href="#GetAllTargetFacTags" class="selected">GetAllTargetFacTags</a>
                        </li>
                        <li class="HyperlinkList" value="9"><a href="#GetFacNavBarCustomAttribute" class="selected">GetFacNavBarCustomAttribute</a>
                        </li>
                        <li class="HyperlinkList" value="10"><a href="#GetInitialFilterRuleNames" class="selected">GetInitialFilterRuleNames</a>
                        </li>
                        <li class="HyperlinkList" value="11"><a href="#GetSelectedTargetFacTag" class="selected">GetSelectedTargetFacTag</a>
                        </li>
                        <li class="HyperlinkList" value="12"><a href="#GetTargetFacilityAttrValues" class="selected">GetTargetFacilityAttrValues</a>
                        </li>
                    </ul>
                </td>
                <td class="TableStyle_NoBorder_Body_0_0_RowSep_ColEnd">
                    <ul>
                        <li class="HyperlinkList" value="1"><a href="#NavNext" class="selected">NavNext</a>
                        </li>
                        <li class="HyperlinkList" value="2"><a href="#NavPrev" class="selected">NavPrev</a>
                        </li>
                        <li class="HyperlinkList" value="3"><a href="#PersistRunTimeConfig" class="selected">PersistRunTimeConfig</a>
                        </li>
                        <li class="HyperlinkList" value="4"><a href="#Restart" class="selected">Restart</a>
                        </li>
                        <li class="HyperlinkList" value="5"><a href="#RestoreDesignTimeConfig" class="selected">RestoreDesignTimeConfig</a>
                        </li>
                        <li class="HyperlinkList" value="6"><a href="#RestoreRunTimeConfig" class="selected">RestoreRunTimeConfig</a>
                        </li>
                        <li class="HyperlinkList" value="7"><a href="#SelNext" class="selected">SelNext</a>
                        </li>
                        <li class="HyperlinkList" value="8"><a href="#SelPrev" class="selected">SelPrev</a>
                        </li>
                        <li class="HyperlinkList" value="9"><a href="#SelTargetFacility" class="selected">SelTargetFacility</a>
                        </li>
                        <li class="HyperlinkList" value="10"><a href="#SetFacNavBarCustomAttribute" class="selected">SetFacNavBarCustomAttribute</a>
                        </li>
                        <li class="HyperlinkList" value="11"><a href="#Start" class="selected">Start</a>
                        </li>
                        <li class="HyperlinkList" value="12"><a href="#Stop" class="selected">Stop</a>
                        </li>
                    </ul>
                </td>
            </tr>
        </table>
        <h3><a name="AboutBox"></a>AboutBox</h3>
        <p>The <b>AboutBox</b> method displays an <b>About</b> dialog box for the control.</p>
        <h4>Syntax</h4>
        <p class="Syntax">AboutBox()</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example launches an <b>About</b> dialog box.</p>
        <table class="Code">
            <tr>
                <td>
                    <p>Sub </p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">FacNavBar.X.AboutBox</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table>
        <h3><a name="CanNavNext"></a>CanNavNext</h3>
        <p>The <b>CanNavNext</b> 
method specifies whether the next target item (facility or node) can be selected.</p>
        <h4>Syntax</h4>
        <p class="Syntax">CanNavNext(<i>Wrap</i> As Boolean) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Wrap</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies whether the control considers the list of target facilities to be wrapped (in other words, is the last item in the list considered to be the "previous" item of the first item in the list, and vice versa).</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example enables the Nav &gt;&gt; and &lt;&lt; buttons if the next and previous target facilities, respectively, can be selected. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub UpdateUI()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">eboLevels.Text = FacNavBar.X.Levels - 1</p>
                    <p class="Code2">eboInitialFilter.Text = FacNavBar.X.InitialFilter</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If FacNavBar.X.RuntimeCfgAutoPersist Then</p>
                    <p class="Code3">ckbRTimeCfgAutoPersist.Check = 1</p>
                    <p class="Code2">Else</p>
                    <p class="Code3">ckbRTimeCfgAutoPersist.Check = 0</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">btnNext.Enable = FacNavBar.X.CanSelNext(eboLevel.Text, ckbWrap.Value)</p>
                    <p class="Code2">btnPrev.Enable = FacNavBar.X.CanSelPrev(eboLevel.Text, ckbWrap.Value)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">btnNavNext.Enable = FacNavBar.X.CanNavNext(ckbNavWrap.Value)</p>
                    <p class="Code2">btnNavPrev.Enable = FacNavBar.X.CanNavPrev(ckbNavWrap.Value)</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="CanNavPrev"></a>CanNavPrev</h3>
        <p>The <b>CanNavPrev</b> method specifies whether the previous target item (facility or node) can be selected.</p>
        <h4>Syntax</h4>
        <p class="Syntax">CanNavPrev(<i>Wrap</i> As Boolean) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Wrap</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies whether the control considers the list of target facilities to be wrapped (in other words, is the last item in the list considered to be the "previous" item of the first item in the list, and vice versa).</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example enables the Nav &gt;&gt; and &lt;&lt; buttons if the next and previous target facilities, respectively, can be selected. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub UpdateUI()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">eboLevels.Text = FacNavBar.X.Levels - 1</p>
                    <p class="Code2">eboInitialFilter.Text = FacNavBar.X.InitialFilter</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If FacNavBar.X.RuntimeCfgAutoPersist Then</p>
                    <p class="Code3">ckbRTimeCfgAutoPersist.Check = 1</p>
                    <p class="Code2">Else</p>
                    <p class="Code3">ckbRTimeCfgAutoPersist.Check = 0</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">btnNext.Enable = FacNavBar.X.CanSelNext(eboLevel.Text, ckbWrap.Value)</p>
                    <p class="Code2">btnPrev.Enable = FacNavBar.X.CanSelPrev(eboLevel.Text, ckbWrap.Value)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">btnNavNext.Enable = FacNavBar.X.CanNavNext(ckbNavWrap.Value)</p>
                    <p class="Code2">btnNavPrev.Enable = FacNavBar.X.CanNavPrev(ckbNavWrap.Value)</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="CanSelNext"></a>CanSelNext</h3>
        <p>The <b>CanSelNext</b> method returns True if the next item (facility attribute value or node) for the specified level can be selected. Otherwise returns False.</p>
        <h4>Syntax</h4>
        <p class="Syntax">CanSelNext(<i>Level</i> As Integer, <i>Wrap</i> As Boolean) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Level</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies the level for the filter. </p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>Wrap</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>Specifies whether the control considers the list of target facilities to be wrapped (in other words, is the last item in the list considered to be the "previous" item of the first item in the list, and vice versa).</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example enables the Sel &gt;&gt; and &lt;&lt; buttons if the next and previous facility attributes at the given level, respectively, can be selected. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub UpdateUI()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">eboLevels.Text = FacNavBar.X.Levels - 1</p>
                    <p class="Code2">eboInitialFilter.Text = FacNavBar.X.InitialFilter</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If FacNavBar.X.RuntimeCfgAutoPersist Then</p>
                    <p class="Code3">ckbRTimeCfgAutoPersist.Check = 1</p>
                    <p class="Code2">Else</p>
                    <p class="Code3">ckbRTimeCfgAutoPersist.Check = 0</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">btnNext.Enable = FacNavBar.X.CanSelNext(eboLevel.Text, ckbWrap.Value)</p>
                    <p class="Code2">btnPrev.Enable = FacNavBar.X.CanSelPrev(eboLevel.Text, ckbWrap.Value)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">btnNavNext.Enable = FacNavBar.X.CanNavNext(ckbNavWrap.Value)</p>
                    <p class="Code2">btnNavPrev.Enable = FacNavBar.X.CanNavPrev(ckbNavWrap.Value)</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="CanSelPrev"></a>CanSelPrev</h3>
        <p>The <b>CanSelPrev</b> method returns True if the previous item (facility attribute value or node) for the specified level can be selected. Otherwise returns False.</p>
        <h4>Syntax</h4>
        <p class="Syntax">CanSelPrev(<i>Level</i> As Integer, <i>Wrap</i> As Boolean) ) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Level</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies the level for the filter. </p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>Wrap</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>Specifies whether the control considers the list of target facilities to be wrapped (in other words, is the last item in the list considered to be the "previous" item of the first item in the list, and vice versa).</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example enables the Sel &gt;&gt; and &lt;&lt; buttons if the next and previous facility attributes at the given level, respectively, can be selected. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub UpdateUI()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">eboLevels.Text = FacNavBar.X.Levels - 1</p>
                    <p class="Code2">eboInitialFilter.Text = FacNavBar.X.InitialFilter</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If FacNavBar.X.RuntimeCfgAutoPersist Then</p>
                    <p class="Code3">ckbRTimeCfgAutoPersist.Check = 1</p>
                    <p class="Code2">Else</p>
                    <p class="Code3">ckbRTimeCfgAutoPersist.Check = 0</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">btnNext.Enable = FacNavBar.X.CanSelNext(eboLevel.Text, ckbWrap.Value)</p>
                    <p class="Code2">btnPrev.Enable = FacNavBar.X.CanSelPrev(eboLevel.Text, ckbWrap.Value)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">btnNavNext.Enable = FacNavBar.X.CanNavNext(ckbNavWrap.Value)</p>
                    <p class="Code2">btnNavPrev.Enable = FacNavBar.X.CanNavPrev(ckbNavWrap.Value)</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="EnableAllInitialFilterRules"></a>EnableAllInitialFilterRules</h3>
        <p>The <b>EnableAllInitialFilterRules</b> method enables or disables all rules and vectors for the initial filter.</p>
        <h4>Syntax</h4>
        <p class="Syntax">EnableAllInitialFilterRules(<i>Enable</i> As Boolean) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Enable</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies whether all rules and vectors are disabled in the initial filter.</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example enables all initial filter rules if the "Enable Initial Filter Rules" check box is checked. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub ckbEnableAllInitialFilterRules_EventChange()</p>
                    <p class="Code">Dim This : Set This = ckbEnableAllInitialFilterRules</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">If ckbEnableAllInitialFilterRules.Check &lt;&gt; 2 Then</p>
                    <p class="Code3">FacNavBar.X.EnableAllInitialFilterRules ckbEnableAllInitialFilterRules.Check()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">ListInitialFilterRules()</p>
                    <p class="Code2">End If</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="EnableInitialFilterRule"></a>EnableInitialFilterRule</h3>
        <p>The <b>EnableInitialFilterRule</b> method enables or disables a rule or vector of rules by name for the initial filter.</p>
        <h4>Syntax</h4>
        <p class="Syntax">EnableInitialFilterRule(<i>Name</i> As String, <i>Enable</i> As Boolean) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Name</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies the name of the rule or vector to enable or disable.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>Enable</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>Specifies whether  the rule or vector is disabled in the initial filter.</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example disables an initial filter rule when that rule is moved from the "Enabled" rules list to the "Disabled" rules list. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub btnDisableRule_EventClick()</p>
                    <p class="Code">Dim This : Set This = btnDisableRule</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">If lboEnabledRules.GetCurSel() &lt; 0 Then</p>
                    <p class="Code3">Exit Sub</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">FacNavBar.X.EnableInitialFilterRule lboEnabledRules.GetText(lboEnabledRules.GetCurSel()), False</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">ListInitialFilterRules()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">ckbEnableAllInitialFilterRules.Check = 2</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetAllTargetFacTags"></a>GetAllTargetFacTags</h3>
        <p>The <b>GetAllTargetFacTags</b> method returns an array of all target facility tags.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetAllTargetFacTags() As Variant</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example retrieves the list of target facility tags and presents each in a message box.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub </p>
                    <p class="Code2">Dim aryTargetFacTags</p>
                    <p class="Code2">aryTargetFacTags = FacNavBar.X.GetAllTargetFacTags()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim i</p>
                    <p class="Code2">For i = 0 To UBound(aryTargetFacTags)</p>
                    <p class="Code3">MsgBox aryTargetFacTags(i)</p>
                    <p class="Code2">Next</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table>
        <h3><a name="GetFacNavBarCustomAttribute"></a>GetFacNavBarCustomAttribute</h3>
        <p>The <b>GetFacNavBarCustomAttribute</b> method returns the value of a facility navigation bar custom attribute.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetFacNavBarCustomAttribute(<i>AttributeNameOrDesc</i> As String) As String</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>AttributeNameOrDesc</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies the name or description of the attribute.</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example retrieves the value for "Custom Attribute 0" and displays it in a message box.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub </p>
                    <p class="Code2">Dim val</p>
                    <p class="Code2">val = FacNavBar.X.GetFacNavBarCustomAttribute("Custom Attribute 0")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">MsgBox val</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetInitialFilterRuleNames"></a>GetInitialFilterRuleNames</h3>
        <p>The <b>GetInitialFilterRuleNames</b> method returns the names of enabled and disabled rules for the initial filter.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetInitialFilterRuleNames(<i>EnabledNames</i> As Variant, <i>DisabledNames</i> As Variant)</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>EnabledNames</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies the list of enabled rule names being returned.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>DisabledNames</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>Specifies the list of disabled rule names being returned.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method only returns rules that have been assigned names.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example retrieves the lists of enabled and disabled rules, and fills the list boxes accordingly. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub ListInitialFilterRules()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">lboEnabledRules.ResetContent</p>
                    <p class="Code2">lboDisabledRules.ResetContent</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim aryEnabledRules, aryDisabledRules</p>
                    <p class="Code2">FacNavBar.X.GetInitialFilterRuleNames aryEnabledRules, aryDisabledRules</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim i</p>
                    <p class="Code2">For i = 0 To UBound(aryEnabledRules)</p>
                    <p class="Code3">lboEnabledRules.AddString(aryEnabledRules(i))</p>
                    <p class="Code2">Next</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">For i = 0 To UBound(aryDisabledRules)</p>
                    <p class="Code3">lboDisabledRules.AddString(aryDisabledRules(i))</p>
                    <p class="Code2">Next</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetSelectedTargetFacTag"></a>GetSelectedTargetFacTag</h3>
        <p>The <b>GetSelecedTargetFacTag</b> method returns the facility tag corresponding to the target level combo box selection.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetSelectedTargetFacTag() As String</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example retrieves the target facility tag from the FacNavBar object and loads the Group Grid Control with UDC information. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub LoadGrid()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">Dim arrUdcList</p>
                    <p class="Code2">Dim iLowerBound</p>
                    <p class="Code2">Dim iUpperBound</p>
                    <p class="Code2">Dim strFacTag</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim strUis</p>
                    <p class="Code2">strUis = FacNavBar.X.SiteService</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">strFacTag = FacNavBar.X.GetSelectedTargetFacTag()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If strUis = "" Then</p>
                    <p class="Code3">msgbox "Set the Site.Service"</p>
                    <p class="Code3">Exit Sub</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If strFacTag = "" Then</p>
                    <p class="Code3">msgbox "Invalid FacilityTag (" + strFacTag + ")"</p>
                    <p class="Code3">Exit Sub</p>
                    <p class="Code2">End If</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">Dim aryFacTag, strFacility</p>
                    <p class="Code2">aryFacTag = Split(strFacTag, "::")</p>
                    <p class="Code2">strFacility = aryFacTag(1)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'</p>
                    <p class="Code2">' Get the udc list for this facility.</p>
                    <p class="Code2">'</p>
                    <p class="Code2">GetUdcList strFacTag, arrUdcList</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">iLowerBound = 0</p>
                    <p class="Code2">iUpperBound = ubound(arrUdcList)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'</p>
                    <p class="Code2">' Load up the grid rows/columns</p>
                    <p class="Code2">'</p>
                    <p class="Code2">Dim i, j, itemid</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">CxGrpGrid.x.Stop</p>
                    <p class="Code2">CxGrpGrid.x.ClearRows</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">CxGrpGrid.x.Columns = 4</p>
                    <p class="Code2">For j=0 To 3</p>
                    <p class="Code3">CxGrpGrid.x.ColSiteService(j) = strUis</p>
                    <p class="Code3">CxGrpGrid.x.ColFacility(j) = strFacility</p>
                    <p class="Code2">Next</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">CxGrpGrid.x.ColLabelText(0) = "Description"</p>
                    <p class="Code2">CxGrpGrid.x.ColDisplayItem(0) = 10007</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">CxGrpGrid.x.ColLabelText(1) = "Value"</p>
                    <p class="Code2">CxGrpGrid.x.ColDisplayItem(1) = 10001</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">CxGrpGrid.x.ColLabelText(2) = "Units"</p>
                    <p class="Code2">CxGrpGrid.x.ColDisplayItem(2) = 10008</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">CxGrpGrid.x.ColLabelText(3) = "Time"</p>
                    <p class="Code2">CxGrpGrid.x.ColDisplayItem(3) = 10002</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">For i=iLowerBound To iUpperBound</p>
                    <p class="Code3">CxGrpGrid.x.RowUdc(i) = arrUdcList(i)</p>
                    <p class="Code3">CxGrpGrid.x.RowLabelText(i) = CxGrpGrid.x.RowUdc(i)</p>
                    <p class="Code2">Next</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">CxGrpGrid.x.Start</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetTargetFacilityAttrValues"></a>GetTargetFacilityAttrValues</h3>
        <p>The <b>GetTargetFacilityAttrValues</b> method returns the specified attribute value for all target facilities.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetTargetFacilityAttrValues(<i>AttributeId</i> As Variant) As Variant</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>AttributeId</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies the ID of the attribute.</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example retrieves the "facility_desc" attribute for all target facilities and displays the values in message boxes:</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub </p>
                    <p class="Code2">Dim aryAttrs</p>
                    <p class="Code2">aryAttrs = FacNavBar.X.GetTargetFacilityAttrValues("facility_desc")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim i</p>
                    <p class="Code2">For i = 0 To UBound(aryAttrs)</p>
                    <p class="Code3">MsgBox aryAttrs(i)</p>
                    <p class="Code2">Next</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="NavNext"></a>NavNext</h3>
        <p>The <b>NavNext</b> method navigates to the next target facility or node. Returns the number of the lowest-level combo box whose selection changed. The <b>EventOnSelChangeLevel</b> event is triggered when NavNext is called.</p>
        <h4>Syntax</h4>
        <p class="Syntax">NavNext(<i>Wrap</i> As Boolean) As Integer</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Wrap</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies whether the control considers the list of target facilities to be wrapped (in other words, is the last item in the list considered to be the "previous" item of the first item in the list, and vice versa).</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example navigates to the next target facility when the Nav &gt;&gt; button is clicked. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub btnNavNext_EventClick()</p>
                    <p class="Code">Dim This : Set This = btnNavNext</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">Dim iLevel</p>
                    <p class="Code2">iLevel = FacNavBar.X.NavNext(ckbNavWrap.Value)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">UpdateUI()</p>
                    <p class="Code2">LoadGrid()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table>
        <h3><a name="NavPrev"></a>NavPrev</h3>
        <p>The <b>NavPrev</b> method navigates to the previous target facility or node. Returns the number of the lowest-level combo box whose selection changed. The <b>EventOnSelChangeLevel</b> event is triggered when NavPrev is called.</p>
        <h4>Syntax</h4>
        <p class="Syntax">NavPrev(<i>Wrap</i> As Boolean) As Integer</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Wrap</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies whether the control considers the list of target facilities to be wrapped (in other words, is the last item in the list considered to be the "previous" item of the first item in the list, and vice versa).</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example navigates to the previous target facility when the Nav &lt;&lt; button is clicked. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub btnNavPrev_EventClick()</p>
                    <p class="Code">Dim This : Set This = btnNavPrev</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">Dim iLevel</p>
                    <p class="Code2">iLevel = FacNavBar.X.NavPrev(ckbNavWrap.Value)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">UpdateUI</p>
                    <p class="Code2">LoadGrid()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="PersistRunTimeConfig"></a>PersistRunTimeConfig</h3>
        <p>The <b>PersistRunTimeConfig</b> method saves the current control configuration snapshot to the run-time registry key.</p>
        <h4>Syntax</h4>
        <p class="Syntax">PersistRunTimeConfig() As Boolean</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example persists the run-time configuration when the Persist Run-Time Cfg button is clicked. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub btnPersistRTimeCfg_EventClick()</p>
                    <p class="Code">Dim This : Set This = btnPersistRTimeCfg</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">FacNavBar.X.PersistRunTimeCfg</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="Restart"></a>Restart</h3>
        <p>For objects, the <b>Restart</b> method stops and restarts Run mode. For <a href="../CygNet Studio/TheFrame TheView.htm">TheFrame/TheView</a>, the <b>Restart</b> method restarts TheView with new site, service, and facility information, if applicable.</p>
        <h4>Syntax</h4>
        <p class="Syntax">Restart()</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example restarts Run mode.</p>
        <table class="Code">
            <tr>
                <td>
                    <p>Sub </p>
                    <p class="Code2">Restart()</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="RestoreDesignTimeConfig"></a>RestoreDesignTimeConfig</h3>
        <p>The <b>RestoreDesignTimeConfig</b> method reverts the control to its design-time configuration.</p>
        <h4>Syntax</h4>
        <p class="Syntax">RestoreDesignTimeConfig() As Boolean</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example restores the design-time configuration when the Restore Design-Time Cfg button is clicked. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub btnRestoreDTimeCfg_EventClick()</p>
                    <p class="Code">Dim This : Set This = btnRestoreDTimeCfg</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">FacNavBar.X.RestoreDesignTimeCfg</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">UpdateUI()</p>
                    <p class="Code2">ListInitialFilterRules()</p>
                    <p class="Code2">LoadGrid()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="RestoreRunTimeConfig"></a>RestoreRunTimeConfig</h3>
        <p>The <b>RestoreRunTimeConfig</b> method reverts the control back to the last run-time configuration.</p>
        <h4>Syntax</h4>
        <p class="Syntax">RestoreRunTimeConfig() As Boolean</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example restores the run-time configuration when the Restore Run-Time Cfg button is clicked. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub btnRestoreRTimeCfg_EventClick()</p>
                    <p class="Code">Dim This : Set This = btnRestoreRTimeCfg</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">FacNavBar.X.RestoreRunTimeCfg()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">UpdateUI()</p>
                    <p class="Code2">ListInitialFilterRules()</p>
                    <p class="Code2">LoadGrid()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table>
        <h3><a name="SelNext"></a>SelNext</h3>
        <p>
            <p>The <b>SelNext</b> method selects the next item (facility attribute value or node) for the specified level. If Wrap is True, the selection wraps to the first item, if necessary. The <b>EventOnSelChangeLevel</b> event is triggered when SelNext is called.</p>
        </p>
        <h4>Syntax</h4>
        <p class="Syntax">SelNext(<i>Level</i> As Short, <i>Wrap</i> As Boolean) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Level</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The level at which to select the next facility attribute value.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>Wrap</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>Specifies whether the control considers the list of target facilities to be wrapped (in other words, is the last item in the list considered to be the "previous" item of the first item in the list, and vice versa).</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example selects the next facility attribute value at the specified level when the Sel &gt;&gt; button is clicked. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub btnNext_EventClick()</p>
                    <p class="Code">Dim This : Set This = btnNext</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">Dim iRet</p>
                    <p class="Code2">iRet = FacNavBar.X.SelNext(eboLevel.Text, ckbWrap.Value)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">UpdateUI()</p>
                    <p class="Code2">LoadGrid()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table>
        <h3><a name="SelPrev"></a>SelPrev</h3>
        <p>The <b>SelPrev</b> method selects the previous item (facility attribute value or node) for the specified level. If Wrap is True, the selection wraps to the last item, if necessary. The <b>EventOnSelChangeLevel</b> event is triggered when SelPrev is called.</p>
        <h4>Syntax</h4>
        <p class="Syntax">SelPrev(<i>Level</i> As Short, <i>Wrap</i> As Boolean) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Level</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The level at which to select the previous facility attribute value.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>Wrap</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>Specifies whether the control considers the list of target facilities to be wrapped (in other words, is the last item in the list considered to be the "previous" item of the first item in the list, and vice versa).</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example selects the previous facility attribute value at the specified level when the Sel &lt;&lt; button is clicked. This example is taken from the <a href="CxHmiFac FacNavBar Example.htm">FacNavBar Example</a>.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub btnPrev_EventClick()</p>
                    <p class="Code">Dim This : Set This = btnPrev</p>
                    <p class="Code">&#160;</p>
                    <p class="Code2">Dim iRet</p>
                    <p class="Code2">iRet = FacNavBar.X.SelPrev(eboLevel.Text, True)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">UpdateUI()</p>
                    <p class="Code2">LoadGrid()</p>
                    <p class="Code">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="SelTargetFacility"></a>SelTargetFacility</h3>
        <p>The <b>SelectTargetFacility</b> method selects the item in the target combo box that corresponds to the specified facility tag.</p>
        <h4>Syntax</h4>
        <p class="Syntax">SelTargetFacility(<i>FacilityTag</i> As String) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>FacilityTag</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The facility tag that corresponds to the item being selected in the target combo box.</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example selects the facility with the tag "CYGDEMO.UIS::MYFACILITY":</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub </p>
                    <p class="Code2">FacNavBar.X.SelTargetFacility("CYGDEMO.UIS::MYFACILITY")</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="SetFacNavBarCustomAttribute"></a>SetFacNavBarCustomAttribute</h3>
        <p>The <b>SelFacNavBarCustomAttribute</b> method sets the value of a facility navigation bar custom attribute.</p>
        <h4>Syntax</h4>
        <p class="Syntax">SetFacNavBarCustomAttribute(<i>AttributeNameOrDesc</i> As String, <i>Value</i> As String)</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>AttributeNameOrDesc</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>Specifies the name or description of the attribute.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>Value</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                    <p>Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>Specifies the value to set.</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example sets the value of custom attribute "Custom Attribute 0" to "100":</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub </p>
                    <p class="Code2">FacNavBar.X.SetFacNavBarCustomAttribute "Custom Attribute 0", "100"</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table>
        <h3><a name="Start"></a>Start</h3>
        <p>The <b>Start</b> method configures the control and starts Run mode.</p>
        <h4>Syntax</h4>
        <p class="Syntax">Start()</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example starts Run mode:</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub </p>
                    <p class="Code2">Start()</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="Stop"></a>Stop</h3>
        <p>The <b>Stop</b> method stops Run mode.</p>
        <h4>Syntax</h4>
        <p class="Syntax">Stop()</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example stops Run mode:</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub </p>
                    <p class="Code2">Stop()</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <hr width="100%" size="1" />
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/NoBorder8.css');" summary="MasterFooter" class="TableStyle-NoBorder8" cellspacing="0">
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <tbody>
                <tr class="TableStyle-NoBorder8-Body-Body1">
                    <td class="TableStyle-NoBorder8-BodyB-Column1-Body1">
                        <p><a href="mailto:softwaredocs.feedback@weatherford.com?subject=Documentation%20feedback"><img src="../../Resources/Images/Shared Images/Feedback_footer.png" alt="Let us know how we can improve this topic." title="Let us know how we can improve this topic." class="Inline" /></a>
                        </p>
                    </td>
                    <td class="TableStyle-NoBorder8-BodyA-Column1-Body1">
                        <p class="MasterFooterContact"><a href="https://www.weatherford.com/en/products-and-services/production/production-4-0/iot-scada-platform//" target="_blank"><img src="../../Resources/Images/Shared Images/WFT_31x21.png" alt="CygNet at weatherford.com" title="CygNet at weatherford.com" /></a>
                        </p>
                        <p class="MasterFooterContact">© <span class="CygNetVariablesCurrentYear">2020</span> Weatherford. All rights reserved.</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>