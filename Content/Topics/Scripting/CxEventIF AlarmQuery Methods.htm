<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en" xml:lang="en" data-mc-search-type="Stem" data-mc-help-system-file-name="CygNet.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Scripting|CxEventIF|AlarmQuery Object">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>AlarmQuery Methods</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/HelpTable2.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/NoBorder8.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/HTML5.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><a class="MCBreadcrumbsLink" href="CygNet Scripting.htm">Scripting</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="CxEventIF.htm">CxEventIF</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="CxEventIF AlarmQuery Object.htm">AlarmQuery Object</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">AlarmQuery Methods</span>
        </div>
        <h2>AlarmQuery Methods</h2>
        <p>The <b>AlarmQuery</b> object contains the following methods:</p>
        <ul>
            <li class="HyperlinkList" value="1"><a href="#CancelAlarmFiltering" class="selected">CancelAlarmFiltering</a>
            </li>
            <li class="HyperlinkList" value="2"><a href="#ClearQueryResults" class="selected">ClearQueryResults</a>
            </li>
            <li class="HyperlinkList" value="3"><a href="#CreateAlarmFilter" class="selected">CreateAlarmFilter</a>
            </li>
            <li class="HyperlinkList" value="4"><a href="#DestroyAlarmFilter" class="selected">DestroyAlarmFilter</a>
            </li>
            <li class="HyperlinkList" value="5"><a href="#GetAlarmFilterAsXml" class="selected">GetAlarmFilterAsXml</a>
            </li>
            <li class="HyperlinkList" value="6"><a href="#GetAlarmInfoAsXml" class="selected">GetAlarmInfoAsXml</a>
            </li>
            <li class="HyperlinkList" value="7"><a href="#GetFilteredAlarmList" class="selected">GetFilteredAlarmList</a>
            </li>
            <li class="HyperlinkList" value="8"><a href="#GetFilteredAlarmList" class="selected">GetFilteredAlarmListSize</a>
            </li>
            <li class="HyperlinkList" value="9"><a href="#IsAlarmFilterFiltering" class="selected">IsAlarmFilterFiltering</a>
            </li>
            <li class="HyperlinkList" value="10"><a href="#IsAlarmFilterRunning" class="selected">IsAlarmFilterRunning</a>
            </li>
            <li class="HyperlinkList" value="11"><a href="#SetAlarmFilterAsXml" class="selected">SetAlarmFilterAsXml</a>
            </li>
            <li class="HyperlinkList" value="12"><a href="#SetAlarmSiteServices" class="selected">SetAlarmSiteServices</a>
            </li>
            <li class="HyperlinkList" value="13"><a href="#SetNotificationPoint" class="selected">SetNotificationPoint</a>
            </li>
            <li class="HyperlinkList" value="14"><a href="#StartAlarmFiltering" class="selected">StartAlarmFiltering</a>
            </li>
        </ul>
        <div class="Note">
            <p><span class="NoteHeading">Note:</span> Some of the examples in this topic use the WScript.Sleep statement, which is not recommended for use when scripting in CygNet Studio or in the HSS. Use TheView <a href="../CygNet Studio/Events.htm#EventTimer">EventTimer</a> instead.</p>
        </div>
        <h3><a name="CancelAlarmFiltering"></a>CancelAlarmFiltering</h3>
        <p>The <b>CancelAlarmFiltering</b> method cancels the filtering of alarms.</p>
        <h4>Syntax</h4>
        <p class="Syntax">CancelAlarmFiltering()</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example cleans up the query after it is finished, by canceling the filtering destroying the filter.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="ClearQueryResults"></a>ClearQueryResults</h3>
        <p>The <b>ClearQueryResults</b> method clears the results of a previous query and initializes the processing flags. The query (filter) itself is not cleared.</p>
        <h4>Syntax</h4>
        <p class="Syntax">ClearQueryResults()</p>
        <h4>Remark</h4>
        <p>Clearing the results of a previous query is good programming practice if multiple queries are to be performed.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example addresses clearing the query results before retrieving data from the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' query is all set up</p>
                    <p class="Code2">While bIsFiltering</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code3">WScript.Sleep(1000)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code3">' call before retrieving data</p>
                    <p class="Code3">AlarmQuery.ClearQueryResults()</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code3">' retrieve data, etc.</p>
                    <p class="Code2">Wend</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="CreateAlarmFilter"></a>CreateAlarmFilter</h3>
        <p>The <b>CreateAlarmFilter</b> method creates a new alarm filter thread.</p>
        <h4>Syntax</h4>
        <p class="Syntax">CreateAlarmFilter(StartTime As Date, EndTime As Date, UpdateInterval As Integer) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>StartTime</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The earliest date/time of alarms to be filtered. Note that this value can either be a string in the machine-chosen date/time format (i.e. "MM/DD/YY hh:mm:ss" for a machine using the American date/time format), or it can be a Date returned from the CDate function.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>EndTime</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>The latest date/time of alarms to be filtered. Note that this value can either be a string in the machine-chosen date/time format (i.e. "MM/DD/YY hh:mm:ss" for a machine using the American date/time format), or it can be a Date returned from the CDate function.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>UpdateInterval</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The periodic run interval in seconds. If this value is zero, the query will only run once.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>The StartTime and EndTime parameters will be ignored if the "ReportTime" property is used in the filter passed into SetAlarmFilterAsXml and the FilterContainsDates parameter of that method is set to "true" (see <a href="#SetAlarmFilterAsXml" class="selected">SetAlarmFilterAsXml</a>).</p>
        <p>The StartTime and EndTime parameters do not get included into the filter until <a href="#SetAlarmFilterAsXml" class="selected">SetAlarmFilterAsXml</a> is called. If no additional filtering (besides start/end times and site services) is desired, call <a href="#SetAlarmFilterAsXml" class="selected">SetAlarmFilterAsXml</a> with a blank filter string and FilterContainsDates parameter set to false after calling <a href="#CreateAlarmFilter" class="selected">CreateAlarmFilter</a> and <a href="#SetAlarmSiteServices" class="selected">SetAlarmSiteServices</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the XML filter, setting the notification point, starting the query, retrieving data, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim date1, date2</p>
                    <p class="Code2">date1 = Date - 10</p>
                    <p class="Code2">date2 = Date</p>
                    <p class="Code2">Dim startDate, endDate</p>
                    <p class="Code2">startDate = CDate(date1)</p>
                    <p class="Code2">endDate = CDate(date2)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'create alarm filter for alarms between now and 10 days ago</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = AlarmQuery.CreateAlarmFilter(startDate, endDate, 5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'initialize the filter (this step is good practice)</p>
                    <p class="Code2">AlarmQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the service-specific filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetAlarmFilterAsXml for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = AlarmQuery.SetAlarmFilterAsXml(g_xmlFilter, false)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.SetAlarmSiteServices("CYGDEMO.CAS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set notification point</p>
                    <p class="Code2">AlarmQuery.SetNotificationPoint "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.StartAlarmFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'check to see if filter has been set up correctly</p>
                    <p class="Code2">Dim bIsFiltering, bIsRunning</p>
                    <p class="Code2">bIsFiltering = AlarmQuery.IsAlarmFilterFiltering()</p>
                    <p class="Code2">bIsRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bAlarmsRetrieved</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bAlarmsRetrieved = AlarmQuery.GetFilteredAlarmList(pvTagList)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim nSize, bSizeRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bSizeRetrieved = AlarmQuery.GetFilteredAlarmListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvAlarmInfoXml, bAlarmRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code5">pvAlarmInfoXml = ""</p>
                    <p class="Code5">bAlarmRetrieved = AlarmQuery.GetAlarmInfoAsXml(strTag, pvAlarmInfoXml)</p>
                    <p class="Code5">MsgBox pvAlarmInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">AlarmQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="DestroyAlarmFilter"></a>DestroyAlarmFilter</h3>
        <p>The <b>DestroyAlarmFilter</b> method terminates execution of the filter thread, and waits for the specified number of seconds.</p>
        <h4>Syntax</h4>
        <p class="Syntax">DestroyAlarmFilter(TimeToWaitInSeconds As Integer) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>TimeToWaitInSeconds</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The number of seconds to wait for the alarm query to terminate. This value must be within the range [1 - 100].</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method will hang for the specified number of seconds while the filter thread terminates. If the filter thread has not terminated by the time the interval has expired, this method will return false and the filter thread will continue to attempt to terminate in the background. Call this method as part of the cleanup routine after querying is finished.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example cleans up the query after it is finished, by canceling the filtering and destroying the filter.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetAlarmFilterAsXml"></a>GetAlarmFilterAsXml</h3>
        <p>The <b>GetAlarmFilterAsXml</b> method returns the alarm filter as an XML string.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetAlarmFilterAsXml(XmlFilter As Variant) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>XmlFilter</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The XML string returned from this method.</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example sets the alarm filter, then retrieves it from the query and displays it.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' set the alarm filter from an existing XML (see the documentation for</p>
                    <p class="Code2">' SetAlarmFilterAsXml for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = AlarmQuery.SetAlarmFilterAsXml(g_xmlAlarmFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim xmlAlarmFilter</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If (bSetFilter) Then</p>
                    <p class="Code3">bGetFilter = AlarmQuery.GetAlarmFilterAsXml(xmlAlarmFilter)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code3">If (bGetFilter) Then</p>
                    <p class="Code4">MsgBox xmlAlarmFilter</p>
                    <p class="Code3">End If</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetAlarmInfoAsXml"></a>GetAlarmInfoAsXml</h3>
        <p>The <b>GetAlarmInfoAsXml</b> method returns alarm information for the given tag.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetAlarmInfoAsXml(Tag As String, AlarmInfoXml As Variant) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Tag</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>A fully qualified point tag.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>AlarmInfoXml</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>The alarm information for the tag returned as an XML string.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>After querying is complete, this method is used in conjunction with <a href="#GetFilteredAlarmList" class="selected">GetFilteredAlarmList</a> to display the results of the query.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the XML filter, setting the notification point, starting the query, retrieving data, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim date1, date2</p>
                    <p class="Code2">date1 = Date - 10</p>
                    <p class="Code2">date2 = Date</p>
                    <p class="Code2">Dim startDate, endDate</p>
                    <p class="Code2">startDate = CDate(date1)</p>
                    <p class="Code2">endDate = CDate(date2)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'create alarm filter for alarms between now and 10 days ago</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = AlarmQuery.CreateAlarmFilter(startDate, endDate, 5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'initialize the filter (this step is good practice)</p>
                    <p class="Code2">AlarmQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the service-specific filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetAlarmFilterAsXml for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = AlarmQuery.SetAlarmFilterAsXml(g_xmlFilter, false)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.SetAlarmSiteServices("CYGDEMO.CAS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set notification point</p>
                    <p class="Code2">AlarmQuery.SetNotificationPoint "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.StartAlarmFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'check to see if filter has been set up correctly</p>
                    <p class="Code2">Dim bIsFiltering, bIsRunning</p>
                    <p class="Code2">bIsFiltering = AlarmQuery.IsAlarmFilterFiltering()</p>
                    <p class="Code2">bIsRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bAlarmsRetrieved</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bAlarmsRetrieved = AlarmQuery.GetFilteredAlarmList(pvTagList)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim nSize, bSizeRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bSizeRetrieved = AlarmQuery.GetFilteredAlarmListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvAlarmInfoXml, bAlarmRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code5">pvAlarmInfoXml = ""</p>
                    <p class="Code5">bAlarmRetrieved = AlarmQuery.GetAlarmInfoAsXml(strTag, pvAlarmInfoXml)</p>
                    <p class="Code5">MsgBox pvAlarmInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">AlarmQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetFilteredAlarmList"></a>GetFilteredAlarmList</h3>
        <p>The <b>GetFilteredAlarmList</b> method returns the list of filtered alarms as fully qualified point tags.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetFilteredAlarmList(SiteSvcKeyList As Array) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>SiteSvcKeyList</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>A list of fully qualified point tags representing the filtered alarms.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>After querying is complete, this method is used in conjunction with <a href="#GetAlarmInfoAsXml" class="selected">GetAlarmInfoAsXml</a> to display the results of the query.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the XML filter, setting the notification point, starting the query, retrieving data, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim date1, date2</p>
                    <p class="Code2">date1 = Date - 10</p>
                    <p class="Code2">date2 = Date</p>
                    <p class="Code2">Dim startDate, endDate</p>
                    <p class="Code2">startDate = CDate(date1)</p>
                    <p class="Code2">endDate = CDate(date2)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'create alarm filter for alarms between now and 10 days ago</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = AlarmQuery.CreateAlarmFilter(startDate, endDate, 5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'initialize the filter (this step is good practice)</p>
                    <p class="Code2">AlarmQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the service-specific filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetAlarmFilterAsXml for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = AlarmQuery.SetAlarmFilterAsXml(g_xmlFilter, false)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.SetAlarmSiteServices("CYGDEMO.CAS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set notification point</p>
                    <p class="Code2">AlarmQuery.SetNotificationPoint "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.StartAlarmFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'check to see if filter has been set up correctly</p>
                    <p class="Code2">Dim bIsFiltering, bIsRunning</p>
                    <p class="Code2">bIsFiltering = AlarmQuery.IsAlarmFilterFiltering()</p>
                    <p class="Code2">bIsRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bAlarmsRetrieved</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bAlarmsRetrieved = AlarmQuery.GetFilteredAlarmList(pvTagList)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim nSize, bSizeRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bSizeRetrieved = AlarmQuery.GetFilteredAlarmListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvAlarmInfoXml, bAlarmRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code5">pvAlarmInfoXml = ""</p>
                    <p class="Code5">bAlarmRetrieved = AlarmQuery.GetAlarmInfoAsXml(strTag, pvAlarmInfoXml)</p>
                    <p class="Code5">MsgBox pvAlarmInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code4">'clear the query and the cache</p>
                    <p class="Code4">AlarmQuery.ClearQueryResults</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3>GetFilteredAlarmListSize</h3>
        <p>The <b>GetFilteredAlarmListSize</b> method returns the size of the filtered alarm list as an integer</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetFilteredAlarmListSize(Size As Integer) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Size</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The size of the filtered alarm list.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>The filtered alarm list itself can be obtained via <a href="#GetFilteredAlarmList" class="selected">GetFilteredAlarmList</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the XML filter, setting the notification point, starting the query, retrieving data, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim date1, date2</p>
                    <p class="Code2">date1 = Date - 10</p>
                    <p class="Code2">date2 = Date</p>
                    <p class="Code2">Dim startDate, endDate</p>
                    <p class="Code2">startDate = CDate(date1)</p>
                    <p class="Code2">endDate = CDate(date2)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'create alarm filter for alarms between now and 10 days ago</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = AlarmQuery.CreateAlarmFilter(startDate, endDate, 5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'initialize the filter (this step is good practice)</p>
                    <p class="Code2">AlarmQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the service-specific filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetAlarmFilterAsXml for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = AlarmQuery.SetAlarmFilterAsXml(g_xmlFilter, false)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.SetAlarmSiteServices("CYGDEMO.CAS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set notification point</p>
                    <p class="Code2">AlarmQuery.SetNotificationPoint "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.StartAlarmFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'check to see if filter has been set up correctly</p>
                    <p class="Code2">Dim bIsFiltering, bIsRunning</p>
                    <p class="Code2">bIsFiltering = AlarmQuery.IsAlarmFilterFiltering()</p>
                    <p class="Code2">bIsRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bAlarmsRetrieved</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bAlarmsRetrieved = AlarmQuery.GetFilteredAlarmList(pvTagList)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim nSize, bSizeRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bSizeRetrieved = AlarmQuery.GetFilteredAlarmListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvAlarmInfoXml, bAlarmRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code5">pvAlarmInfoXml = ""</p>
                    <p class="Code5">bAlarmRetrieved = AlarmQuery.GetAlarmInfoAsXml(strTag, pvAlarmInfoXml)</p>
                    <p class="Code5">MsgBox pvAlarmInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">AlarmQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="IsAlarmFilterFiltering"></a>IsAlarmFilterFiltering</h3>
        <p>The <b>IsAlarmFilterFiltering</b> method returns true if the entire query process has been set up and is enabled to run.</p>
        <h4>Syntax</h4>
        <p class="Syntax">IsAlarmFilterFiltering() As Boolean</p>
        <h4>Remark</h4>
        <p>This method will return true after a successful call to <a href="#StartAlarmFiltering" class="selected">StartAlarmFiltering</a>. Once the filtering has begun, this method will only return false if the filtering has been canceled using <a href="#CancelAlarmFiltering" class="selected">CancelAlarmFiltering</a>, or if the filter has been destroyed using <a href="#DestroyAlarmFilter" class="selected">DestroyAlarmFilter</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the XML filter, setting the notification point, starting the query, retrieving data, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim date1, date2</p>
                    <p class="Code2">date1 = Date - 10</p>
                    <p class="Code2">date2 = Date</p>
                    <p class="Code2">Dim startDate, endDate</p>
                    <p class="Code2">startDate = CDate(date1)</p>
                    <p class="Code2">endDate = CDate(date2)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'create alarm filter for alarms between now and 10 days ago</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = AlarmQuery.CreateAlarmFilter(startDate, endDate, 5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'initialize the filter (this step is good practice)</p>
                    <p class="Code2">AlarmQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the service-specific filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetAlarmFilterAsXml for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = AlarmQuery.SetAlarmFilterAsXml(g_xmlFilter, false)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.SetAlarmSiteServices("CYGDEMO.CAS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set notification point</p>
                    <p class="Code2">AlarmQuery.SetNotificationPoint "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.StartAlarmFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'check to see if filter has been set up correctly</p>
                    <p class="Code2">Dim bIsFiltering, bIsRunning</p>
                    <p class="Code2">bIsFiltering = AlarmQuery.IsAlarmFilterFiltering()</p>
                    <p class="Code2">bIsRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bAlarmsRetrieved</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bAlarmsRetrieved = AlarmQuery.GetFilteredAlarmList(pvTagList)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim nSize, bSizeRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bSizeRetrieved = AlarmQuery.GetFilteredAlarmListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvAlarmInfoXml, bAlarmRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvAlarmInfoXml = ""</p>
                    <p class="Code5">bAlarmRetrieved = AlarmQuery.GetAlarmInfoAsXml(strTag, pvAlarmInfoXml)</p>
                    <p class="Code5">MsgBox pvAlarmInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">AlarmQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="IsAlarmFilterRunning"></a>IsAlarmFilterRunning</h3>
        <p>The <b>IsAlarmFilterRunning</b> method returns true if the alarm query thread is running.</p>
        <h4>Syntax</h4>
        <p class="Syntax">IsAlarmFilterRunning() As Boolean</p>
        <h4>Remark</h4>
        <p>The alarm query thread is executed after an alarm filter is created; therefore, after an alarm filter is created, this method will only return false if the filter has been destroyed using <a href="#DestroyAlarmFilter" class="selected">DestroyAlarmFilter</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example creates an alarm filter, checks that it is running, destroys it, and checks that it is no longer running.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = AlarmQuery.CreateAlarmFilter("10/1/2010", "10/4/2010", 5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bRunning</p>
                    <p class="Code2">bRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">MsgBox bRunning 'should be "True"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">bRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">MsgBox bRunning 'should be "False"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="SetAlarmFilterAsXml"></a>SetAlarmFilterAsXml</h3>
        <p>The <b>SetAlarmFilterAsXml</b> method sets the alarm filter from an XML string.</p>
        <h4>Syntax</h4>
        <p class="Syntax">SetAlarmFilterAsXml(XmlFilter As String, FilterContainsDates As Boolean) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>XmlFilter</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The XML string representing the alarm filter to be set.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>FilterContainsDates</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>Specify "true" if the XmlFilter parameter contains a rule for the "ReportTime" property. If this parameter is set to "false", the filter will use the dates specified in the parameters of <a href="#CreateAlarmFilter" class="selected">CreateAlarmFilter</a>.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method returns false if the XML filter is invalid.</p>
        <p>The following is an example of an XML alarm filter.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;ExportedRules ruleDataIdentifier='CAS Alarm Rules'&gt;</p>
                    <p class="Code2">&lt;Rules enabled='true' inverted='false' op='1' name=''&gt;</p>
                    <p class="Code3">&lt;Rule enabled='true' name='' referenceAttr='0' compareToType='0' externalData='' value='9/1/2010' operator='&amp;gt;=' qualifier='Case Insensitive'&gt;</p>
                    <p class="Code4">&lt;compareItem property='ReportTime' type='0'/&gt;</p>
                    <p class="Code3">&lt;/Rule&gt;</p>
                    <p class="Code3">&lt;Rule enabled='true' name='' referenceAttr='0' compareToType='0' externalData='' value='10/1/2010' operator='&amp;lt;=' qualifier='Case Insensitive'&gt;</p>
                    <p class="Code4">&lt;compareItem property='ReportTime' type='0'/&gt;</p>
                    <p class="Code3">&lt;/Rule&gt;</p>
                    <p class="Code3">&lt;Rule enabled='true' name='' referenceAttr='0' compareToType='0' externalData='' value='HIGH_ALARM' operator='=' qualifier='Case Insensitive'&gt;</p>
                    <p class="Code4">&lt;compareItem property='AlarmCond' type='0'/&gt;</p>
                    <p class="Code3">&lt;/Rule&gt;</p>
                    <p class="Code2">&lt;/Rules&gt;</p>
                    <p class="Code">&lt;/ExportedRules&gt;</p>
                </td>
            </tr>
        </table>
        <p>This filter will select all alarms for which (ReportTime &gt;= "9/1/2010" AND ReportTime &lt;= "10/1/2010" AND AlarmCond = "HIGH_ALARM"). Note that the "op='1'" attribute specifies that the rules are ANDed. To OR a set of rules, use "op='0'". For a complete list of CAS XML property names, see <a href="CxEventIF CAS XML Properties.htm">CAS XML Properties</a>.</p>
        <p>A blank filter may be provided as long as FilterContainsDates parameter is set to false, start and end dates are provided with <a href="#CreateAlarmFilter" class="selected">CreateAlarmFilter</a>, and a site service list is provided with <a href="#SetAlarmSiteServices" class="selected">SetAlarmSiteServices</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the XML filter, setting the notification point, starting the query, retrieving data, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim date1, date2</p>
                    <p class="Code2">date1 = Date - 10</p>
                    <p class="Code2">date2 = Date</p>
                    <p class="Code2">Dim startDate, endDate</p>
                    <p class="Code2">startDate = CDate(date1)</p>
                    <p class="Code2">endDate = CDate(date2)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'create alarm filter for alarms between now and 10 days ago</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = AlarmQuery.CreateAlarmFilter(startDate, endDate, 5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'initialize the filter (this step is good practice)</p>
                    <p class="Code2">AlarmQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the service-specific filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetAlarmFilterAsXml for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = AlarmQuery.SetAlarmFilterAsXml(g_xmlFilter, false)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.SetAlarmSiteServices("CYGDEMO.CAS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set notification point</p>
                    <p class="Code2">AlarmQuery.SetNotificationPoint "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.StartAlarmFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'check to see if filter has been set up correctly</p>
                    <p class="Code2">Dim bIsFiltering, bIsRunning</p>
                    <p class="Code2">bIsFiltering = AlarmQuery.IsAlarmFilterFiltering()</p>
                    <p class="Code2">bIsRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bAlarmsRetrieved</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bAlarmsRetrieved = AlarmQuery.GetFilteredAlarmList(pvTagList)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim nSize, bSizeRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bSizeRetrieved = AlarmQuery.GetFilteredAlarmListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvAlarmInfoXml, bAlarmRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvAlarmInfoXml = ""</p>
                    <p class="Code5">bAlarmRetrieved = AlarmQuery.GetAlarmInfoAsXml(strTag, pvAlarmInfoXml)</p>
                    <p class="Code5">MsgBox pvAlarmInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">AlarmQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="SetAlarmSiteServices"></a>SetAlarmSiteServices</h3>
        <p>The <b>SetAlarmSiteServices</b> method defines the list of CAS site services for the alarm filter.</p>
        <h4>Syntax</h4>
        <p class="Syntax">SetAlarmSiteServices(SiteServices As String) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>SiteServices</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>A semicolon-delimited list of CAS <i>Site.Services</i> (for example, "CYGDEMO.CAS;CYGDEMO.CAS1")</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method will only return false if a filter has not yet been created.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the XML filter, setting the notification point, starting the query, retrieving data, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim date1, date2</p>
                    <p class="Code2">date1 = Date - 10</p>
                    <p class="Code2">date2 = Date</p>
                    <p class="Code2">Dim startDate, endDate</p>
                    <p class="Code2">startDate = CDate(date1)</p>
                    <p class="Code2">endDate = CDate(date2)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'create alarm filter for alarms between now and 10 days ago</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = AlarmQuery.CreateAlarmFilter(startDate, endDate, 5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'initialize the filter (this step is good practice)</p>
                    <p class="Code2">AlarmQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the service-specific filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetAlarmFilterAsXml for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = AlarmQuery.SetAlarmFilterAsXml(g_xmlFilter, false)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.SetAlarmSiteServices("CYGDEMO.CAS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set notification point</p>
                    <p class="Code2">AlarmQuery.SetNotificationPoint "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.StartAlarmFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'check to see if filter has been set up correctly</p>
                    <p class="Code2">Dim bIsFiltering, bIsRunning</p>
                    <p class="Code2">bIsFiltering = AlarmQuery.IsAlarmFilterFiltering()</p>
                    <p class="Code2">bIsRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bAlarmsRetrieved</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bAlarmsRetrieved = AlarmQuery.GetFilteredAlarmList(pvTagList)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim nSize, bSizeRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bSizeRetrieved = AlarmQuery.GetFilteredAlarmListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvAlarmInfoXml, bAlarmRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code5">pvAlarmInfoXml = ""</p>
                    <p class="Code5">bAlarmRetrieved = AlarmQuery.GetAlarmInfoAsXml(strTag, pvAlarmInfoXml)</p>
                    <p class="Code5">MsgBox pvAlarmInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">AlarmQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="SetNotificationPoint"></a>SetNotificationPoint</h3>
        <p>The <b>SetNotificationPoint</b> method sets the CVS point which will contain a notification of when the queries have completed.</p>
        <h4>Syntax</h4>
        <p class="Syntax">SetNotificationPoint(Tag As String) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Tag</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The CVS tag of the point to be used for notifications (for example, "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT").</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method will return false if the specified tag is invalid. Note that this method does not actually create a CVS point. A CVS point with the specified tag must exist prior to starting alarm filtering in order for CVS notifications to succeed.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the XML filter, setting the notification point, starting the query, retrieving data, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim date1, date2</p>
                    <p class="Code2">date1 = Date - 10</p>
                    <p class="Code2">date2 = Date</p>
                    <p class="Code2">Dim startDate, endDate</p>
                    <p class="Code2">startDate = CDate(date1)</p>
                    <p class="Code2">endDate = CDate(date2)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'create alarm filter for alarms between now and 10 days ago</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = AlarmQuery.CreateAlarmFilter(startDate, endDate, 5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'initialize the filter (this step is good practice)</p>
                    <p class="Code2">AlarmQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the service-specific filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetAlarmFilterAsXml for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = AlarmQuery.SetAlarmFilterAsXml(g_xmlFilter, false)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.SetAlarmSiteServices("CYGDEMO.CAS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set notification point</p>
                    <p class="Code2">AlarmQuery.SetNotificationPoint "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.StartAlarmFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'check to see if filter has been set up correctly</p>
                    <p class="Code2">Dim bIsFiltering, bIsRunning</p>
                    <p class="Code2">bIsFiltering = AlarmQuery.IsAlarmFilterFiltering()</p>
                    <p class="Code2">bIsRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bAlarmsRetrieved</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bAlarmsRetrieved = AlarmQuery.GetFilteredAlarmList(pvTagList)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim nSize, bSizeRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bSizeRetrieved = AlarmQuery.GetFilteredAlarmListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvAlarmInfoXml, bAlarmRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvAlarmInfoXml = ""</p>
                    <p class="Code5">bAlarmRetrieved = AlarmQuery.GetAlarmInfoAsXml(strTag, pvAlarmInfoXml)</p>
                    <p class="Code5">MsgBox pvAlarmInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">AlarmQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="StartAlarmFiltering"></a>StartAlarmFiltering</h3>
        <p>The <b>StartAlarmFiltering</b> method initiates alarm filtering on the background thread.</p>
        <h4>Syntax</h4>
        <p class="Syntax">StartAlarmFiltering() As Boolean</p>
        <h4>Remark</h4>
        <p>This method returns false if no alarm filter has been created. </p>
        <p>It is good practice to clear any previous query results with <a href="#ClearQueryResults" class="selected">ClearQueryResults</a> before calling this method. </p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the XML filter, setting the notification point, starting the query, retrieving data, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim date1, date2</p>
                    <p class="Code2">date1 = Date - 10</p>
                    <p class="Code2">date2 = Date</p>
                    <p class="Code2">Dim startDate, endDate</p>
                    <p class="Code2">startDate = CDate(date1)</p>
                    <p class="Code2">endDate = CDate(date2)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'create alarm filter for alarms between now and 10 days ago</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = AlarmQuery.CreateAlarmFilter(startDate, endDate, 5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'initialize the filter (this step is good practice)</p>
                    <p class="Code2">AlarmQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the service-specific filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetAlarmFilterAsXml for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = AlarmQuery.SetAlarmFilterAsXml(g_xmlFilter, false)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.SetAlarmSiteServices("CYGDEMO.CAS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set notification point</p>
                    <p class="Code2">AlarmQuery.SetNotificationPoint "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">AlarmQuery.StartAlarmFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'check to see if filter has been set up correctly</p>
                    <p class="Code2">Dim bIsFiltering, bIsRunning</p>
                    <p class="Code2">bIsFiltering = AlarmQuery.IsAlarmFilterFiltering()</p>
                    <p class="Code2">bIsRunning = AlarmQuery.IsAlarmFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bAlarmsRetrieved</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bAlarmsRetrieved = AlarmQuery.GetFilteredAlarmList(pvTagList)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim nSize, bSizeRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bSizeRetrieved = AlarmQuery.GetFilteredAlarmListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvAlarmInfoXml, bAlarmRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvAlarmInfoXml = ""</p>
                    <p class="Code5">bAlarmRetrieved = AlarmQuery.GetAlarmInfoAsXml(strTag, pvAlarmInfoXml)</p>
                    <p class="Code5">MsgBox pvAlarmInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">AlarmQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'alarm query is finished</p>
                    <p class="Code2">AlarmQuery.CancelAlarmFiltering()</p>
                    <p class="Code2">AlarmQuery.DestroyAlarmFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <hr width="100%" size="1" />
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/NoBorder8.css');" summary="MasterFooter" class="TableStyle-NoBorder8" cellspacing="0">
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <tbody>
                <tr class="TableStyle-NoBorder8-Body-Body1">
                    <td class="TableStyle-NoBorder8-BodyB-Column1-Body1">
                        <p><a href="mailto:softwaredocs.feedback@weatherford.com?subject=Documentation%20feedback"><img src="../../Resources/Images/Shared Images/Feedback_footer.png" alt="Let us know how we can improve this topic." title="Let us know how we can improve this topic." class="Inline" /></a>
                        </p>
                    </td>
                    <td class="TableStyle-NoBorder8-BodyA-Column1-Body1">
                        <p class="MasterFooterContact"><a href="https://www.weatherford.com/en/products-and-services/production/production-4-0/iot-scada-platform//" target="_blank"><img src="../../Resources/Images/Shared Images/WFT_31x21.png" alt="CygNet at weatherford.com" title="CygNet at weatherford.com" /></a>
                        </p>
                        <p class="MasterFooterContact">© <span class="CygNetVariablesCurrentYear">2020</span> Weatherford. All rights reserved.</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>