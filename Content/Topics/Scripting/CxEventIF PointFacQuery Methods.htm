<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en" xml:lang="en" data-mc-search-type="Stem" data-mc-help-system-file-name="CygNet.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Scripting|CxEventIF|PointFacQuery Object">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PointFacQuery Methods</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/HelpTable2.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/NoBorder8.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/HTML5.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><a class="MCBreadcrumbsLink" href="CygNet Scripting.htm">Scripting</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="CxEventIF.htm">CxEventIF</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="CxEventIF PointFacQuery Object.htm">PointFacQuery Object</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">PointFacQuery Methods</span>
        </div>
        <h2>PointFacQuery Methods</h2>
        <p>The <b>PointFacQuery</b> object contains the following methods:</p>
        <ul>
            <li class="HyperlinkList" value="1"><a href="#CancelPointFacFiltering" class="selected">CancelPointFacFiltering</a>
            </li>
            <li class="HyperlinkList" value="2"><a href="#ClearQueryResults" class="selected">ClearQueryResults</a>
            </li>
            <li class="HyperlinkList" value="3"><a href="#CreatePointFacFilter" class="selected">CreatePointFacFilter</a>
            </li>
            <li class="HyperlinkList" value="4"><a href="#DestroyPointFacFilter" class="selected">DestroyPointFacFilter</a>
            </li>
            <li class="HyperlinkList" value="5"><a href="#GetFilteredPointList" class="selected">GetFilteredPointList</a>
            </li>
            <li class="HyperlinkList" value="6"><a href="#GetFilteredPointListSize" class="selected">GetFilteredPointListSize</a>
            </li>
            <li class="HyperlinkList" value="7"><a href="#GetPointCommentAsXml" class="selected">GetPointCommentAsXml</a>
            </li>
            <li class="HyperlinkList" value="8"><a href="#GetPointInfoAsXml" class="selected">GetPointInfoAsXml</a>
            </li>
            <li class="HyperlinkList" value="9"><a href="#IsPointFacFilterFiltering" class="selected">IsPointFacFilterFiltering</a>
            </li>
            <li class="HyperlinkList" value="10"><a href="#IsPointFacFilterRunning" class="selected">IsPointFacFilterRunning</a>
            </li>
            <li class="HyperlinkList" value="11"><a href="#SetCvsSiteServices" class="selected">SetCvsSiteServices</a>
            </li>
            <li class="HyperlinkList" value="12"><a href="#SetFacilityFilter" class="selected">SetFacilityFilter</a>
            </li>
            <li class="HyperlinkList" value="13"><a href="#SetNotificationPoint" class="selected">SetNotificationPoint</a>
            </li>
            <li class="HyperlinkList" value="14"><a href="#SetPointFilter" class="selected">SetPointFilter</a>
            </li>
            <li class="HyperlinkList" value="15"><a href="#StartPointFacFiltering" class="selected">StartPointFacFiltering</a>
            </li>
        </ul>
        <div class="Note">
            <p><span class="NoteHeading">Note:</span> Some of the examples in this topic use the WScript.Sleep statement, which is not recommended for use when scripting in CygNet Studio. Use TheView <a href="../CygNet Studio/Events.htm#EventTimer">EventTimer</a> instead.</p>
        </div>
        <h3><a name="CancelPointFacFiltering"></a>CancelPointFacFiltering</h3>
        <p>The <b>CancelPointFacFiltering</b> method cancels the filtering of points.</p>
        <h4>Syntax</h4>
        <p class="Syntax">CancelPointFacFiltering()</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example cleans up the query after it is finished, by canceling the filtering destroying the filter.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' point/fac query is finished</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="ClearQueryResults"></a>ClearQueryResults</h3>
        <p>The <b>ClearQueryResults</b> method clears the results of a previous query and initializes the processing flags. The query (filter) itself is not cleared.</p>
        <h4>Syntax</h4>
        <p class="Syntax">ClearQueryResults()</p>
        <h4>Remark</h4>
        <p>Clearing the results of a previous query is good programming practice if multiple queries are to be performed.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example addresses clearing the query results before retrieving data from the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' query is all set up</p>
                    <p class="Code2">While bIsFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">WScript.Sleep(1000)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code3">' call before retrieving data</p>
                    <p class="Code3">PointFacQuery.ClearQueryResults()</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code3">' retrieve data, etc.</p>
                    <p class="Code2">Wend</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="CreatePointFacFilter"></a>CreatePointFacFilter</h3>
        <p>The <b>CreatePointFacFilter</b> method creates a new point/fac filter thread.</p>
        <h4>Syntax</h4>
        <p class="Syntax">CreatePointFacFilter(UpdateInterval As Integer) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>UpdateInterval</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The periodic run interval in seconds.</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code4">pvInfoXml = ""</p>
                    <p class="Code4">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code4">MsgBox pvInfoXml</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code4">pvInfoXml = ""</p>
                    <p class="Code4">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code4">MsgBox pvInfoXml</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code4">Next</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code4">'clear the query and the cache</p>
                    <p class="Code4">PointFacQuery.ClearQueryResults</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="DestroyPointFacFilter"></a>DestroyPointFacFilter</h3>
        <p>The <b>DestroyPointFacFilter</b> method terminates execution of the filter thread, and waits for the specified number of seconds.</p>
        <h4>Syntax</h4>
        <p class="Syntax">DestroyPointFacFilter(TimeToWaitInSeconds As Integer) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>TimeToWaitInSeconds</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The number of seconds to wait for the point fac query to terminate. This value must be within the range [1 - 100].</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method will hang for the specified number of seconds while the filter thread terminates. If the filter thread has not terminated by the time the interval has expired, this method will return false and the filter thread will continue to attempt to terminate in the background. Call this method as part of the cleanup routine after querying is finished.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example cleans up the query after it is finished, by canceling the filtering and destroying the filter.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' point/fac query is finished</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetFilteredPointList"></a>GetFilteredPointList</h3>
        <p>The <b>GetFilteredPointList</b> method returns the list of filtered points as fully qualified point tags.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetFilteredPointList(SiteSvcKeyList As Array) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>SiteSvcKeyList</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>A list of fully qualified point tags representing the filtered points.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>After querying is complete, this method is used in conjunction with <a href="#GetPointInfoAsXml" class="selected">GetPointInfoAsXml</a> and/or <a href="#GetPointCommentAsXml" class="selected">GetPointCommentAsXml</a> to display the results of the query.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">PointFacQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetFilteredPointListSize"></a>GetFilteredPointListSize</h3>
        <p>The <b>GetFilteredPointListSize</b> method returns the size of the filtered point list as an integer</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetFilteredPointListSize(Size As Integer) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Size</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The size of the filtered point list.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>The filtered point list itself can be obtained via <a href="#GetFilteredPointList" class="selected">GetFilteredPointList</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">PointFacQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetPointCommentAsXml"></a>GetPointCommentAsXml</h3>
        <p>The <b>GetPointCommentAsXml</b> method returns the point comment for the given tag.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetPointCommentAsXml(Tag As String, PointCommentXml As Variant) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Tag</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>A fully qualified point tag.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>PointCommentXml</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>The point comment for the tag returned as an XML string.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>After querying is complete, this method is used in conjunction with <a href="#GetFilteredPointList" class="selected">GetFilteredPointList</a> to display the results of the query.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">PointFacQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetPointInfoAsXml"></a>GetPointInfoAsXml</h3>
        <p>The <b>GetPointInfoAsXml</b> method returns point information for the given tag.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetPointInfoAsXml(Tag As String, PointInfoXml As Variant) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Tag</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>A fully qualified point tag.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>PointInfoXml</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>The point information for the tag returned as an XML string.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>After querying is complete, this method is used in conjunction with <a href="#GetFilteredPointList" class="selected">GetFilteredPointList</a> to display the results of the query.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">PointFacQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="IsPointFacFilterFiltering"></a>IsPointFacFilterFiltering</h3>
        <p>The <b>IsPointFacFilterFiltering</b> method returns true if the entire query process has been set up and is enabled to run.</p>
        <h4>Syntax</h4>
        <p class="Syntax">IsPointFacFilterFiltering() As Boolean</p>
        <h4>Remark</h4>
        <p>This method will return true after a successful call to <a href="#StartPointFacFiltering" class="selected">StartPointFacFiltering</a>. Once the filtering has begun, this method will only return false if the filtering has been canceled using <a href="#CancelPointFacFiltering" class="selected">CancelPointFacFiltering</a>, or if the filter has been destroyed using <a href="#DestroyPointFacFilter" class="selected">DestroyPointFacFilter</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code4">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">PointFacQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="IsPointFacFilterRunning"></a>IsPointFacFilterRunning</h3>
        <p>The <b>IsPointFacFilterFiltering</b> method returns true if the point fac query thread is running.</p>
        <h4>Syntax</h4>
        <p class="Syntax">IsPointFacFilterRunning() As Boolean</p>
        <h4>Remark</h4>
        <p>The point fac query thread is executed after a point fac filter is created; therefore, after a point fac filter is created, this method will only return false if the filter has been destroyed using <a href="#DestroyPointFacFilter" class="selected">DestroyPointFacFilter</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example creates a point fac filter, checks that it is running, destroys it, and checks that it is no longer running.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bRunning</p>
                    <p class="Code2">bRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">MsgBox bRunning 'should be "True"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">bRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">MsgBox bRunning 'should be "False"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="SetCvsSiteServices"></a>SetCvsSiteServices</h3>
        <p>The <b>SetCvsSiteServices</b> method defines the list of CVS site services for the point fac filter.</p>
        <h4>Syntax</h4>
        <p class="Syntax">SetCvsSiteServices(SiteServices As String) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>SiteServices</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>A semicolon-delimited list of CVS <i>Site.Services</i> (for example, "CYGDEMO.UIS;CYGDEMO.UIS1")</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method will only return false if a filter has not yet been created.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">PointFacQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="SetFacilityFilter"></a>SetFacilityFilter</h3>
        <p>The <b>SetFacilityFilter</b> method sets the facility filter from an XML string.</p>
        <h4>Syntax</h4>
        <p class="Syntax">SetFacilityFilterAsXml(XmlFilter As String) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>XmlFilter</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The XML string representing the facility filter to be set.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method returns false if the XML filter is invalid. The following is an example of an XML facility filter.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;ExportedRules exportTime='8/17/2019 11:26:44.630' ruleDataIdentifier='FAC Rules'&gt;</p>
                    <p class="Code2">&lt;Rules enabled='true' inverted='false' op='1' name=''&gt;</p>
                    <p class="Code3">&lt;Rule enabled='true' name='' referenceAttr='0' compareToType='0' value='GENFAC' operator='=' qualifier='Case Sensitive'&gt;</p>
                    <p class="Code4">&lt;compareItem attr='facility_type'/&gt;</p>
                    <p class="Code3">&lt;/Rule&gt;</p>
                    <p class="Code3">&lt;Rule enabled='true' name='' referenceAttr='0' compareToType='0' value='true' operator='=' qualifier='Case Sensitive'&gt;</p>
                    <p class="Code4">&lt;compareItem attr='facility_is_ref_any'/&gt;</p>
                    <p class="Code3">&lt;/Rule&gt;</p>
                    <p class="Code2">&lt;/Rules&gt;</p>
                    <p class="Code">&lt;/ExportedRules&gt;</p>
                </td>
            </tr>
        </table>
        <p>This filter will select all points for facilities for which (facility_type = "GENFAC" AND facility_is_ref_any = "true"). Note that the "op='1'" attribute specifies that the rules are ANDed. To OR a set of rules, use "op='0'". For a complete list of FAC XML property names, see <a href="CxEventIF FAC PNT XML Attributes.htm#FAC_XML_Attribute">FAC XML Attributes</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">PointFacQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="SetNotificationPoint"></a>SetNotificationPoint</h3>
        <p>The <b>SetNotificationPoint</b> method sets the CVS point which will contain a notification of when the queries have completed.</p>
        <h4>Syntax</h4>
        <p class="Syntax">SetNotificationPoint(Tag As String) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Tag</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The CVS tag of the point to be used for notifications (for example, "CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT").</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method will return false if the specified tag is invalid. Note that this method does not actually create a CVS point. A CVS point with the specified tag must exist prior to starting alarm filtering in order for CVS notifications to succeed.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">PointFacQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="SetPointFilter"></a>SetPointFilter</h3>
        <p>The <b>SetPointFilter</b> method sets the point filter from an XML string.</p>
        <h4>Syntax</h4>
        <p class="Syntax">SetPointFilter(XmlFilter As String) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>XmlFilter</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The XML string representing the point filter to be set.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method returns false if the XML filter is invalid.</p>
        <p>The following is an example of an XML point filter.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">&lt;ExportedRules exportTime='8/17/2019 11:05:13.230' ruleDataIdentifier='PNT Rules'&gt;</p>
                    <p class="Code2">&lt;Rules enabled='true' inverted='false' op='1' name=''&gt;</p>
                    <p class="Code3">&lt;Rule enabled='true' name='' referenceAttr='0' compareToType='0' value='CYGDEMO.UIS' operator='=' qualifier='Case Insensitive'&gt;</p>
                    <p class="Code4">&lt;compareItem attr='siteservice'/&gt;</p>
                    <p class="Code3">&lt;/Rule&gt;</p>
                    <p class="Code3">&lt;Rule enabled='true' name='' referenceAttr='0' compareToType='0' value='true' operator='=' qualifier='Case Insensitive'&gt;</p>
                    <p class="Code4">&lt;compareItem attr='hascomment'/&gt;</p>
                    <p class="Code3">&lt;/Rule&gt;</p>
                    <p class="Code2">&lt;/Rules&gt;</p>
                    <p class="Code">&lt;/ExportedRules&gt;</p>
                </td>
            </tr>
        </table>
        <p>This filter will select all points for which (siteservice = "CYGDEMO.UIS" AND hascomment = "true"). Note that the "op='1'" attribute specifies that the rules are ANDed. To OR a set of rules, use "op='0'". For a complete list of PNT XML property names, see <a href="CxEventIF FAC PNT XML Attributes.htm#PNT_XML_Attribute">PNT XML Attributes</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">PointFacQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="StartPointFacFiltering"></a>StartPointFacFiltering</h3>
        <p>The <b>StartPointFacFiltering</b> method initiates point fac filtering on the background thread.</p>
        <h4>Syntax</h4>
        <p class="Syntax">StartPointFacFiltering() As Boolean</p>
        <h4>Remark</h4>
        <p>This method returns false if no point fac filter has been created. </p>
        <p>It is good practice to clear any previous query results with <a href="CxEventIF AlarmQuery Methods.htm#ClearQueryResults">ClearQueryResults</a> before calling this method. </p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, setting the CVS site services, setting facility and point filters, setting the notification point, starting the query, waiting for the query to finish, displaying the results, and cleaning up the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = PointFacQuery.CreatePointFacFilter(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = PointFacQuery.IsPointFacFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.ClearQueryResults</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bSetServices</p>
                    <p class="Code2">bSetServices = PointFacQuery.SetCvsSiteServices("CYGDEMO.UIS")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the FAC filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetFacilityFilter for an example of an XML filter)</p>
                    <p class="Code2">Dim bSetFilter</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetFacilityFilter(g_xmlFacFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'set the PNT filter from an existing XML (see the documentation for</p>
                    <p class="Code2">'SetPointFilter for an example of an XML filter)</p>
                    <p class="Code2">bSetFilter = PointFacQuery.SetPointFilter(g_xmlPntFilter)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bNotificationSet</p>
                    <p class="Code2">bNotificationSet = PointFacQuery.SetNotificationPoint("CYGDEMO.UIS:EVENTIF_NOTIFICATION_PT")</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bFilteringStarted</p>
                    <p class="Code2">bFilteringStarted = PointFacQuery.StartPointFacFiltering</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">WScript.Sleep(5000) 'simulating polling the notification point</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim pvTagList, bGotList</p>
                    <p class="Code2">pvTagList = ""</p>
                    <p class="Code2">bGotList = PointFacQuery.GetFilteredPointList(pvTagList)</p>
                    <p class="Code2"> &#160;</p>
                    <p class="Code2">Dim nSize, bGotSize</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bGotSize = PointFacQuery.GetFilteredPointListSize(nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">If nSize &gt; 0 Then</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code3">Dim strTag, pvInfoXml, bRetrieved, iRec</p>
                    <p class="Code3">For iRec = 0 To UBound(pvTagList)</p>
                    <p class="Code3">&#160;</p>
                    <p class="Code4">strTag = pvTagList(iRec)</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointInfoAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">pvInfoXml = ""</p>
                    <p class="Code5">bRetrieved = PointFacQuery.GetPointCommentAsXml(strTag, pvInfoXml)</p>
                    <p class="Code5">MsgBox pvInfoXml</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">Next</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code5">'clear the query and the cache</p>
                    <p class="Code5">PointFacQuery.ClearQueryResults</p>
                    <p class="Code5">&#160;</p>
                    <p class="Code2">End If</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">PointFacQuery.CancelPointFacFiltering()</p>
                    <p class="Code2">PointFacQuery.DestroyPointFacFilter(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <hr width="100%" size="1" />
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/NoBorder8.css');" summary="MasterFooter" class="TableStyle-NoBorder8" cellspacing="0">
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <tbody>
                <tr class="TableStyle-NoBorder8-Body-Body1">
                    <td class="TableStyle-NoBorder8-BodyB-Column1-Body1">
                        <p><a href="mailto:softwaredocs.feedback@weatherford.com?subject=Documentation%20feedback"><img src="../../Resources/Images/Shared Images/Feedback_footer.png" alt="Let us know how we can improve this topic." title="Let us know how we can improve this topic." class="Inline" /></a>
                        </p>
                    </td>
                    <td class="TableStyle-NoBorder8-BodyA-Column1-Body1">
                        <p class="MasterFooterContact"><a href="https://www.weatherford.com/en/products-and-services/production/production-4-0/iot-scada-platform//" target="_blank"><img src="../../Resources/Images/Shared Images/WFT_31x21.png" alt="CygNet at weatherford.com" title="CygNet at weatherford.com" /></a>
                        </p>
                        <p class="MasterFooterContact">© <span class="CygNetVariablesCurrentYear">2020</span> Weatherford. All rights reserved.</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>