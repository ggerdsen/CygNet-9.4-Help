<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en" xml:lang="en" data-mc-search-type="Stem" data-mc-help-system-file-name="CygNet.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Scripting|CxEventIF|HistoryQuery Object">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>HistoryQuery Methods</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/HelpTable2.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/NoBorder8.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/HTML5.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><a class="MCBreadcrumbsLink" href="CygNet Scripting.htm">Scripting</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="CxEventIF.htm">CxEventIF</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="CxEventIF HistoryQuery Object.htm">HistoryQuery Object</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">HistoryQuery Methods</span>
        </div>
        <h2>HistoryQuery Methods</h2>
        <p>The <b>HistoryQuery</b> object contains the following methods:</p>
        <ul>
            <li class="HyperlinkList" value="1"><a href="#CancelHistoryFiltering" class="selected">CancelHistoryFiltering</a>
            </li>
            <li class="HyperlinkList" value="2"><a href="#CreateHistoryFilter" class="selected">CreateHistoryFilter</a>
            </li>
            <li class="HyperlinkList" value="3"><a href="#GetHistoryEntriesWithinWindow" class="selected">GetHistoryEntriesWithinWindow</a>
            </li>
            <li class="HyperlinkList" value="4"><a href="#GetHistoryEntryAsXml" class="selected">GetHistoryEntryAsXml</a>
            </li>
            <li class="HyperlinkList" value="5"><a href="#GetHistoryEntryFromWindowAsXml" class="selected">GetHistoryEntryFromWindowAsXml</a>
            </li>
            <li class="HyperlinkList" value="6"><a href="#IsHistoryFilterRunning" class="selected">IsHistoryFilterRunning</a>
            </li>
            <li class="HyperlinkList" value="7"><a href="#StartHistoryFiltering" class="selected">StartHistoryFiltering</a>
            </li>
        </ul>
        <div class="Note">
            <p><span class="NoteHeading">Note:</span> Some of the examples in this topic use the WScript.Sleep statement, which is not recommended for use when scripting in CygNet Studio. Use TheView <a href="../CygNet Studio/Events.htm#EventTimer">EventTimer</a> instead.</p>
        </div>
        <h3><a name="CancelHistoryFiltering"></a>CancelHistoryFiltering</h3>
        <p>The <b>CancelHistoryFiltering</b> method cancels the filtering of history.</p>
        <h4>Syntax</h4>
        <p class="Syntax">CancelHistoryFiltering(TimeToWaitInSeconds As Integer)</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>TimeToWaitInSeconds</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The number of seconds to wait for the history query to terminate. This value must be within the range [1 - 100].</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example cleans up the query after it is finished, by clearing the results, canceling the filtering, and destroying the filter.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' history query is finished</p>
                    <p class="Code2">HistoryQuery.CancelHistoryFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="CreateHistoryFilter"></a>CreateHistoryFilter</h3>
        <p>The <b>CreateHistoryFilter</b> method creates a new history filter thread.</p>
        <h4>Syntax</h4>
        <p class="Syntax">CreateHistoryFilter() As Boolean</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, starting the query, obtaining and displaying the results, and canceling the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------ </p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' create the filter</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = HistoryQuery.CreateHistoryFilter()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' check that the filter thread is running</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = HistoryQuery.IsHistoryFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' start filtering</p>
                    <p class="Code2">HistoryQuery.StartHistoryFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' wait for the thread to obtain history entries</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim strTag</p>
                    <p class="Code2">strTag = "CYGDEMO.UIS.00002109:MYPOINTTAG"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim MyDateS</p>
                    <p class="Code2">MyDateS = "1/7/2010"</p>
                    <p class="Code2">Dim startDate</p>
                    <p class="Code2">startDate = CDate(MyDateS)</p>
                    <p class="Code2">Dim MyDateE</p>
                    <p class="Code2">MyDateE = "6/4/2010"</p>
                    <p class="Code2">Dim endDate</p>
                    <p class="Code2">endDate = CDate(MyDateE) </p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' retrieve a single history entry</p>
                    <p class="Code2">Dim pvHistoryInfoXml, bEntryRetrieved</p>
                    <p class="Code2">pvHistoryInfoXml = ""</p>
                    <p class="Code2">bEntryRetrieved = HistoryQuery.GetHistoryEntryAsXml(strTag, startDate, pvHistoryInfoXml)</p>
                    <p class="Code2">MsgBox pvHistoryInfoXml</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' populate the internal set of entries for a given time window</p>
                    <p class="Code2">Dim nSize, bWindowRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bWindowRetrieved = HistoryQuery.GetHistoryEntriesWithinWindow(strTag, startDate, endDate, nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' iterate through the set and retrieve each individual entry</p>
                    <p class="Code2">Dim iEntry</p>
                    <p class="Code2">For iEntry = 1 To nSize </p>
                    <p class="Code3">pvHistoryInfoXml = ""</p>
                    <p class="Code3">bEntryRetrieved = HistoryQuery.GetHistoryEntryFromWindowAsXml(iEntry, pvHistoryInfoXml)</p>
                    <p class="Code3">If bEntryRetrieved Then</p>
                    <p class="Code4">MsgBox pvHistoryInfoXml</p>
                    <p class="Code3">End if</p>
                    <p class="Code2">Next</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' cancel the filtering, and wait 5 seconds for the thread to terminate</p>
                    <p class="Code2">HistoryQuery.CancelHistoryFiltering(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetHistoryEntriesWithinWindow"></a>GetHistoryEntriesWithinWindow</h3>
        <p>The <b>GetHistoryEntriesWithinWindow</b> method retrieves all of the filtered history entries for the specified tag within the specified time window.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetHistoryEntriesWithinWindow(Tag as String, StartTime As Date, EndTime As Date, Size As Integer) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Tag</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The point tag for the history entries to be retrieved</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>StartTime</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>The earliest date/time of history entries to be retrieved. Note that this value can either be a string in the machine-chosen date/time format (i.e. 'MM/DD/YY hh:mm:ss' for a machine using the American date/time format), or it can be a Date returned from the CDate function.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>EndTime</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The latest date/time of history entries to be retrieved. Note that this value can either be a string in the machine-chosen date/time format (i.e. 'MM/DD/YY hh:mm:ss' for a machine using the American date/time format), or it can be a Date returned from the CDate function.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>Size</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>The size of the list of history entries returned by this method.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method does not actually return a set of history entries. Rather, it populates an internal set of history entries, which can be accessed via <a href="#GetHistoryEntryFromWindowAsXml" class="selected">GetHistoryEntryFromWindowAsXml</a>.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, starting the query, obtaining and displaying the results, and canceling the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------ </p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' create the filter</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = HistoryQuery.CreateHistoryFilter()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' check that the filter thread is running</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = HistoryQuery.IsHistoryFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' start filtering</p>
                    <p class="Code2">HistoryQuery.StartHistoryFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' wait for the thread to obtain history entries</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim strTag</p>
                    <p class="Code2">strTag = "CYGDEMO.UIS.00002109:MYPOINTTAG"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim MyDateS</p>
                    <p class="Code2">MyDateS = "1/7/2010"</p>
                    <p class="Code2">Dim startDate</p>
                    <p class="Code2">startDate = CDate(MyDateS)</p>
                    <p class="Code2">Dim MyDateE</p>
                    <p class="Code2">MyDateE = "6/4/2010"</p>
                    <p class="Code2">Dim endDate</p>
                    <p class="Code2">endDate = CDate(MyDateE) </p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' retrieve a single history entry</p>
                    <p class="Code2">Dim pvHistoryInfoXml, bEntryRetrieved</p>
                    <p class="Code2">pvHistoryInfoXml = ""</p>
                    <p class="Code2">bEntryRetrieved = HistoryQuery.GetHistoryEntryAsXml(strTag, startDate, pvHistoryInfoXml)</p>
                    <p class="Code2">MsgBox pvHistoryInfoXml</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' populate the internal set of entries for a given time window</p>
                    <p class="Code2">Dim nSize, bWindowRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bWindowRetrieved = HistoryQuery.GetHistoryEntriesWithinWindow(strTag, startDate, endDate, nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' iterate through the set and retrieve each individual entry</p>
                    <p class="Code2">Dim iEntry</p>
                    <p class="Code2">For iEntry = 1 To nSize </p>
                    <p class="Code3">pvHistoryInfoXml = ""</p>
                    <p class="Code3">bEntryRetrieved = HistoryQuery.GetHistoryEntryFromWindowAsXml(iEntry, pvHistoryInfoXml)</p>
                    <p class="Code3">If bEntryRetrieved Then</p>
                    <p class="Code4">MsgBox pvHistoryInfoXml</p>
                    <p class="Code3">End if</p>
                    <p class="Code2">Next</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' cancel the filtering, and wait 5 seconds for the thread to terminate</p>
                    <p class="Code2">HistoryQuery.CancelHistoryFiltering(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetHistoryEntryAsXml"></a>GetHistoryEntryAsXml</h3>
        <p>The <b>GetHistoryEntryAsXml</b> method retrieves a single history entry for the specific tag and date.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetHistoryEntryAsXml(Tag as String, StartTime As Date, HistoryInfoXml As Variant) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>Tag</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The point tag for the history entries to be retrieved</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>StartTime</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>The date/time of the history entry to be retrieved. Note that this value can either be a string in the machine-chosen date/time format (i.e. 'MM/DD/YY hh:mm:ss' for a machine using the American date/time format), or it can be a Date returned from the CDate function.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>HistoryInfoXml</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The XML representation of the history entry returned by this method.</p>
                </td>
            </tr>
        </table>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, starting the query, obtaining and displaying the results, and canceling the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------ </p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' create the filter</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = HistoryQuery.CreateHistoryFilter()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' check that the filter thread is running</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = HistoryQuery.IsHistoryFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' start filtering</p>
                    <p class="Code2">HistoryQuery.StartHistoryFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' wait for the thread to obtain history entries</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim strTag</p>
                    <p class="Code2">strTag = "CYGDEMO.UIS.00002109:MYPOINTTAG"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim MyDateS</p>
                    <p class="Code2">MyDateS = "1/7/2010"</p>
                    <p class="Code2">Dim startDate</p>
                    <p class="Code2">startDate = CDate(MyDateS)</p>
                    <p class="Code2">Dim MyDateE</p>
                    <p class="Code2">MyDateE = "6/4/2010"</p>
                    <p class="Code2">Dim endDate</p>
                    <p class="Code2">endDate = CDate(MyDateE) </p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' retrieve a single history entry</p>
                    <p class="Code2">Dim pvHistoryInfoXml, bEntryRetrieved</p>
                    <p class="Code2">pvHistoryInfoXml = ""</p>
                    <p class="Code2">bEntryRetrieved = HistoryQuery.GetHistoryEntryAsXml(strTag, startDate, pvHistoryInfoXml)</p>
                    <p class="Code2">MsgBox pvHistoryInfoXml</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' populate the internal set of entries for a given time window</p>
                    <p class="Code2">Dim nSize, bWindowRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bWindowRetrieved = HistoryQuery.GetHistoryEntriesWithinWindow(strTag, startDate, endDate, nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' iterate through the set and retrieve each individual entry</p>
                    <p class="Code2">Dim iEntry</p>
                    <p class="Code2">For iEntry = 1 To nSize </p>
                    <p class="Code3">pvHistoryInfoXml = ""</p>
                    <p class="Code3">bEntryRetrieved = HistoryQuery.GetHistoryEntryFromWindowAsXml(iEntry, pvHistoryInfoXml)</p>
                    <p class="Code3">If bEntryRetrieved Then</p>
                    <p class="Code4">MsgBox pvHistoryInfoXml</p>
                    <p class="Code3">End if</p>
                    <p class="Code2">Next</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' cancel the filtering, and wait 5 seconds for the thread to terminate</p>
                    <p class="Code2">HistoryQuery.CancelHistoryFiltering(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="GetHistoryEntryFromWindowAsXml"></a>GetHistoryEntryFromWindowAsXml</h3>
        <p>The <b>GetHistoryEntryFromWindowAsXml</b> method retrieves a history entry from the set of entries populated by <a href="#GetHistoryEntriesWithinWindow" class="selected">GetHistoryEntriesWithinWindow</a>.</p>
        <h4>Syntax</h4>
        <p class="Syntax">GetHistoryEntryFromWindowAsXml(EntryNumber As Integer, HistoryInfoXml As Variant) As Boolean</p>
        <h4>Parameters</h4>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');width: 800px;" class="TableStyle-HelpTable2" cellspacing="0">
            <col style="width: 150px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col style="width: 50px;" class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Parameter</th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">Required</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tr class="TableStyle-HelpTable2-Body-Body1">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p>EntryNumber</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                    <p>The index of a history entry in the set populated by <a href="#GetHistoryEntriesWithinWindow" class="selected">GetHistoryEntriesWithinWindow</a>.</p>
                </td>
            </tr>
            <tr class="TableStyle-HelpTable2-Body-Body2">
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p>HistoryInfoXml</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                    <p style="text-align: center;">Yes</p>
                </td>
                <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                    <p>The XML representation of the history entry returned by this method.</p>
                </td>
            </tr>
        </table>
        <h4>Remark</h4>
        <p>This method is designed to be used in conjunction with <a href="#GetHistoryEntriesWithinWindow" class="selected">GetHistoryEntriesWithinWindow</a>, which populates an internal set of history entries, from which one can be retrieved using GetHistoryEntryFromWindowAsXml (this method).</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, starting the query, obtaining and displaying the results, and canceling the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------ </p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' create the filter</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = HistoryQuery.CreateHistoryFilter()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' check that the filter thread is running</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = HistoryQuery.IsHistoryFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' start filtering</p>
                    <p class="Code2">HistoryQuery.StartHistoryFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' wait for the thread to obtain history entries</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim strTag</p>
                    <p class="Code2">strTag = "CYGDEMO.UIS.00002109:MYPOINTTAG"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim MyDateS</p>
                    <p class="Code2">MyDateS = "1/7/2010"</p>
                    <p class="Code2">Dim startDate</p>
                    <p class="Code2">startDate = CDate(MyDateS)</p>
                    <p class="Code2">Dim MyDateE</p>
                    <p class="Code2">MyDateE = "6/4/2010"</p>
                    <p class="Code2">Dim endDate</p>
                    <p class="Code2">endDate = CDate(MyDateE) </p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' retrieve a single history entry</p>
                    <p class="Code2">Dim pvHistoryInfoXml, bEntryRetrieved</p>
                    <p class="Code2">pvHistoryInfoXml = ""</p>
                    <p class="Code2">bEntryRetrieved = HistoryQuery.GetHistoryEntryAsXml(strTag, startDate, pvHistoryInfoXml)</p>
                    <p class="Code2">MsgBox pvHistoryInfoXml</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' populate the internal set of entries for a given time window</p>
                    <p class="Code2">Dim nSize, bWindowRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bWindowRetrieved = HistoryQuery.GetHistoryEntriesWithinWindow(strTag, startDate, endDate, nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' iterate through the set and retrieve each individual entry</p>
                    <p class="Code2">Dim iEntry</p>
                    <p class="Code2">For iEntry = 1 To nSize </p>
                    <p class="Code3">pvHistoryInfoXml = ""</p>
                    <p class="Code3">bEntryRetrieved = HistoryQuery.GetHistoryEntryFromWindowAsXml(iEntry, pvHistoryInfoXml)</p>
                    <p class="Code3">If bEntryRetrieved Then</p>
                    <p class="Code4">MsgBox pvHistoryInfoXml</p>
                    <p class="Code3">End if</p>
                    <p class="Code2">Next</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' cancel the filtering, and wait 5 seconds for the thread to terminate</p>
                    <p class="Code2">HistoryQuery.CancelHistoryFiltering(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="IsHistoryFilterRunning"></a>IsHistoryFilterRunning</h3>
        <p>The <b>IsHistoryFilterRunning</b> method returns true if the history query thread is running.</p>
        <h4>Syntax</h4>
        <p class="Syntax">IsHistoryFilterRunning() As Boolean</p>
        <h4>Remark</h4>
        <p>The history query thread is executed after a history filter is created; therefore, after a history filter is created, this method will only return false if the filter has been destroyed using <a href="#CancelHistoryFiltering" class="selected">CancelHistoryFiltering</a>. Note that this method is checking that the thread is running, not that it is actually performing filtering.</p>
        <p class="Example">Example</p>
        <p class="Indent">The following example creates a history filter, checks that it is running, cancels it, and checks that it is no longer running.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = HistoryQuery.CreateHistoryFilter()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim bRunning</p>
                    <p class="Code2">bRunning = HistoryQuery.IsHistoryFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">MsgBox bRunning 'should be "True"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">HistoryQuery.CancelHistoryFiltering(100)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">bRunning = HistoryQuery.IsHistoryFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">MsgBox bRunning 'should be "False"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <h3><a name="StartHistoryFiltering"></a>StartHistoryFiltering</h3>
        <p>The <b>StartHistoryFiltering</b> method initiates history filtering on the background thread.</p>
        <h4>Syntax</h4>
        <p class="Syntax">StartHistoryFiltering() As Boolean</p>
        <h4>Remark</h4>
        <p>This method returns false if no history filter has been created. </p>
        <p class="Example">Example</p>
        <p class="Indent">The following example goes through the entire process of creating a filter, starting the query, obtaining and displaying the results, and canceling the query.</p>
        <table class="Code">
            <tr>
                <td>
                    <p class="Code">Sub</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------SETUP------------------ </p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' create the filter</p>
                    <p class="Code2">Dim bCreatedOk</p>
                    <p class="Code2">bCreatedOk = HistoryQuery.CreateHistoryFilter()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' check that the filter thread is running</p>
                    <p class="Code2">Dim bIsRunning</p>
                    <p class="Code2">bIsRunning = HistoryQuery.IsHistoryFilterRunning()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------EXECUTION------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' start filtering</p>
                    <p class="Code2">HistoryQuery.StartHistoryFiltering()</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' wait for the thread to obtain history entries</p>
                    <p class="Code2">WScript.Sleep(1000)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim strTag</p>
                    <p class="Code2">strTag = "CYGDEMO.UIS.00002109:MYPOINTTAG"</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">Dim MyDateS</p>
                    <p class="Code2">MyDateS = "1/7/2010"</p>
                    <p class="Code2">Dim startDate</p>
                    <p class="Code2">startDate = CDate(MyDateS)</p>
                    <p class="Code2">Dim MyDateE</p>
                    <p class="Code2">MyDateE = "6/4/2010"</p>
                    <p class="Code2">Dim endDate</p>
                    <p class="Code2">endDate = CDate(MyDateE) </p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' retrieve a single history entry</p>
                    <p class="Code2">Dim pvHistoryInfoXml, bEntryRetrieved</p>
                    <p class="Code2">pvHistoryInfoXml = ""</p>
                    <p class="Code2">bEntryRetrieved = HistoryQuery.GetHistoryEntryAsXml(strTag, startDate, pvHistoryInfoXml)</p>
                    <p class="Code2">MsgBox pvHistoryInfoXml</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' populate the internal set of entries for a given time window</p>
                    <p class="Code2">Dim nSize, bWindowRetrieved</p>
                    <p class="Code2">nSize = 0</p>
                    <p class="Code2">bWindowRetrieved = HistoryQuery.GetHistoryEntriesWithinWindow(strTag, startDate, endDate, nSize)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' iterate through the set and retrieve each individual entry</p>
                    <p class="Code2">Dim iEntry</p>
                    <p class="Code2">For iEntry = 1 To nSize </p>
                    <p class="Code3">pvHistoryInfoXml = ""</p>
                    <p class="Code3">bEntryRetrieved = HistoryQuery.GetHistoryEntryFromWindowAsXml(iEntry, pvHistoryInfoXml)</p>
                    <p class="Code3">If bEntryRetrieved Then</p>
                    <p class="Code4">MsgBox pvHistoryInfoXml</p>
                    <p class="Code3">End if</p>
                    <p class="Code2">Next</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">'-----------------RESULTS------------------</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code2">' cancel the filtering, and wait 5 seconds for the thread to terminate</p>
                    <p class="Code2">HistoryQuery.CancelHistoryFiltering(5)</p>
                    <p class="Code2">&#160;</p>
                    <p class="Code">End Sub</p>
                </td>
            </tr>
        </table><a href="#top" class="selected"><img src="../../Resources/Images/Shared Images/Arrow_top.png" style="float: right;padding-top: 6px;padding-right: 2px;padding-bottom: 2px;" title="Back to top" alt="Back to top" /></a>
        <hr width="100%" size="1" />
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/NoBorder8.css');" summary="MasterFooter" class="TableStyle-NoBorder8" cellspacing="0">
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <tbody>
                <tr class="TableStyle-NoBorder8-Body-Body1">
                    <td class="TableStyle-NoBorder8-BodyB-Column1-Body1">
                        <p><a href="mailto:softwaredocs.feedback@weatherford.com?subject=Documentation%20feedback"><img src="../../Resources/Images/Shared Images/Feedback_footer.png" alt="Let us know how we can improve this topic." title="Let us know how we can improve this topic." class="Inline" /></a>
                        </p>
                    </td>
                    <td class="TableStyle-NoBorder8-BodyA-Column1-Body1">
                        <p class="MasterFooterContact"><a href="https://www.weatherford.com/en/products-and-services/production/production-4-0/iot-scada-platform//" target="_blank"><img src="../../Resources/Images/Shared Images/WFT_31x21.png" alt="CygNet at weatherford.com" title="CygNet at weatherford.com" /></a>
                        </p>
                        <p class="MasterFooterContact">© <span class="CygNetVariablesCurrentYear">2020</span> Weatherford. All rights reserved.</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>