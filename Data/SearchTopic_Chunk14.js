define({"938":{i:0.000157635155158302,u:"../Content/Topics/CygNet Studio/Error Handling.htm",a:"Studio provides several methods of handling errors that might occur when a script is executed in Run mode. These include the ability to stop a script at a preset line using a breakpoint and the ability to debug script when a runtime error has occurred. For more information, see  Debugging and Error ...",t:"Error Handling"},"939":{i:0.000407868636500455,u:"../Content/Topics/CygNet Studio/CygNet Studio Profiling.htm",a:"CygNet Studio profiling allows screen designers the option to assist in troubleshooting events or calls from within a CygNet Studio screen via script.  A LogManager Object  allows items to be logged when they come in or out of scope. Adding these scripting options to CygNet Studio screens gives ...",t:"CygNet Studio Profiling"},"940":{i:0.000176375246136642,u:"../Content/Topics/CygNet Studio/Optimizing Facility and Point Cache Usage.htm",a:"The following notes offer best practices guidelines on how to efficiently use the CygNet global Facilities and Points objects to script facility and point data and caching of that data. There is not a one-size fits all model.  A good understanding of how the facility and point data is going to be ...",t:"Optimizing Facility and Point Cache Usage"},"941":{i:0.000162918977627136,u:"../Content/Topics/CygNet Studio/Global Scripting Objects.htm",a:"CygNet Studio contains several integrated global scripting objects. The (General) section of the Script Editor encloses global functionality for a screen — that is, code not necessarily related to or executed within individual object events. Dictionary  — Part of the  CxScript  automation library ...",t:"Global Scripting Objects"},"942":{i:0.000107909871877968,u:"../Content/Topics/CygNet Studio/LogManager Object.htm",a:"The LogManager object is used to provide script access for script-hosting applications (CygNet Studio, CygNet Vision, and the HyperPoint scripting environment). The LogManager object is intrinsic to  CygNet Studio, but can be used by any automation-compatible container (Visual Basic, Microsoft Word, ...",t:"LogManager Object"},"943":{i:8.55419475483002E-05,u:"../Content/Topics/CygNet Studio/LogManager Properties.htm",a:"LogManager Properties This object has no properties.",t:"LogManager Properties"},"944":{i:0.000735819703763873,u:"../Content/Topics/CygNet Studio/LogManager Methods.htm",a:"The LogManager methods can be used with event options in scripted CygNet Studio screens to assist with script profiling. LogManager works in conjunction with the LOGMASK.SCRIPT keyword in the HSS service configuration file. See  HSS Profiling  or  CygNet Studio Profiling  for more information. The ...",t:"LogManager Methods"},"945":{i:0.000667771351434231,u:"../Content/Topics/CygNet Studio/Workspace Object.htm",a:"Workspace Object The Workspace object is used for interacting with the Workspace’s member screens via script. More:\n\t\t Workspace Properties Workspace Methods",t:"Workspace Object"},"946":{i:0.000351004446945715,u:"../Content/Topics/CygNet Studio/Workspace Properties.htm",a:"The Workspace object contains the following properties. These optional properties serve as defaults for all of the workspace’s member screens. See  Workspace  for more information. Property SubType Description Facility String Returns/sets the default  [Facility]  for all screens in the Workspace. ...",t:"Workspace Properties"},"947":{i:0.00148033949914891,u:"../Content/Topics/CygNet Studio/Workspace Methods.htm",a:"The Workspace object contains the following methods: ExitApp GetFormByViewID ListViewIDs RaiseCustomEvent RaiseGroupCustomEvent ExitApp Syntax ExitApp()  GetFormByViewID Syntax GetFormByViewID(P1 As Long) As Object ListViewIDs Syntax ListViewIDs() As Variant RaiseCustomEvent Note: The  EventCustom  ...",t:"Workspace Methods"},"948":{i:0.000376362042650172,u:"../Content/Topics/CygNet Studio/Scripting Examples.htm",a:"This section contains examples in a tutorial format, illustrating the use of script with standard tools. The following list may be used as a reference to see which tools are included in which examples. Not all examples are applicable to all installations. For instance, those using the Group ...",t:"Scripting Examples"},"949":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Adding Automatic Polling to a Screen.htm",a:"A simple polling interval section can be added to any screen to which polling applies. An invisible timer issues a poll command on the specified polling interval for a specified duration, then stops. The Polling Duration drop-down menu also has an option to poll indefinitely on the given interval. ...",t:"Adding Automatic Polling to a Screen"},"950":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Building a Setpoint Screen.htm",a:"The following example shows how to create a simple setpoint screen for changing the value of a specific point.  See  SetPoint Button Tool  for more information about adding a configurable SetPoint button to a screen. To Build a Setpoint Screen Open CygNet Studio. In the File menu, click New to ...",t:"Building a Setpoint Screen"},"951":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Closing a Remote View.htm",a:"Using The View’s FormFind method retrieve a handle to another open screen using its (FormCode) property. The following example gets a handle to the \"MyForm\" screen, then uses its TheView object, and remotely closes it. The On Error statement ensures that the remote screen is only closed if the ...",t:"Closing a Remote View"},"952":{i:0.000182363847600318,u:"../Content/Topics/CygNet Studio/Context Menu Configuring with Script.htm",a:"Custom items can be added to a Context Menu. TheView TheView has a [ContextMenuView] property that can be configured in design time. Context menu items added here are visible when the user opens a context menu on the View, not on an object. These items are appended to the standard context menu. ...",t:"Configuring a Context Menu"},"953":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Polling All Rows in a Group Grid Control.htm",a:"Using script, the rows in a Group Grid control can be iterated and actions can be performed based on their attributes or values. The following script shows, in general, how to poll the facility for each row in a Group Grid control. Sub PollButton_EventClick() Dim This : Set This = PollButton numRows ...",t:"Polling All Rows in a Group Grid Control"},"954":{i:0.00015094567348618,u:"../Content/Topics/CygNet Studio/Scripting a HyperLink.htm",a:"The View includes a HyperLink method used to open a screen from a standard file system path or BLOB path. This method has the following parameters: TheView.HyperLink (FilePath, SiteService, FacilityID) FilePath The path of the screen file. For standard file system files, use a \"Path\\File name\" ...",t:"Scripting a HyperLink"},"955":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Selecting the Current Facility from a List.htm",a:"A simple interface can be set up for selecting a facility from a list of facilities in a UIS. Using the List Box control sets the view’s facility property accordingly and restarts the view. Note: This functionality can also be achieved using a Facility Navigation Bar. Using a List Box Control to ...",t:"Selecting the Current Facility from a List"},"956":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Sending Individual Data Group Elements.htm",a:"Sending Individual Data Group Elements Studio script can access any of the methods defined in the  CxUis ,  CxDds ,  CxVhs , and  CxGrp  libraries, assuming that they are installed. See  CygNet Scripting Guide  for more information.",t:"Sending Individual Data Group Elements"},"957":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Setting Facilities per Row in a Group Grid.htm",a:"Rows in a Group Grid control can be assigned different facilities programmatically.  The following example demonstrates how to do this. To Set Facilities Per Row in a Group Grid Control Create a new Studio screen. Add a Group Grid control to the screen. In the (ObjectCode) field, type \"gridControl.\" ...",t:"Setting Facilities Per Row in a Group Grid Control"},"958":{i:0.000157303585916831,u:"../Content/Topics/CygNet Studio/Storing and Retrieving a WatchList.htm",a:"Using script, it is possible to store the list of points in a  WatchList  object for retrieval the next time the screen is open.  The following example simplifies the concept by using a Load and a Save button, which store and retrieve the list from the Dictionary object, respectively. WatchList data ...",t:"Storing and Retrieving a WatchList"},"959":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Synchronizing the View with a Group Navigation Bar.htm",a:"The main event of the Group Navigation Bar is the EventOnSelChangeLevel event, which is fired when a user changes the current selection of the Navigation Bar. The code below makes use of this event by setting the View’s SiteService and Facility properties to match the ~ref_site, ~ref_serv, and ...",t:"Synchronizing the View with a Group Navigation Bar"},"960":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Toggling Layer Visibility in Run Mode.htm",a:"Placing objects logically on different layers can enable the user to make certain layers invisible while not working with them.  The following example uses a button on a screen to toggle the visibility of a layer containing a Tank Control and a Text control. To Toggle Layer Visibility in Run Mode ...",t:"Toggling Layer Visibility in Run Mode"},"961":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Using a Combo Box to Select a Screen.htm",a:"The following example walks through the creation of a simple screen that includes a combo box for selecting different screen files, and a button to launch the selected screen. It demonstrates how to add elements to a combo box in Edit mode and change the screen displayed by a Hyperlink button in Run ...",t:"Using a Combo Box to Select a Screen"},"962":{i:0.000152361007878995,u:"../Content/Topics/CygNet Studio/Using a ListView Control to Select Trends to Display.htm",a:"Multiple trends can be viewed on a  Trend Tool  simultaneously. This functionality can allow the user to dynamically select one or more trends to view, if script is provided to do so. Several list controls could be used in this situation to display the set of values to trend, including a List Box, a ...",t:"Using a ListView Control to Select Trends to Display"},"963":{i:8.71916671771331E-05,u:"../Content/Topics/CygNet Studio/Using a Radio Button to Select a Background.htm",a:"The following example shows how to configure a Radio Button object to have three options, and then to use the options to set the BackColor property of the View. Note: This example reads the radio button control’s Value property to determine which item is selected. In some situations, you may want to ...",t:"Using a Radio Button to Select a Background Color"},"964":{i:0.000111966591863586,u:"../Content/Topics/CygNet Studio/Using a Slider.htm",a:"A slider always has one hundred possible values along its length, regardless of its size on the screen. That is, if the value range is 0 to 100, all values selectable by the user will be integers. Tick marks are for display only; they do not represent a defined set of locations to which the slider ...",t:"Using a Slider"},"965":{i:0.000100725590822922,u:"../Content/Topics/CygNet Vision/CygNet Vision.htm",a:" CygNet Vision is the run-time companion application to  CygNet Studio , the CygNet HMI application.  Using CygNet Vision Use the CygNet Vision application to view and utilize screens created using CygNet Studio. You can only create screens in CygNet Studio, but the features are available to both ...",t:"CygNet Vision"},"966":{i:6.7197173400242E-05,u:"../Content/Topics/Data Storage/Data Storage in CygNet.htm",a:"CygNet Software uses several different database storage technologies to store its data. DBS-based Services Most CygNet services store their data in service-related databases that use the Microsoft Extensible Storage Engine (ESE) data storage technology. These databases are collectively known as the ...",t:"Data Storage in CygNet Software"},"967":{i:0.000999520651538785,u:"../Content/Topics/Data Storage for DBS-Based Services/Data Storage for DBS-Based Services.htm",a:"This section describes the data storage technology used for  DBS-based services in CygNet Software.  DBS-Based Services A DBS-based service is a generic term for a CygNet service that stores data used by other services. All DBS-based services use the same database engine, and have similar ...",t:"Data Storage for DBS-Based Services"},"968":{i:0.000129243710094185,u:"../Content/Topics/Data Storage for DBS-Based Services/Extensible Storage Engine.htm",a:"CygNet Software uses Microsoft’s Extensible Storage Engine (ESE) data storage technology for its DBS-based services and the Value History Service (VHS). ESE offers superior performance in database startup times, improved data retrieval speed, and a powerful crash recovery mechanism over the previous ...",t:"Extensible Storage Engine"},"969":{i:0.000336822261069219,u:"../Content/Topics/Data Storage for DBS-Based Services/Terminology.htm",a:"The following terms and definitions relate to ESE, the data storage technology used for DBS-based services in CygNet. Term Definition ACID  ACID (Atomicity, Consistency, Isolation, and Durability) is a set of properties that guarantee that database transactions are processed reliably. In the context ...",t:"Data Storage Terminology"},"970":{i:0.000344890343546361,u:"../Content/Topics/Data Storage for DBS-Based Services/How ESE Works.htm",a:" Before changes are made to a database file, ESE writes the changes to a transaction log file. After a change has been safely logged, it can then be written to the database file. It is common for these changes to become available to users just after the changes have been secured to the transaction ...",t:"How ESE Works"},"971":{i:0.000272477188851879,u:"../Content/Topics/Data Storage for DBS-Based Services/Transaction Logging.htm",a:"In an ESE-based datastore, transaction logging is the process of writing database update operations to a log file and then committing the changes to the database when the system allows. This information is stored in a Transaction Log file.  Transaction log files should never be manually manipulated, ...",t:"Transaction Logging"},"972":{i:0.00051032641647109,u:"../Content/Topics/Data Storage for DBS-Based Services/ESE File Types.htm",a:"The files types associated with a CygNet ESE-based datastore are listed in the table below. ESE-specific file names may vary by operating system. Directory File Extension * Description data .cfg  The service configuration file, for example, \u003cServiceName\u003e.cfg. .dat.edb  The data file containing the ...",t:"ESE File Types"},"973":{i:0.000127883360089091,u:"../Content/Topics/Data Storage for DBS-Based Services/Database Recovery.htm",a:"ESE has two types of database recovery: hard and soft.  Hard Recovery A hard database recovery is a manual process that occurs when transaction log files must be replayed into a restored online backup using a utility such as ESENTUTL. CygNet Software recommends that you use the  DBS Restore Backup  ...",t:"Database Recovery"},"974":{i:0.000573674386674857,u:"../Content/Topics/Data Storage for DBS-Based Services/Hard Recovery.htm",a:"The following information describes how hard recovery works for an ESE-based datastore. This material is derived from the MSDN Windows Desktop Development, Extensible Storage Engine Functions website. See  JetExternalRestore Function  for more information. How Hard Recovery Works There are three ...",t:"Hard Recovery"},"975":{i:0.000127883360089091,u:"../Content/Topics/Data Storage for DBS-Based Services/Backup and Restoration.htm",a:"ESE can make consistent copies of CygNet data while ESE is online and actively modifying the data state. Databases can continue to be queried and updated while the backup is being made. In CygNet there are two methods for performing a database backup:  Enabling and configuring the appropriate ...",t:"Backup and Restoration"},"976":{i:0.000127883360089091,u:"../Content/Topics/Data Storage for DBS-Based Services/Recommended Maintenance.htm",a:"CygNet Software recommends the following periodic database maintenance tasks to keep the datastore in good health. 1. Backups Perform regular full backups to ensure transaction log cleanup. See  Backup and Restore  for more information about scheduling backups. 2. Defragmentation If the database ...",t:"Recommended Maintenance"},"977":{i:0.000127883360089091,u:"../Content/Topics/Data Storage for DBS-Based Services/Frequently Asked Questions.htm",a:"The following FAQs may answer additional questions you might have about CygNet and ESE.  Do ESE-based datastores have size limitations?  An ESE-based datastore can be used in an application that never has more than 1 megabyte (MB) of data; conversely, it can contain up to 2^32 pages of 4 KB sized ...",t:"Frequently Asked Questions"},"978":{i:0.000127883360089091,u:"../Content/Topics/Data Storage for DBS-Based Services/Troubleshooting Data Storage for DBS-Based Services.htm",a:"The following tips might be helpful in solving issues that arise in data storage for DBS-based services. ESE Errors ESE errors will be recorded in the service log file. ESE errors are also called JET errors. In addition, you can use the Event Viewer (Microsoft Management Console) to see errors.  See ...",t:"Troubleshooting Data Storage for DBS-Based Services"},"979":{i:0.000164578497497341,u:"../Content/Topics/Database Utilities/Database Utilities.htm",a:"CygNet Software provides the following command-line and executable utilities for managing your database services. All CygNet utility files are found in the CygNet\\Utilities folder on your host server. CygNet Utility Name Utility File Name Description Supported Command-Line Only Utility  CygNet ...",t:"Database Utilities"},"980":{i:0.00016973610553964,u:"../Content/Topics/Database Utilities/CAPRI To DAT Utility.htm",a:"The CAPRI To DAT utility (CapriToDAT.exe) is a command-line utility that translates a platform-neutral database file (Capri) to a CygNet database file format (DAT). It performs an inverse translation on the .dat.compact file produced by the  DAT To CAPRI utility . The Capri format is a compact ...",t:"CAPRI To DAT Utility"},"981":{i:0.000314013307999428,u:"../Content/Topics/Database Utilities/DAT To CAPRI Utility.htm",a:"The DAT To CAPRI utility (DATToCapri.exe) is a command-line utility that translates CygNet database files to a platform-neutral format for transportation between operating systems or for sending the database to CygNet for technical support. The Capri format is a compact representation of a CygNet ...",t:"DAT To CAPRI Utility"},"982":{i:0.000122019000772202,u:"../Content/Topics/Database Utilities/Database Copy Utility.htm",a:"The Database Copy utility (DBSCopy.exe) is a command-line utility that copies or moves queues from one database service to another, or deletes queues from a database service. This program assumes the source and target database structures are identical. When copying or moving a queue, if the queue ...",t:"Database Copy Utility"},"983":{i:0.000122019000772202,u:"../Content/Topics/Database Utilities/Database Delete Queue Utility.htm",a:"The Database Delete Queue utility (DbDelq.exe) is a command-line utility that deletes a specific queue and optionally hex dumps the results to the screen. This utility requires the service to be running. Syntax DbDelq SITE.SERVICE key [/delete] [/dump] Parameters Parameter Definition SITE.SERVICE  ...",t:"Database Delete Queue Utility"},"984":{i:0.000122019000772202,u:"../Content/Topics/Database Utilities/Database Unlock Utility.htm",a:"The Database Unlock utility (DbUnlock.exe) is a command-line utility that unlocks a specific queue. This utility requires the service to be running. Syntax DbUnlock SITE.SERVICE key [/f] Parameters Parameter Definition SITE.SERVICE Name of the database service. key The key of the header record of ...",t:"Database Unlock Utility"},"985":{i:0.00127563820383303,u:"../Content/Topics/Database Utilities/DBS Consistency Check Utility.htm",a:"The DBS Consistency Check utility (DbsConsistencyCheck.exe) performs consistency checks between database records and index records. This utility requires that the DBS-based service be running. The DBS Consistency Check utility is stored in the CygNet\\Utilities directory (DbsConsistencyCheck.exe) on ...",t:"DBS Consistency Check Utility"},"986":{i:0.00144546779322424,u:"../Content/Topics/Database Utilities/DBS Restore Backup Utility.htm",a:"The DBS Restore Backup utility (DBSRestoreBackup.exe) is a command-line utility used to restore a database backup file from a  DBS-based service . This utility can be used to restore the database backup and apply any committed transactions between the time of the automatic backup and the time of ...",t:"DBS Restore Backup Utility"},"987":{i:0.000122019000772202,u:"../Content/Topics/Database Utilities/DBS Tx Log Management Utility.htm",a:"The DBS TxLog Management utility (DbsTxLogManagement.exe) is a command-line utility that is used to change the value for the DBS_TRANSACTION_LOG_SIZE keyword in the service configuration file. The DBS_TRANSACTION_LOG_SIZE keyword specifies the size (in megabytes) of each log file in the txlogs ...",t:"DBS TxLog Management Utility"},"988":{i:0.000410853217389685,u:"../Content/Topics/Database Utilities/File Check ESE Utility.htm",a:"The File Check ESE utility (FileChkESE.exe) is a command-line utility that performs internal logical consistency checks for the ESE-based datastore file (.dat.edb). It primarily checks for several different types of errors including, record length inconsistencies, two types of orphaned records, and ...",t:"File Check ESE Utility"},"989":{i:0.00137062413151675,u:"../Content/Topics/Database Utilities/ReIndex ESE Utility.htm",a:"The ReIndex ESE utility (ReIndexESE.exe) is a command-line utility that rebuilds the ESE Index file (inx.edb). It is only necessary to run this utility after modifying the service’s \"appl.ddl\" file, or if the  DbsConsistencyCheck  utility reports errors with  Validate Indexes  or  Orphan Check .  ...",t:"ReIndex ESE Utility"},"990":{i:0.00135918510452786,u:"../Content/Topics/Database Utilities/ESENTUTL Utility.htm",a:"The ESENTUTL utility (Esentutl.exe) is a command-line utility from Microsoft used for database maintenance and recovery operations. The Esentutl.exe tool is located in the Windows\\System32 folder (or Windows\\SysWOW64 folder if running a 64-bit operating system). Note: Be advised that if a CygNet ...",t:"ESENTUTL Utility"},"991":{i:0.00257081464720739,u:"../Content/Topics/Date and Time/Date and Time.htm",a:"The following topics provide information about date and time ranges used for history requests, timestamps, daylight saving time, and wildcards in CygNet. The format and usage for the CygNetTimeZones file is also provided. For information about using dates and times in device template files, see  ...",t:"Date and Time"},"992":{i:0.00425543611205581,u:"../Content/Topics/Date and Time/Selecting Date and Time.htm",a:"Select date and time in CygNet using the Select Date and Time dialog box. Note: The following information applies for date/time selectors with a variety of names, for example, Select Install Date  for adding meters to your system, Select Filter Starting Date/Time for file imports, or Select Date and ...",t:"Selecting Date and Time"},"993":{i:0.0015132635077316,u:"../Content/Topics/Date and Time/Timestamps.htm",a:"A timestamp is a standard sequence of characters describing date and/or time. The format of the timestamp is consistent, and stores the date/time of an event occurrence (for example, alarm, file creation, modification, etc.). CygNet stores data in Coordinated Universal Time (UTC). This is sometimes ...",t:"Using Timestamps"},"994":{i:0.00080291643294457,u:"../Content/Topics/Date and Time/Daylight Saving Time.htm",a:"CygNet recommends that the field (the host server and RTUs) does not participate in Daylight Saving Time (DST). It is typical for the client computers to participate in Daylight Saving Time even though the field does not. Regardless of your participation, however, set the CygNet host to \"field\" time ...",t:"Participating in Daylight Saving Time"},"995":{i:0.00173595700013469,u:"../Content/Topics/Date and Time/Date and Time Wildcards.htm",a:"In CygNet applications and dialog boxes where a date or time is required, the following wildcards can be used to describe or adjust date and time. Today (T) Wildcards The T wildcard can be used to represent today. The date can be adjusted using an integer (T, T+3, T-7).  Example T represents today ...",t:"Using Date and Time Wildcards"},"996":{i:0.00368887463887864,u:"../Content/Topics/Date and Time/CygNetTimeZones.xml File.htm",a:"Properly define and install a CygNetTimeZones.xml file to provide drop-down time zone options for your CygNet Software installation.  By default, a Universal Interface Service (UIS) is assumed to be in the same time zone as its associated field device. If the field device is not in the same time ...",t:"Configuring the CygNetTimeZones.xml File"},"997":{i:0.000193170786271108,u:"../Content/Topics/Devices/Devices.htm",a:"Important: Technical details about field devices (RTUs, PLCs, modems, routers, etc.) mentioned in this document are limited to only what is necessary to successfully use CygNet services to interoperate with them. It is assumed that you are familiar with your field devices. It is also assumed that ...",t:"Devices"},"998":{i:0.000171119447059455,u:"../Content/Topics/Devices/Devices Overview.htm",a:"CygNet Software provides a variety of device Equipment Interface Engines (EIEs) to perform interface functions between a large number of available field devices and your CygNet system. Equipment Interface Engines Each field device type that can be added to a CygNet system (Communication devices, ...",t:"Devices Overview"},"999":{i:0.000854788351239668,u:"../Content/Topics/Devices/64-bit Device Drivers.htm",a:"CygNet Software supports a 64-bit Universal Interface Service (UIS) and 64-bit EIE drivers. EIEs consist of a driver (Uis[EIEName]Driver64.dll), an editor (CxDds[EIEName]Editors.dll), and in the case of Remote Device EIEs, one or more device template files. The drivers and device template files ...",t:"64-bit Device Drivers"},"1000":{i:8.6652785087873E-05,u:"../Content/Topics/Devices/Installing an EIE.htm",a:"Installing an EIE Important: The following procedure explains how to install a new  EIE to an existing CygNet system that does not already include the EIE. This is not the same thing as adding a remote device instance to a Device Definition Service (DDS). Ordinarily, when you install CygNet for the ...",t:"Installing a 32-bit EIE"},"1001":{i:9.18580991844457E-05,u:"../Content/Topics/Devices/Installing an EIE 64.htm",a:"Important: The following procedure explains how to install a new 64-bit EIE to an existing CygNet system that does not already include the EIE. This is not the same thing as adding a remote device instance to a Device Definition Service (DDS). Ordinarily, when you install CygNet for the first time ...",t:"Installing a 64-bit EIE"},"1002":{i:9.45632033877401E-05,u:"../Content/Topics/Devices/Device Definition Service.htm",a:"The Device Definition Service (DDS) stores remote device, communication device, and text import records. The DDS and UIS have a one-to-one relationship. As such, to add another instance of a DDS requires that you add another UIS. The services’ relationship is defined in each service’s configuration ...",t:"Device Definition Service"},"1003":{i:0.000627468157168742,u:"../Content/Topics/Service Configuration Keywords/DDS Configuration File Keywords.htm",a:" For more information about modifying the DDS configuration file, see   Service Configuration Files . The DDS keywords are listed in the tables below: Service Info Keywords Associated Services Keywords Logging Keywords Security Keywords Replication Keywords Auditing Keywords Backup Keywords ...",t:"DDS Configuration File Keywords"},"1004":{i:0.000352864065086379,u:"../Content/Topics/Security/Device Definition Service DDS.htm",a:"Security for the DDS is administered by the Access Control Service (ACS). As with other CygNet services, security is set on an application and event basis. The application name of the DDS is defined in the service configuration file using the keyword  ACS_APPLICATION . The default is “DDS.” The ...",t:"Device Definition Service (DDS) Security"},"1005":{i:7.52350795294324E-05,u:"../Content/Topics/Devices/DDS Scripting.htm",a:"The following scripting options  are available for data interface functions related to the Device Definition Serice, dynagraphs, and data groups. COM API Description and Link CxDds The CxDds automation interface can be used for data interface functions related to the Device Definition Service (DDS). ...",t:"DDS Scripting"},"1006":{i:0.00061442027508017,u:"../Content/Topics/EIEs - Communication Devices/EIE Communication Devices.htm",a:"Note: Individual communication device EIE configurations are often referred to in the CygNet Help as \"communication devices,\" which reflects how they are displayed in the communication device editors in the Device Definition Service (DDS). CygNet does not produce any of the numerous physical ...",t:"Communication Devices"},});