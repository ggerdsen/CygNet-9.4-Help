define({"2153":{i:8.54486956108172E-05,u:"../Content/Topics/CygNet Reports/CygNet Report Files.htm",a:"Report templates are saved as .rpt files. The report template is the \"shell\" of the report. It contains the report format and shows the list of possible parameters. Report parameters specify what data to include in the report, and are user-defined. Report parameters are saved .rpx files. Any number ...",t:"CygNet Report Files"},"2154":{i:8.54486956108172E-05,u:"../Content/Topics/CygNet Reports/CygNet Reports Menu Tool and Status Bars.htm",a:"Menu Bar Menu Bar Description File Options are as follows. New - create a report parameters file Open - open an existing report parameters file Save - save the report parameters file Saves As… - save the report to a different name or location  Recent File - access recent files Exit - close the ...",t:"CygNet Reports Menu, Tool, and Status Bars"},"2155":{i:8.54486956108172E-05,u:"../Content/Topics/CygNet Reports/Report Properties.htm",a:"CygNet Reports have two types of properties you can configure. Report Parameters properties define the report type and its data content, and Export properties define how and where to send the report file.  When a  report template file (.rpt) is open, you can access the CygNet Reports Properties ...",t:"Report Properties"},"2156":{i:0.000417912714524344,u:"../Content/Topics/CygNet Reports/Report Parameters.htm",a:"The Report Parameters property page specifies the report generation options. Use the Report Parameters properties to define the report template file, the names of the CygNet site and services from which to retrieve data, and the data parameter values to include in the report.  The following example ...",t:"Report Parameters Properties"},"2157":{i:0.000461147947318087,u:"../Content/Topics/CygNet Reports/Export Properties.htm",a:"The Export property page specifies the report export options. Use the Export properties to define export file format, file type, file name, and additional parameters so that you can schedule the report to run automatically.  Configuring Export Properties Export Format There are five Export Format ...",t:"Export Properties"},"2158":{i:8.54486956108172E-05,u:"../Content/Topics/CygNet Reports/Running a CygNet Report.htm",a:"Once parameters have been defined, run the report by clicking Save/Run; or by clicking on the Report menu and select Run Report; or by clicking Run Report  on the toolbar.  To stop the report from loading, click Stop *  on the toolbar. It will have a red \"X\" while the report is still being ...",t:"Running a CygNet Report"},"2159":{i:8.54486956108172E-05,u:"../Content/Topics/CygNet Reports/Printing Reports.htm",a:"Printing Reports Once the data for the report has been retrieved, print the report by clicking on the Report menu and select Print Report. You can also  schedule  reports to auto print.",t:"Printing Reports"},"2160":{i:0.000281438591017815,u:"../Content/Topics/CygNet Reports/Exporting Reports.htm",a:"One of the sets of properties for a report is its Export properties. You can define the export directory and export time along with other report parameters. To export the report based on the Export properties, click the Report menu, and then click Export Report or click on the Export icon   in the ...",t:"Exporting Reports"},"2161":{i:0.000158080374089239,u:"../Content/Topics/CygNet Reports/Scheduling Reports.htm",a:"CygNet Reports can be scheduled to auto run or auto print using the Microsoft scheduler (\"Scheduled Tasks\"). For instance, you can have a morning report run and have it printed for early morning office distribution. Scheduling requires the export parameters to be defined in the report and the report ...",t:"Scheduling CygNet Reports"},"2162":{i:0.00161312522573348,u:"../Content/Topics/Scheduler/Scheduler.htm",a:"The Master Scheduling Service (MSS) is the CygNet scheduler. It can be used to schedule UIS command tasks, FMS command tasks, set info keyword tasks, and setpoint tasks. Tasks can be scheduled to be recurring, for a duration, based on a condition, or continuous. A task can be applied to a single ...",t:"Scheduler"},"2163":{i:0.000700013491400514,u:"../Content/Topics/Scheduler/Tasks.htm",a:"Tasks are predefined actions exercised against a connected service under certain conditions. Conditions are typically time-based conditions or setpoint conditions. Tasks include polls of field devices and equipment start/stop messages scheduled for specific dates, intervals, and durations, or if a ...",t:"Tasks"},"2164":{i:0.00169937023300536,u:"../Content/Topics/Scheduler/Scheduling a Task.htm",a:"The following procedure explains how to schedule an MSS task. All task types use properties on the Schedule page; however, each task type uses an additional page unique to that task type. For more information, see the subsections below: To Configure a New Task Schedule Examples Schedule Properties ...",t:"Scheduling a Task"},"2165":{i:0.000936640321657395,u:"../Content/Topics/Scheduler/UIS Command Task.htm",a:"A UIS command task initiates a UIS command on a user-defined basis to one or more field devices.  UIS commands  must first be defined in the Device Definition Service (DDS); the MSS merely enables the choosing of specific ones to issue. The Can Schedule property of a UIS command must be selected in ...",t:"UIS Command Task"},"2166":{i:0.000363145650675461,u:"../Content/Topics/Scheduler/FMS Command Task.htm",a:"An FMS Command Task issues an FMS Command to a device or group of devices. FMS Commands are defined through the FMS Explorer Commands Menu, and can be initiated through the FMS Explorer client, scheduled through the MSS in CygNet Explorer, executed via script, or executed via ActiveX controls. See  ...",t:"FMS Command Task"},"2167":{i:0.000458650641241653,u:"../Content/Topics/Scheduler/Set Info Keyword Task.htm",a:"A set info keyword task sends an info keyword to a service to trigger the service to perform an action. Currently, the set info keyword task can be used to perform service backups at a scheduled interval or to trigger the VHS to create a new journal file. For more information, see  Scheduling a ...",t:"Set Info Keyword Task"},"2168":{i:0.00040445859228601,u:"../Content/Topics/Scheduler/Set Point Task.htm",a:"A setpoint task changes a point value in a current value service. Only the point’s real-time record is changed; values are not sent to remote devices. Setpoint tasks are useful for testing, troubleshooting, and triggering scripts. Set Point Task Properties The following table lists and describes ...",t:"Set Point Task"},"2169":{i:0.00106756460626431,u:"../Content/Topics/Scheduler/Blackouts.htm",a:"Blackouts are user-configured periods of time during which a task is not executed even if it is  scheduled  to do so. The blackout option enables the use of secondary schedules to run during periods when a primary schedule is inappropriate. Blackouts are used by both the Master Scheduling Service ...",t:"Blackouts"},"2170":{i:0.00101519416997452,u:"../Content/Topics/Scheduler/Scheduling a Blackout.htm",a:"The following procedure explains how to schedule an MSS blackout. All blackouts use properties on the Blackout Information page. Although you can create blackouts without first configuring tasks, blackouts require tasks in order to take effect. A single blackout can be used by several tasks at once. ...",t:"Scheduling a Blackout"},"2171":{i:0.000341433917918068,u:"../Content/Topics/Scheduler/Master Scheduling Service.htm",a:"The Master Scheduling Service (MSS) is the CygNet scheduler. It can be used to schedule UIS command tasks, FMS command tasks, set info keyword tasks, and setpoint tasks. Tasks can be scheduled to be recurring, for a duration, based on a condition, or continuous. A task can be applied to a single ...",t:"Master Scheduling Service"},"2172":{i:0.000542580449665993,u:"../Content/Topics/Service Configuration Keywords/MSS Configuration File Keywords.htm",a:"For more information about modifying the MSS configuration file, see   Service Configuration Files . The MSS keywords are listed in the tables below: Service Info Keywords Associated Services Logging Keywords Security Keywords Replication Keywords Auditing Keywords Backup Keywords Ancillary Files ...",t:"MSS Configuration File Keywords"},"2173":{i:0.000216884756373718,u:"../Content/Topics/Security/Master Scheduling Service MSS.htm",a:"Security for the MSS is administered by the Access Control Service (ACS). As with other CygNet services, security is set on an application and event basis. The application name of the MSS is defined in the service configuration file using the keyword  ACS_APPLICATION . The default is “MSS.” The ...",t:"Master Scheduling Service (MSS) Security"},"2174":{i:0.000103475239339031,u:"../Content/Topics/Scheduler/MSS Scripting.htm",a:"The following scripting options  are available for data interface functions related to scheduling and the Master Scheduling Service.  COM API Description and Link CxMssBlackoutEditor The CxMssBlackoutEditor object is a dialog box-based editor for Blackout records of the Master Scheduling Service ...",t:"MSS Scripting"},"2175":{i:0.000345981359736744,u:"../Content/Topics/Scheduler/MSS Viewer Utility.htm",a:"The MSS Viewer utility is a client that enables the set-up and management of MSS tasks. Most of its features are also available using CygNet Explorer; however, some significant features are available only in the utility. Especially notable and powerful for troubleshooting is the utility\u0027s Grid view. ...",t:"MSS Viewer Utility"},"2176":{i:0.000178692322200365,u:"../Content/Topics/Scheduler/User Interface.htm",a:"The MSS Viewer utility contains four fixed menu options on its toolbar as well as a Site.Service chooser. This utility also provides context menu options for selected tasks and blackouts. Right-click a selected task or blackout to open its context menu. If an option does not apply to the selected ...",t:"MSS Viewer User Interface"},"2177":{i:0.000178692322200365,u:"../Content/Topics/Scheduler/Schedule View.htm",a:"The Schedule view of the MSS Viewer utility is nearly identical to the standard MSS interface accessed by means of CygNet Explorer. Sample MSS Viewer Schedule View For information about how to use the MSS Viewer utility in Schedule view mode, see  Tasks ,  Blackouts , and their children topics.",t:"Schedule View"},"2178":{i:0.000178692322200365,u:"../Content/Topics/Scheduler/Timeline View.htm",a:"The Timeline view of the MSS Viewer utility enables you to view all active tasks that will be issued during the next specified time span. Up to 10001 records can be viewed in a single timeline. Use the Number of Hours field to set your timeline length; total record count for the specified hour(s) ...",t:"Timeline View"},"2179":{i:0.00024933966295559,u:"../Content/Topics/Scheduler/Grid View.htm",a:"The Grid view of the MSS Viewer utility enables you to create a customized, hierarchical view of configured tasks. Numerous task fields are available to choose from and may be organized in a way that suits your viewing needs. This functionality enables grouping and sorting of existing tasks to ...",t:"Grid View"},"2180":{i:0.000839431077018014,u:"../Content/Topics/Scripting/CygNet Scripting.htm",a:"CygNet Software currently supports two Application Programming Interfaces (API). These automation libraries facilitate data retrieval, display and manipulation of the CygNet system via script: COM API — These objects comprise several Cx* programs called automation tools or automation libraries. Most ...",t:"CygNet Scripting"},"2181":{i:0.000233092822509429,u:"../Content/Topics/Scripting/CygNet COM API.htm",a:"The CygNet Software system includes an integrated set of COM automation libraries. The purpose of the scripting reference library is to provide object and method specifications for public libraries available in a CygNet Software installation. Use these libraries to customize your system  through ...",t:"CygNet COM API"},"2182":{i:0.000407825394325919,u:"../Content/Topics/Scripting/CygNet .NET Framework API.htm",a:"A .NET API is provided to allow programmatic access to CygNet services, clients, and other related entities.  Important:The .NET API requires the Microsoft .NET Framework is installed on the host computer, in accordance with the  CygNet System Requirements  document. .NET Assemblies The .NET ...",t:"CygNet .NET API"},"2183":{i:0.000169129306886318,u:"../Content/Topics/Scripting/CygNet Bridge API.htm",a:"CygNet Bridge API CygNet Bridge provides REST APIs to allow programmatic access to CygNet data via the internet. See  CygNet Bridge  and  CygNet Bridge API  for more information.",t:"CygNet Bridge API"},"2184":{i:0.000175961406142603,u:"../Content/Topics/Scripting/Installing 64-bit CygNet API Libraries.htm",a:"CygNet Software supports a 32-bit version and a 64-bit version of each automation library.  The 32-bit versions are found in the CygNet\\Support directory and are automatically installed and registered when the CygNet product is installed. The 64-bit versions are found in the CygNet\\Support64 ...",t:"Installing 64-bit CygNet API Libraries"},"2185":{i:0.000308678181522599,u:"../Content/Topics/Scripting/CygNet Scripting Guide.htm",a:"Scripting provides a method to extend your CygNet installation to meet specific requirements, whether analyzing large amounts of data or designing a custom interface. CygNet includes an integrated set of automation libraries that facilitate the creation of simple to complex logic. CygNet scripting ...",t:"CygNet Scripting Guide"},"2186":{i:9.99946333996248E-05,u:"../Content/Topics/Scripting/CygNet Scripting Model.htm",a:"CygNet provides libraries for general scripting as well as for accessing and setting data from the various database and current value services. See your system administrator to determine which libraries are available. The most common environments for CygNet scripting are CygNet Studio for ...",t:"CygNet Scripting Model"},"2187":{i:9.55291793831687E-05,u:"../Content/Topics/Scripting/The Script Editor.htm",a:"The HSS and CygNet Studio use the same script editor window. The layout of the Script Editor dialog box is described below. 1 Script View Buttons Toggle on/off Script Editor Event View — Show only the selected event in the window. Object View — Show all code related to the selected object. Full ...",t:"The Script Editor"},"2188":{i:0.000143006763247609,u:"../Content/Topics/Scripting/VBScript Primer.htm",a:"Microsoft Visual Basic for Scripting (VBScript) is a subset of Visual Basic created for client-side Internet scripting, although it is now used in many Microsoft Windows applications. The VBScript syntax is similar to that of Visual Basic and is relatively simple. The following sections outline some ...",t:"VBScript Primer"},"2189":{i:9.55291793831687E-05,u:"../Content/Topics/Scripting/External Libraries.htm",a:"Some CygNet library objects and functions are available by default when scripting in CygNet Studio and the HSS, and some must be included as separate COM components. Included Objects CxScript. GlobalFunctions  (SetPoint, SendUISCommand, GetFacilityInfo, etc.) CxScript. Points  - this object is ...",t:"External Libraries"},"2190":{i:0.000241354106673046,u:"../Content/Topics/Scripting/CygNet Studio Scripting.htm",a:"CygNet Studio Scripting See  Scripting in CygNet Studio  for more information about using scripting in the context of CygNet Studio screens.",t:"CygNet Studio Scripting"},"2191":{i:0.000521642726102431,u:"../Content/Topics/Scripting/HyperPoint Scripting.htm",a:"The HyperPoint Scripting Service (HSS) is a CygNet real-time service that executes custom scripting to calculate user-defined HyperPoints based on time-specified events or a change in the point value. Although the service configuration is similar to that of the Universal Interface Service (UIS), the ...",t:"HyperPoint Scripting"},"2192":{i:0.000193965999943018,u:"../Content/Topics/Scripting/Creating and Configuring a HyperPoint.htm",a:"To create a HyperPoint, open CygNet Explorer and navigate to the Point Service (PNT).  Right-click in the PNT service pane to access the context menu, and then click New to access the New Point dialog box to configure the point.  In the General page, enter a site name and HSS service for example, ...",t:"Creating and Configuring a HyperPoint"},"2193":{i:0.000172426341277796,u:"../Content/Topics/Scripting/System HyperPoints.htm",a:"System Library HyperPoints are HyperPoints that extend global functionality by providing generic code that can be used by other HyperPoints. Many system library HyperPoints include methods that accept a HyperPoint object as a parameter so that the same code can be run for multiple points. See  Using ...",t:"System Library HyperPoints"},"2194":{i:0.000176713705305801,u:"../Content/Topics/Scripting/Using HyperPoints.htm",a:"When a HyperPoint is created, it is set up with specific events and objects around which scripts can be built. This section gives an overview of how these built-in objects and events interrelate. See  CygNet Scripting Guide  for more information about HyperPoint events. Objects A HyperPoint is ...",t:"Using HyperPoints"},"2195":{i:9.88688683428083E-05,u:"../Content/Topics/Scripting/Storing Calculated Values.htm",a:"You can select where to write the results of the script processing. The results may be written as the value of the HSS point that contains the script, or to any other point in an HSS or UIS. CygNet recommends that the status of the scripting process be written to the HSS, and the resulting value be ...",t:"Storing Calculated Values"},"2196":{i:0.000263742443171815,u:"../Content/Topics/Scripting/Testing Scripts.htm",a:"Use the Simulation mode  to test a HyperPoint’s script before putting it to use. This mode is independent of the server; it is a feature of CygNet Explorer. Therefore certain capabilities, such as accessing point data, are not enabled. For example, the message box command, MsgBox, will run in ...",t:"Testing Scripts"},"2197":{i:0.000165864580300579,u:"../Content/Topics/Scripting/Global Methods and Declarations.htm",a:"In the Object drop-down menu of the script editor, the first listed item is (General). Select this item to display the global declarations section of a HyperPoint. Use this section to declare global variables to be used by multiple methods (and other HyperPoints), and also to create custom methods ...",t:"Global Methods and Declarations"},"2198":{i:0.000289807438492274,u:"../Content/Topics/Scripting/Using Option Explicit in HyperPoint Scripts.htm",a:"It is recommended that you use the Option Explicit statement in all HyperPoint scripts to force explicit declaration of all variables in a file. This statement can also help expose uninitialized variable errors in your scripts. VBScript requires that Option Explicit be the first statement in a ...",t:"Using Option Explicit in HyperPoint Scripts"},"2199":{i:0.000200973237986505,u:"../Content/Topics/Scripting/HyperPoint Scripting Examples.htm",a:"Summation Deviation Summation The following procedure explains how to create a summation point. Four points are created: two addend points, a point to store the sum, and a HyperPoint to compute the sum. Creating a Summation Point Open CygNet Explorer and navigate to the Point Service. Right-click in ...",t:"HyperPoint Scripting Examples"},"2200":{i:0.000671261619293832,u:"../Content/Topics/Scripting/HSS Profiling.htm",a:"HSS profiling is used to assist with troubleshooting HyperPoint Scripts in the CygNet HyperPoint Scripting Service (HSS).  HSS profiling allows scripts to report their events to an individual log file that is separate from the HSS service log file. Enabling HSS Profiling To use HSS profiling, you ...",t:"HSS Profiling"},"2201":{i:0.000998393548906247,u:"../Content/Topics/Service Configuration Keywords/HSS Configuration File Keywords.htm",a:"For more information about modifying the HSS configuration file, see   Service Configuration Files . The HSS keywords are listed in the tables below: Service Info Keywords Associated Services Keywords Security Keywords Replication Keywords Persistence Keywords Backup Keywords Logging Keywords ...",t:"HSS Configuration File Keywords"},"2202":{i:0.000243214783976539,u:"../Content/Topics/Security/HyperPoint Scripting Service HSS.htm",a:"Security for the HSS is administered by the Access Control Service (ACS). As with other CygNet services, security is set on an application and event basis. The application name of the HSS is defined in the service configuration file using the keyword  ACS_APPLICATION . The default is “HSS.” The ...",t:"HyperPoint Scripting Service (HSS) Security"},"2203":{i:0.000458170368116058,u:"../Content/Topics/Scripting/Debugging and Error Handling.htm",a:"As with any code, anticipating and accounting for the possibility of errors in script or user input can save a good deal of trouble in the debugging phase. Debugging runtime and syntax errors can be achieved using various methods.  More:\n\t\t Script Debuggers On Error Resume Next Breakpoints Syntax ...",t:"Debugging and Error Handling"},"2204":{i:0.000348693497988532,u:"../Content/Topics/Scripting/Script Debuggers.htm",a:"There are many applications available for debugging, and documentation is available separately for each.  For Studio screens, the just-in-time debugger in Microsoft Visual Studio is the best. VBSEdit is also very good, although it isn’t free. For Canvas screens, use the Canvas script debugger. When ...",t:"Script Debuggers"},"2205":{i:0.000122832926155091,u:"../Content/Topics/Scripting/On Error Resume Next.htm",a:"A common and useful method of error handling employs the On Error VBScript directive. By placing the following lines around a section of code, the script engine will ignore any run-time errors that may occur in that section.  On Error Resume Next \u0027code On Error GoTo 0 This can be useful for ...",t:"On Error Resume Next"},"2206":{i:0.000122832926155091,u:"../Content/Topics/Scripting/Breakpoints.htm",a:"The script editor provides the ability to set breakpoints at specific lines of code. When a breakpoint is reached in a script, the script\u0027s execution is suspended and you are given the option of  script debuggers  to use. In this environment you can step through code and view or change values as you ...",t:"Breakpoints"},"2207":{i:0.000174554798705855,u:"../Content/Topics/Scripting/Syntax Errors.htm",a:"Syntax errors occur when a line of script is encountered that does not conform to the VBScript language specification (for example, ending a line with a semicolon, forgetting quotation marks around a literal string, etc).  In CygNet Studio, the script editor automatically checks for syntax errors ...",t:"Syntax Errors"},"2208":{i:0.000122832926155091,u:"../Content/Topics/Scripting/Runtime Errors CygNet Studio.htm",a:"If a line of script attempts to perform some invalid action, a runtime error will occur. An example of this type of condition is trying to access a negative array index, or referring to a property of an object that doesn’t exist. Because syntax errors are caught by the script editor before the ...",t:"Runtime Errors (CygNet Studio)"},"2209":{i:0.000122832926155091,u:"../Content/Topics/Scripting/Error Logging and the ELS.htm",a:"Service-related errors are logged in individual service log files and in the Event Logging Service (ELS). The ELS can be accessed from CygNet Explorer and lists events indexed by timestamp.  Service log files are stored in individual service directories. The HSS log will record script engine errors, ...",t:"Error Logging and the ELS"},"2210":{i:0.000122832926155091,u:"../Content/Topics/Scripting/Custom Log Files.htm",a:" The FileSystemObject object is provided with Microsoft’s Scripting Runtime Library and allows access to drive, folder, and file information. This permits direct creation of log files and the ability to append information to them for debugging purposes. Documentation on the File System Object is ...",t:"Custom Log Files"},"2211":{i:6.7197173400242E-05,u:"../Content/Topics/Scripting/Service Error Code Ranges.htm",a:"Service Error Code Ranges See  Service Error Code Ranges  for a complete list of Error Codes by service type.",t:"Service Error Code Ranges"},"2212":{i:9.99946333996248E-05,u:"../Content/Topics/Scripting/Best Practices.htm",a:"These best practices are guidelines that CygNet suggests that you adopt for building your scripts. They are based on lessons learned over several years of installing and maintaining CygNet systems. They reflect feedback we have received from customers, systems integrators, and our own engineers. ...",t:"Best Practices"},"2213":{i:0.000306949652015641,u:"../Content/Topics/Scripting/Job Runner.htm",a:"The Job Runner is a multi-threaded execution environment for VBScript and .NET assembly methods. Potential uses for Job Runner include: Improving efficiency of an HSS by taking long-running scripts and having them run on multiple concurrent threads Retaining responsiveness for a CygNet Studio screen ...",t:"Using Job Runner"},"2214":{i:0.000102609938751154,u:"../Content/Topics/Scripting/CxAcs.htm",a:"The CxAcs is the standard library for objects related to the Access Control Service (ACS), which stores a list of applications and events for which security is required, as well as the list of users and their authorization levels. The CxAcs API provides an alternative method of interacting with the ...",t:"CxAcs"},"2215":{i:0.00015441608469471,u:"../Content/Topics/Scripting/CxAcs AcsClient Object.htm",a:"The AcsClient object is used to display and manipulate information within the Access Control Service.  Declare the object using the following code: CreateObject(\"CxAcs.AcsClient\") Each method in this document will assume you have declared the ACS object using the following code: Dim AcsClient Set ...",t:"AcsClient Object"},"2216":{i:0.000132824330524245,u:"../Content/Topics/Scripting/CxAcs AcsClient Properties.htm",a:"The AcsClient object contains the following properties. The  GetReferences  method must be called before the properties will be populated. Property SubType Read Only Description AccessControlService String Yes Returns the name of the ACS associated with a given service. If no ACS is associated with ...",t:"AcsClient Properties"},"2217":{i:0.00140977593046796,u:"../Content/Topics/Scripting/CxAcs AcsClient Methods.htm",a:"The AcsClient object contains the following methods: AddGroupMember Connect DeleteGroupMember Disconnect GetConsoleData GetGroupMembersByType GetReferences IsUserOk AddGroupMember The AddGroupMember method adds a member to an ACS group. Syntax AddGroupMember(GroupID As String, UserType As String, ...",t:"AcsClient Methods"},"2218":{i:9.30875878149798E-05,u:"../Content/Topics/Scripting/CxAud.htm",a:"The CxAud is the standard library for objects related to the Audit Service (AUD), which logs operator actions and configuration changes. The CxAud API provides an alternative method of interacting with the AUD database. CxAud contains the following object: AudClient Object Note: Both 32-bit and ...",t:"CxAud"},"2219":{i:0.000146321951682341,u:"../Content/Topics/Scripting/CxAud AudClient Object.htm",a:"The AudClient object is used to display and manipulate the Audit Service. Declare the object using the following code: CreateObject(\"CxAud.AudClient\") Each method in this document will assume you have declared the AUD object using the following code: Dim AudClient Set AudClient = ...",t:"AudClient Object"},"2220":{i:0.000129384255835679,u:"../Content/Topics/Scripting/CxAud AudClient Properties.htm",a:"The AudClient object contains the following properties. The  GetReferences  method must be called before the properties will be populated. Property SubType Read Only Description AccessControlService String Yes Returns the name of the ACS associated with a given service. If no ACS is associated with ...",t:"AudClient Properties"},"2221":{i:0.00137713657849024,u:"../Content/Topics/Scripting/CxAud AudClient Methods.htm",a:"The AudClient object contains the following methods: AddAuditComment AddAuditTransactionComment AssociateFacilityWithTransaction AssociatePointWithTransaction Connect CreateAuditTransaction Disconnect GetConsoleData GetReferences ReadAuditComments ReadAuditRecords ReadUserFlags UpdateUserFlag ...",t:"AudClient Methods"},"2222":{i:8.71844544807907E-05,u:"../Content/Topics/Scripting/CxCas.htm",a:"The CxCas is the standard library for objects related to the Common Alarm Service (CAS), which provides centralized alarm processing for current value services (CVSs).  The CxCas API provides an alternative method of interacting with the CAS database. CxCas contains the following object: CasClient ...",t:"CxCas"},"2223":{i:0.000141304310974935,u:"../Content/Topics/Scripting/CxCas CasClient Object.htm",a:"The CasClient object is used to display and manipulate the Common Alarm Service.  Declare the object using the following code: CreateObject(\"CxCas.CasClient\") Each method in this document will assume you have declared and connected the CasClient object using the following code: Dim CasClient Set ...",t:"CasClient Object"},"2224":{i:0.000127251770277178,u:"../Content/Topics/Scripting/CxCas CasClient Properties.htm",a:"The CasClient object contains the following properties The  GetReferences  method must be called before the properties will be populated. Property SubType Read Only Description AccessControlService String Yes Returns the name of the ACS associated with a given service. If no ACS is associated with a ...",t:"CasClient Properties"},});