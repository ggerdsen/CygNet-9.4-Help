define({"2514":{i:0.000182447434251669,u:"../Content/Topics/Scripting/CxNote DisplayNote Methods.htm",a:"The DisplayNote object contains the following methods: GetAttributeField GetTableField GetYesNoField SetAttributeField SetNote SetTableField SetTbd SetYesNoField GetAttributeField The GetAttributeField method returns the string value of a specified note attribute field. Limit of 20 characters. Valid ...",t:"DisplayNote Methods"},"2515":{i:0.000114691220160895,u:"../Content/Topics/Scripting/CxNote Note Object.htm",a:"The Note object enables the management of note objects through script. Declare the object using the following code: CreateObject(\"CxNote.Note\") Each method in this document assumes you have declared the Note object using the following code: Dim Note Set Note = CreateObject(\"CxNote.Note\") More:\n\t\t ...",t:"Note Object"},"2516":{i:0.000772790936609767,u:"../Content/Topics/Scripting/CxNote Note Properties.htm",a:"The Note object contains the following properties. See  script examples  below. Property SubType Read Only Description Associations Array of association objects No Returns or sets a note\u0027s array of associations. If associations have not been set, an error occurs. Body String No Returns or sets a ...",t:"Note Properties"},"2517":{i:0.000772790936609767,u:"../Content/Topics/Scripting/CxNote Note Methods.htm",a:"The Note object contains the following methods: GetAttributeField GetTableField GetYesNoField SetAttributeField SetTableField SetTbd SetYesNoField GetAttributeField The GetAttributeField method returns the string value of a specified note attribute field. Limit of 20 characters. Valid field integers ...",t:"Note Methods"},"2518":{i:8.87284529851059E-05,u:"../Content/Topics/Scripting/CxNote NoteClient Object.htm",a:"The NoteClient object enables the management of client notes through script. Declare the object using the following code: CreateObject(\"CxNote.NoteClient\") Each method in this document assumes you have declared the NoteClient object using the following code: Dim CxNote Set CxNote = ...",t:"NoteClient Object"},"2519":{i:0.000104906930292998,u:"../Content/Topics/Scripting/CxNote NoteClient Properties.htm",a:"The NoteClient object contains the following properties. The  GetReferences  method must be called before the properties will be populated. Property SubType Read Only Description AccessControlService String Yes Returns the name of the ACS associated with a given service. If no ACS is associated with ...",t:"NoteClient Properties"},"2520":{i:0.00114465502132633,u:"../Content/Topics/Scripting/CxNote NoteClient Methods.htm",a:"The NoteClient object contains the following methods: AddTypeDefinition Connect CreateNote DeleteNote DeleteTypeDefinition Disconnect GetActiveNoteTypes GetConsoleData GetNote GetNotesByAssociations GetReferences RenameTypeDefinition RetrieveNoteData UpdateNote AddTypeDefinition The ...",t:"NoteClient Methods"},"2521":{i:0.000164330446246281,u:"../Content/Topics/Scripting/CxPnt.htm",a:"The CxPnt is the standard library for objects related to the PNT (Point) service. The PNT is a DBS-based service that stores point records. This section describes the methods and events of the CxPnt library. CxPnt contains the following object: PntClient Object Note: For discovery of points by ...",t:"CxPnt"},"2522":{i:0.000137038460216522,u:"../Content/Topics/Scripting/CxPnt PntClient Object.htm",a:"The PntClient object is used to display and manipulate the PNT. Declare the object using the following code: CreateObject(\"CxPnt.PntClient\") Each method in this document will assume you have declared the PNT object using the following code: Dim PntClient Set PntClient = ...",t:"PntClient Object"},"2523":{i:0.000148703049574913,u:"../Content/Topics/Scripting/CxPnt PntClient Properties.htm",a:"The PntClient object contains the following properties. The  GetReferences  method must be called before the properties will be populated. Property SubType Read Only Description AccessControlService String Yes Returns the name of the ACS associated with a given service. If no ACS is associated with ...",t:"PntClient Properties"},"2524":{i:0.000246322884938807,u:"../Content/Topics/Scripting/CxPnt PntClient Methods.htm",a:"The PntClient object contains the following methods: AddPointRecord CancelPointRecordLock Connect DeletePointRecord Disconnect FinishBulkUpdates GetActiveServices GetAttributeTable GetCommentsForPoint GetConsoleData GetCvsServiceList GetDefaultPointRecord GetDefaultPointScheme GetEmptyPointXML ...",t:"PntClient Methods"},"2525":{i:9.94596274077732E-05,u:"../Content/Topics/Scripting/CxScript.htm",a:"The CxScript library provides the backbone for HyperPoint scripting. All methods in this section are automatically available in the HSS and several are integrated with CygNet Studio as  global scripting objects . The Point, Points, and Facilities objects allow you to track point and facility ...",t:"CxScript"},"2526":{i:7.24809958690761E-05,u:"../Content/Topics/Scripting/CxScript Array Object.htm",a:"The Array object is used to create and manipulate a single-dimensional array of items whose size is dynamically increased as required. Jagged arrays (storing one CxScript.Array as an element of another CxScript.Array) are also supported. Declare the object using the following code: ...",t:"Array Object"},"2527":{i:0.00020595977692741,u:"../Content/Topics/Scripting/CxScript Array Properties.htm",a:"The Array object contains the following properties:  Property SubType Read Only Description Count Long Yes Returns the number of items in the array. Always equal to UBound + 1. item\n                 Long   Returns an item in the array. The default property, so it does not need to be explicitly ...",t:"Array Properties"},"2528":{i:0.000381026455554571,u:"../Content/Topics/Scripting/CxScript Array Methods.htm",a:"The Array object contains the following methods: Add AddRange Clear IndexOf Join LastIndexOf PrepareToAdd ReDim Remove RemoveAt Resize Sort ToArray CxScript.Array Usage Notes Note the relationship between the  Count  and  UBound  properties and the  ReDim  and  Resize  methods. Each pair is mutually ...",t:"Array Methods"},"2529":{i:0.00106170069407657,u:"../Content/Topics/Scripting/CxScript Conversions Object.htm",a:"The Conversions Object is used to retrieve unit categories, names, unit descriptions, units for each category, and then convert numbers to different units of measurement. See  Pressure Unit Conversion  for more information about converting from inches to or from other pressure units. More:\n\t\t ...",t:"Conversions Object"},"2530":{i:0.000368019786150615,u:"../Content/Topics/Scripting/CxScript Conversions Properties.htm",a:"Conversions Properties This object has no properties.",t:"Conversions Properties"},"2531":{i:0.00245046857595125,u:"../Content/Topics/Scripting/CxScript Conversions Methods.htm",a:"The Conversions Object contains the following methods: ConvertValue GetAllCategories GetAllUnitNames GetCategoryName GetConvertableUnitNames GetUnitDescription GetUnitsForCategory IsConvertable SetBarAirPressure ConvertValue The ConvertValue method converts the provided value from its source units ...",t:"Conversions Methods"},"2532":{i:0.000258974991502086,u:"../Content/Topics/Scripting/CxScript CursorHelper Object.htm",a:"The CursorHelper object handles the construction and deconstruction of a wait cursor (for example, hourglass or other image).  Upon creation of the object, the mouse pointer is transformed into a wait cursor.  When the object is deleted (for example, goes out of scope at the end of a method), the ...",t:"CursorHelper Object"},"2533":{i:0.000106009158482851,u:"../Content/Topics/Scripting/CxScript Dictionary Object.htm",a:"The Dictionary object stores name and value pairs, referred to as the key and value respectively, in an array. The Dictionary object is intrinsic to both the HyperPoint Scripting Service and CygNet Studio, but can be used by any automation-compatible container (Microsoft Visual Basic, Microsoft ...",t:"Dictionary Object"},"2534":{i:0.000173860388130931,u:"../Content/Topics/Scripting/CxScript Dictionary Properties.htm",a:"Dictionary Properties The Dictionary object contains the following property:  Property SubType Read Only Description Value String No Gets/sets the value for a key in the dictionary. Dictionary.Value(\"KeyName\")",t:"Dictionary Properties"},"2535":{i:0.000756366519044726,u:"../Content/Topics/Scripting/CxScript Dictionary Methods.htm",a:"The Dictionary object contains the following methods: Clear ExportToXml FindValue GetKeyList GetSize IntializeFromXml KeyExists Remove SetKeyValue Clear The Clear method clears all keys and values from the dictionary. Syntax Clear() Example The following example resets the dictionary and informs the ...",t:"Dictionary Methods"},"2536":{i:7.24809958690761E-05,u:"../Content/Topics/Scripting/CxScript DictionaryEntry Object.htm",a:"DictionaryEntry Object Declare the object using the following code: CreateObject(\"CxScript.DictionaryEntry\") This object has no methods.  More:\n\t\t DictionaryEntry Properties",t:"DictionaryEntry Object"},"2537":{i:6.7197173400242E-05,u:"../Content/Topics/Scripting/CxScript DictionaryEntry Properties.htm",a:"DictionaryEntry Properties The DictionaryEntry object contains the following properties:  Property SubType Read Only Description Key       Value String No Value for a CxScript.Dictionary object.",t:"DictionaryEntry Properties"},"2538":{i:0.000163037378598302,u:"../Content/Topics/Scripting/CxScript Facilities Object.htm",a:"The Facilities object is the mechanism used for caching facility attributes. This object is comparable to the  Points  object; it stores Facility attributes while the Points object stores live Point values. The Facilities object is equipped with standard CygNet caching operations similar to the ...",t:"Facilities Object"},"2539":{i:0.00012058301759547,u:"../Content/Topics/Scripting/CxScript Facilities Properties.htm",a:"The Facilities object contains the following properties:  Property SubType Read Only Description PersistName String No Returns/sets the facilities cache persist name. UpdateRate Long No Returns/sets the frequency (in milliseconds) that Facility Service is polled for updates. The default value is ...",t:"Facilities Properties"},"2540":{i:0.000140485235425455,u:"../Content/Topics/Scripting/CxScript Facilities Methods.htm",a:"The Facilities object contains the following methods: AddFacilitiesArray AddFacility AddFacilityTagListHint ChooseFacilities EnableUpdate FilterFacilityTagList GetFacilityAttribute GetFacilityAttributeName GetFacilityTagList ResolveNow UpdateNow AddFacilitiesArray The AddFacilitiesArray method adds ...",t:"Facilities Methods"},"2541":{i:0.000811389353066102,u:"../Content/Topics/Scripting/CxScript Facility Attributes.htm",a:"FACILITY_ FACILITY_ATTR FACILITY_IS_REF FACILITY_TABLE FACILITY_YES_NO FACILITY_ facility_site facility_service facility_id facility_is_active facility_type facility_desc facility_info0 facility_info1 facility_category facility_security_app FACILITY_ATTR facility_attr0 facility_attr10 ...",t:"Facility Attributes"},"2542":{i:0.000130905126360968,u:"../Content/Topics/Scripting/CxScript FileSystemObject Object.htm",a:"FileSystemObject Object The FileSystemObject provides a way for users to manipulate folders and files in the BLOB storage system. More:\n\t\t FileSystemObject Properties FileSystemObject Methods UpdateRulesMask",t:"FileSystemObject Object"},"2543":{i:0.000104287181033931,u:"../Content/Topics/Scripting/CxScript FileSystemObject Properties.htm",a:"FileSystemObject Properties This object has no properties.",t:"FileSystemObject Properties"},"2544":{i:0.000409622660103594,u:"../Content/Topics/Scripting/CxScript FileSystemObject Methods.htm",a:"The FileSystemObject object contains the following methods: BlobExists CheckInBlobFile CheckOutBlobFile DeleteFileFromBlob DownloadBlobFile DownloadBlobFileToDirectory DownloadFromBlobPath DownloadFromBlobPathToDirectory EnableLibrarian GetBlobFileCheckOutDetails GetBlobFileListByFolder ...",t:"FileSystemObject Methods"},"2545":{i:0.000220347798555349,u:"../Content/Topics/Scripting/CxScript FileSystemObject Methods UpdateRulesMask.htm",a:"The UpdateRulesMask parameter is used to determine whether a file will be downloaded or uploaded.  It does this by comparing the file on the local file system with the file of the same name in the BLOB service.  You use this parameter to tell the function how you want the files compared. The ...",t:"UpdateRulesMask"},"2546":{i:0.00021192024287187,u:"../Content/Topics/Scripting/CxScript GlobalFunctions Library.htm",a:"GlobalFunctions are a set of functions and subroutines that can be used to retrieve properties of Points Objects as well as returning lists of facilities, tags, and UIS commands. Declare the object using the following code: CreateObject(\"CxScript.GlobalFunctions\") Note: These functions are ...",t:"GlobalFunctions Library"},"2547":{i:0.000353673664359719,u:"../Content/Topics/Scripting/CxScript Point Status Functions.htm",a:"The following functions are useful when writing scripts relating to status bits. These functions accept a single parameter, Status As Integer, which is the base status integer for a  Point  or  HyperPoint  object. Point Type Functions Point Direction Functions Value Status Analog Alarm Functions ...",t:"Point Status Functions"},"2548":{i:0.00438801210084668,u:"../Content/Topics/Scripting/CxScript GlobalFunctions Methods.htm",a:"Global methods can be used in HyperPoints or in CygNet Studio without importing the library. To use them in other environments, create a COM component from the CxScript.GlobalFunctions library. Global methods include the following: AcknowledgeAlarm AddAuditTransactionComment AdjustTime ...",t:"GlobalFunctions Methods"},"2549":{i:0.000262519602650407,u:"../Content/Topics/Scripting/CxScript HyperPoint Object.htm",a:"The HyperPoint Object is in essence an event-driven script container. The definition of a HyperPoint (i.e., its script) is stored in the Point Service. When the HyperPoint Scripting Service is started, each HyperPoint that is assigned to the service is initialized as an object. The object name is ...",t:"HyperPoint Object"},"2550":{i:0.000141578796272607,u:"../Content/Topics/Scripting/CxScript HyperPoint Properties.htm",a:"The HyperPoint object contains the following properties.  The Value, Timestamp, Status, and UserStatus properties are read from/written to the HyperPoint Scripting Service. The remaining properties are read from/written to the Point Service. Properties are referred to in the following format: ...",t:"HyperPoint Properties"},"2551":{i:0.000956417867804832,u:"../Content/Topics/Scripting/CxScript HyperPoint Methods.htm",a:"The HyperPoint object contains the following method: GetAttribute Method GetAttribute The GetAttribute method returns the specified HyperPoint attribute. Syntax GetAttribute(attrAsStringorEnum As Variant) As Variant Parameters Parameter Required Description attrAsStringorEnum Yes A value (either a ...",t:"HyperPoint Methods"},"2552":{i:0.00141188915876024,u:"../Content/Topics/Scripting/CxScript HyperPoint Events.htm",a:"The HyperPoint object contains the following events: OnInitialize OnInitializeEx OnPointChange OnTerminate OnTerminateEx OnTimer OnUpdate OnInitialize Important: This event is obsolete. However, it is still available to existing points that use this event. It is unavailable to new points. This and ...",t:"HyperPoint Events"},"2553":{i:0.000631599822138415,u:"../Content/Topics/Scripting/CxScript Point Object.htm",a:"Point Object A Point object holds the properties for a point when a reference is created with the  Points Object . Its properties are read-only. More:\n\t\t Point Properties Point Methods",t:"Point Object"},"2554":{i:0.00141493034579504,u:"../Content/Topics/Scripting/CxScript Point Properties.htm",a:"The Point object contains the following read-only properties:  Property SubType Read Only Description AckState Integer Yes Returns the point alarm’s acknowledge state from the point object. To return the alarm acknowledge state, append the ;ack parameter when adding the point. Example ...",t:"Point Properties"},"2555":{i:0.000428100895620335,u:"../Content/Topics/Scripting/CxScript Point Methods.htm",a:"The Point object contains the following methods: GetAttribute GetAttributeName GetAttribute The GetAttribute method returns a specified point attribute. Syntax GetAttribute(attrIdAsStringorEnum As Variant) As Variant Parameters Parameter Required Description attrIdAsStringorEnum Yes A variant value ...",t:"Point Methods"},"2556":{i:0.00023301801109381,u:"../Content/Topics/Scripting/CxScript PointMetadata Object.htm",a:"The PointMetadata object contains methods to retrieve point metadata information. Point metadata cannot be modified with this object. Declare the object using the following code: CreateObject(\"CxScript.PointMetadata\") Each method in this document will assume that you have declared the PointMetadata ...",t:"PointMetadata Object"},"2557":{i:0.0001662314060467,u:"../Content/Topics/Scripting/CxScript PointMetadata Properties.htm",a:"PointMetadata Properties This object has no properties.",t:"PointMetadata Properties"},"2558":{i:0.000324173249958294,u:"../Content/Topics/Scripting/CxScript PointMetadata Methods.htm",a:"The PointMetadata object contains the following methods: EvaluateAlarmState GetAlarmPriorityCategoryDefinitions GetMetadataVersion GetMetadataXml GetPointDataTypes GetPointSchemes GetPointStateDefinitions GetPointStateInfos GetPointStateInstances GetStatusBitMetadata For more information, see  Point ...",t:"PointMetadata Methods"},"2559":{i:0.000436131946771691,u:"../Content/Topics/Scripting/CxScript Points Object.htm",a:"The Points object works in conjunction with a  HyperPoint  and can be thought of as a collection of points for a  HyperPoint Script  to monitor. Typically, tags are added to the Points object in the HyperPoint’s  OnInitializeEx  event. The Points object is intrinsic to both the HyperPoint Scripting ...",t:"Points Object"},"2560":{i:8.59372643785829E-05,u:"../Content/Topics/Scripting/CxScript Points Properties.htm",a:"The Points object contains the following properties:  Property SubType Read Only Description PersistName String No Returns/sets the point cache persist name. UpdateRate Long No Returns/sets the frequency in milliseconds that the current value services and Point Services are polled for updates. The ...",t:"Points Properties"},"2561":{i:0.00110113499387918,u:"../Content/Topics/Scripting/CxScript Points Methods.htm",a:"The Points object contains the following methods: AddPoint AddPointsArray EnableUpdate GetPointStatusAttribute GetPointsXML GetPointTagList GetPointTagListForFacilities GetUdcList Point ResolveNow UpdateNow AddPoint The AddPoint method adds the point specified by the tag to the cache. Syntax ...",t:"Points Methods"},"2562":{i:7.88214335278193E-05,u:"../Content/Topics/Scripting/CxScript PointTag Object.htm",a:"A PointTag object enables you to parse one or more components from a CygNet tag. For instance, the PointTag object would enable you to parse LongPointId from the tag Site.Service.PointId:LongPointId. A PointTag object is returned whenever you use the  PointTag  property from a  CygNet-aware CygNet ...",t:"PointTag Object"},"2563":{i:8.39467848267077E-05,u:"../Content/Topics/Scripting/CxScript PointTag Properties.htm",a:"The PointTag object contains the following read/write properties. Property SubType Read Only Description Facility String No Returns the point facility. Facility is maximum 20 characters.\n LongPointID String No Returns the Long Point ID. Long Point ID is maximum 31 characters. PointID String No ...",t:"PointTag Properties"},"2564":{i:0.00103516522297835,u:"../Content/Topics/Scripting/CxScript PointTag Methods.htm",a:"The PointTag object contains the following method: IsValid IsValid If any one of the following tag formats is in the PointTag object, the IsValid() method returns true; otherwise, it returns false: Site.Service.PointId Site.Service:LongPointId Site.Service::FacilityId.UDC ...",t:"PointTag Methods"},"2565":{i:0.000161197141372528,u:"../Content/Topics/Scripting/CxScript UpdateTimer Object.htm",a:"UpdateTimer Object The UpdateTimer object is used to create timers in order to define intervals for updating HyperPoint objects. HSS points include a built-in UpdateTimer object named Timer.  More:\n\t\t UpdateTimer Properties UpdateTimer Methods",t:"UpdateTimer Object"},"2566":{i:0.00013570688722984,u:"../Content/Topics/Scripting/CxScript UpdateTimer Properties.htm",a:"UpdateTimer Properties This object has no properties.",t:"UpdateTimer Properties"},"2567":{i:0.000454483540417529,u:"../Content/Topics/Scripting/CxScript UpdateTimer Methods.htm",a:"The UpdateTimer object contains the following methods: EnableUpdate Set EnableUpdate The EnableUpdate method enables or disables timer updating. Syntax EnableUpdate(Enable As Boolean) Parameters Parameter Required Description Enable Yes A Boolean value indicating whether to run the timer (True) or ...",t:"UpdateTimer Methods"},"2568":{i:7.24809958690761E-05,u:"../Content/Topics/Scripting/CxScript Enumeration Constants.htm",a:"The following tables define the HyperPoint enumeration constants that users can incorporate into HyperPoint scripts. More:\n\t\t Alarm State Enumeration Constants Enumeration Attributes CmdSelectionBits HyperPointAttributes Point Quality Point Status ResolveNowType UpdateEventType UpdateNowType",t:"Enumeration Constants"},"2569":{i:0.000320662086545192,u:"../Content/Topics/Scripting/CxScript Alarm State Enumeration Constants.htm",a:"This enumeration table indicates the state of the alarm as an integer. See  GlobalFunctions.GetAlarmState  and  Point Status Functions . Name Value hpAnalogNormal 10 (0x000A) hpAnalogLowOutOfRange 11 (0x000B) hpAnalogLowAlarm 12 (0x000C) hpAnalogLowWarning 13 (0x000D) hpAnalogHighWarning 14 (0x000E) ...",t:"Alarm State Enumeration Constants"},"2570":{i:0.00259529267092851,u:"../Content/Topics/Scripting/CxScript Enumeration Attributes.htm",a:"The following tables list all CygNet enumeration attribute strings and their associated numeric values. Click here to see all enumeration attributes sorted alphabetically.   Enumeration String Enumeration Value Notes activestatus 10132 alarm01priority 10523 PNT specific attribute alarm02priority ...",t:"Enumeration Attributes"},"2571":{i:0.000260536618395134,u:"../Content/Topics/Scripting/CxScript Enum CmdSelectionBits.htm",a:"CmdSelectionBits This enumeration table indicates which subset of UIS commands to retrieve using a bit mask. See  GlobalFunctions.GetUisCommandList . Name Value CsIncludeUsrCmds 1 CsIncludeParentCmds 2 CsIncludeSecDeniedCmds 4 CsIncludeMSSCmds 8 CsIncludeWebCmds 16 (0x0010)",t:"CmdSelectionBits"},"2572":{i:0.00048049200123198,u:"../Content/Topics/Scripting/CxScript Enum HyperPointAttributes.htm",a:"HyperPointAttributes This enumeration table indicates  the attribute to return for  HyperPoint.GetAttribute . Name Value hpAttrDescription 0 hpAttrUnits 1 hpAttrValue 2 hpAttrFacility 3 hpAttrUDC 4 hpAttrComments 5 hpAttrSystem 6",t:"HyperPointAttributes"},"2573":{i:0.000675331060451013,u:"../Content/Topics/Scripting/CxScript Point Quality.htm",a:"This enumeration table indicates the quality of a point that is stored in the cache. See the  Quality  property for the CxScript.Point object. Name Value Description hpQualityGood 192 (0xC0) The quality of the Point is good. hpQualityConfigError 4 (0x04) The quality of the Point is bad due to a ...",t:"Point Quality"},"2574":{i:0.000493542229912063,u:"../Content/Topics/Scripting/CxScript Point Status.htm",a:"Analog Alarm Bits Digital Alarm Bits Enumeration Alarm Bits General Status Bits Point Type Masks String Alarm Bits Analog Alarm Bits Name Value Description hpStatusOOR 8 Out-of-range alarm hpStatusLowAlarm 16 (0x0010) Low alarm hpStatusLowWarning 32 (0x0020) Low warning alarm hpStatusHighWarning 64 ...",t:"Point Status"},"2575":{i:0.000207754628652921,u:"../Content/Topics/Scripting/CxScript ResolveNowType.htm",a:"This enumeration table indicates from which services to resolve points. See  Points.ResolveNow . Name Value Description resolveCvsOnly 0 Resolve points from the CVS services only. resolvePcsOnly 1 Resolve points from the PNT service only. resolveCvsAndPcs 2 Resolve points from both service types.",t:"ResolveNowType"},"2576":{i:0.000474085511678201,u:"../Content/Topics/Scripting/CxScript UpdateEventType.htm",a:"This enumeration table indicates which event type event is occurring. See  HyperPoint Events.OnUpdate . Name Value Description hpTimerEvent 1 Event generated by the  Timer  object. Using the  Timer.Set  method will cause these events to be generated. hpPointEvent 2 Event generated by a  Point  ...",t:"UpdateEventType"},"2577":{i:0.000207754628652921,u:"../Content/Topics/Scripting/CxScript UpdateNowType.htm",a:"UpdateNowType This enumeration table indicates from which services to update the Points object. See  Points.UpdateNow . Name Value Description updateCvsOnly 0 Update  from the CVS services only. updatePcsOnly 1 Update from the PNT service only. updateCvsAndPcs 2 Update from both service types.",t:"UpdateNowType"},"2578":{i:8.28624474437797E-05,u:"../Content/Topics/Scripting/CxTrend.htm",a:"The CxTrend is the standard library for human-interface objects related to the CygNet Trend Tool. The CygNet Trend Tool is an ActiveX control used in CygNet Studio and CygNet Vision screens to provide a customizable means to chart data in a number of useful formats, including line graphs and area ...",t:"CxTrend"},"2579":{i:0.000102413845880756,u:"../Content/Topics/Scripting/CxTrend Object.htm",a:"CxTrend Object The CxTrend object is an ActiveX control and must be placed in an ActiveX control container such as CygNet Studio. More:\n\t\t CxTrend Properties CxTrend Methods CxTrend Events",t:"CxTrend Object"},"2580":{i:0.000641323349202885,u:"../Content/Topics/Scripting/CxTrend Properties.htm",a:"The CxTrend object contains the following properties: Browse by letter:    \n\t\t\t A     \n\t\t\t B     \n\t\t\t C     \n\t\t\t D     \n\t\t\t E     \n\t\t\t F     \n\t\t\t G     \n\t\t\t I     \n\t\t\t L     \n\t\t\t M     \n\t\t\t N     \n\t\t\t O     \n\t\t\t P     \n\t\t\t R     \n\t\t\t S     \n\t\t\t T     \n\t\t\t U     \n\t\t\t V     \n\t\t\t X     \n\t\t\t Y     \n\t\t\t ...",t:"CxTrend Properties"},"2581":{i:0.000875417149340189,u:"../Content/Topics/Scripting/CxTrend Methods.htm",a:"The CxTrend object contains the following methods: AboutBox AddSeriesDialog Cancel ClearNoteSelection DeleteAllSeries DeleteSeries DisplayedToConfiguredAxis EditAxesDialog EditSeriesDialog Export ExportAsImage GetAlarmLimitInfoXml GetAxisById GetDisplayedNotes GetSelectedAlarmLimitSeries ...",t:"CxTrend Methods"},"2582":{i:0.000122177298277845,u:"../Content/Topics/Scripting/CxTrend Events.htm",a:"The CxTrend object contains the following events: BeginProcessing Click EndProcessing Initialize Maximize NoteCreated NoteEdited NotesChanged NoteSelected PumpData Zoom BeginProcessing EventBeginProcessing runs at the beginning of retrieving values to be trended from the Value History Service (VHS) ...",t:"CxTrend Events"},"2583":{i:0.000180689786542148,u:"../Content/Topics/Scripting/CxUis.htm",a:"The CxUis is the standard library for Universal Interface Service related objects. The UIS is a real-time service whose primary function is to perform data collection for points and devices. Use this interface to programmatically configure and pass data to and from devices. CxUis contains the ...",t:"CxUis"},"2584":{i:0.000220785075401184,u:"../Content/Topics/Scripting/CxUis UisClient Object.htm",a:"The UisClient object is the main interface for most UIS scripting tasks, allowing you to get and send data group element and UDC fields to devices in a variety of ways.  Declare the object using the following code: CreateObject(\"CxUis.UisClient\") More:\n\t\t UisClient Properties UisClient Methods",t:"UisClient Object"},"2585":{i:0.000161031719548791,u:"../Content/Topics/Scripting/CxUis UisClient Properties.htm",a:"The UisClient object contains the following properties. The  GetReferences  method must be called before the properties will be populated. Property SubType Read Only Description AccessControlService String Yes Returns the name of the ACS associated with a given service. If no ACS is associated with ...",t:"UisClient Properties"},"2586":{i:0.00058401690065194,u:"../Content/Topics/Scripting/CxUis UisClient Methods.htm",a:"The UisClient object contains the following methods: CanSendUISCommand Connect CreateDataArray DeleteQueueEntry  Disconnect GetAndSendData GetAssociatedDdsName GetConsoleData GetDataGroupFromDeviceByKey GetDataGroupFromDeviceByKeyWithTxData GetReferences ParseDataArrayRow PerformCmd ...",t:"UisClient Methods"},"2587":{i:0.000105805134328078,u:"../Content/Topics/Scripting/CxVhs.htm",a:"The CxVhs is the standard library for Value History Service (VHS) related objects.  The VHS is a service used for archiving point data. VHS-related scripting involves the use of four types of objects:  VhsClient Object VhsClient Iterator Objects VhsClient Helper Objects (used for passing and storing ...",t:"CxVhs"},"2588":{i:0.000118957918988615,u:"../Content/Topics/Scripting/CxVhs VhsClient Object.htm",a:"The VhsClient object is the main interface for standard VHS scripting tasks related to history reading and writing. Declare the object using the following code: CreateObject(\"CxVhs.VhsClient\") In situations requiring the acquisition of a list of points or values, the iterator objects may be used ...",t:"VhsClient Object"},});