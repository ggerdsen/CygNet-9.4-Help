define({"2937":{i:0.000138907170383118,u:"../Content/Topics/Well Test/Configuring CygNet Well Test.htm",a:"While each production environment is unique in its configuration, the following steps provide a basic guideline for configuring and executing well test actions. Perform the following steps to install the necessary system components, create a CygNet well test configuration, and execute the test ...",t:"Configuring CygNet Well Test"},"2938":{i:0.000285343717252109,u:"../Content/Topics/Well Test/Configuring Well Test Using Canvas.htm",a:"The Well Test Configuration sample screen (Well Test Configuration.can) is a Canvas screen that can be used to easily load, configure, and save the XML required by the CygNet Well Test Module using a friendly user interface. The sample screen contains several Canvas controls, including a Text tool, ...",t:"Configuring Well Test Using Canvas"},"2939":{i:0.000127833159415295,u:"../Content/Topics/Well Test/Well Test UI Config - General Page.htm",a:"General Page The General page of the well test configuration control defines general properties required by the CygNet Well Test Module, and consists of the following sections: General  Relative Facilities UDCs Click the following image for more information:  Sample General Page Configuration To ...",t:"Well Test Config - General Page"},"2940":{i:0.00019582159713056,u:"../Content/Topics/Well Test/Well Test UI Config - Headers Page.htm",a:"Headers Page The Headers page of the well test configuration control defines the list of headers included in each well test configuration. Each header corresponds to a separator facility, and this is where you define its point tag, properties, and the associated wells. The page consists of the ...",t:"Well Test Config - Headers Page"},"2941":{i:0.000207647259575103,u:"../Content/Topics/Well Test/Well Test UI Config - Templates Page.htm",a:"Templates Page The Templates page of the well test configuration control defines  a list of all the defined header templates. A header template contains a list of positions, the commands associated with each position, and all actions associated with each command. Additionally, commands can also be ...",t:"Well Test Config - Templates Page"},"2942":{i:9.38030994095852E-05,u:"../Content/Topics/Well Test/Well Test UI Config - Exit Action Type.htm",a:"Exit Action Type The Exit action type is used to stop the current well in test. The only required attribute is the action type. An optional set of attributes are available to issue a setpoint. These are the same as defined in the  SetPoint  action type. Sample Exit Action Configuration \n\n\t\t\t\t To ...",t:"Well Test Config - Exit Action Type"},"2943":{i:7.98044024849788E-05,u:"../Content/Topics/Well Test/Well Test UI Config - Header Command Action Type.htm",a:"Header Command Action Type The Header Command (HeaderCommand) action type is used to reference a command defined at the header level. If there are a set of actions that will be repeated for every position, a command can be defined with those actions at the header. Then each position could be ...",t:"Well Test Config - Header Command Action Type"},"2944":{i:0.00010881753714123,u:"../Content/Topics/Well Test/Well Test UI Config - Monitor Action Type.htm",a:"Monitor Action Type The Monitor action type is used in device-based (PLC) mode configurations where the host needs to monitor the device and take action when certain conditions occur. To do this, there are configurable Monitor blocks in the XML structure where a set of conditions are defined and if ...",t:"Well Test Config - Monitor Action Type"},"2945":{i:9.38030994095852E-05,u:"../Content/Topics/Well Test/Well Test UI Config - Point Value Compare Action Type.htm",a:"Point Value Compare Action Type The Point Value Compare (PointValueCompare) action type is used to compare two values and perform an action, if true. The values used in the comparison can be either from a point or a hard-coded value. The  PointValueCompare  action type supports the configuration of ...",t:"Well Test Config - Point Value Compare Action Type"},"2946":{i:0.000106769896759105,u:"../Content/Topics/Well Test/Well Test UI Config - Script Action Type.htm",a:"Script Action Type The Script action type is used to run a specified VB script that will process well test data and produce the values needed for the well test record. See  Processing and Storing Well Test Results  for more information about how the Well test results are written out to the VHS. ...",t:"Well Test Config - Script Action Type"},"2947":{i:9.38030994095852E-05,u:"../Content/Topics/Well Test/Well Test UI Config - Set Point Action Type.htm",a:"Set Point Action Type The Set Point (SetPoint) action type is used to issue a SetPoint to a CygNet point. This action can be used to provide status throughout the command sequence. Sample Set Point Action Configuration \n\n\t\t\t\t To configure a Set Point action A Set Point action type can be configured ...",t:"Well Test Config - Set Point Action Type"},"2948":{i:9.38030994095852E-05,u:"../Content/Topics/Well Test/Well Test UI Config - Test Action Type.htm",a:"Test Action Type The Test action type is used in Host-based command sequencing to wait for a specified period. The primary use of this action is to halt the process until the well test time has elapsed before processing the well test record. This is also useful is a variety of situations such as ...",t:"Well Test Config - Test Action Type"},"2949":{i:9.38030994095852E-05,u:"../Content/Topics/Well Test/Well Test UI Config - UIS Command Action Type.htm",a:"UIS Command Action Type The UIS Command (UisCommand) action type is used to send a UIS Command to a configured device.  Click the following image for more information:  Sample UIS Command Action Configuration To configure a UIS Command action A UIS Command action type can be configured from several ...",t:"Well Test Config - UIS Command Action Type"},"2950":{i:0.000115465874943113,u:"../Content/Topics/Well Test/Configuring Well Test Using XML.htm",a:" The well test configuration is an XML structure that specifies the relationship between test facilities and associated wells, and the sequencing of actions to put a well into test mode, as well as other configuration options. The configuration is stored as part of a point and is referenced by the ...",t:"Configuring Well Test Using XML"},"2951":{i:7.81023335617849E-05,u:"../Content/Topics/Well Test/XML Hierarchy.htm",a:"The structure of the well test configuration  XML is hierarchical: elements are nested within other elements, creating structural relationships. The following list describes the elements required to complete the well test configuration  XML. Click on any link below to go to a description of that ...",t:"Well Test Hierarchy"},"2952":{i:7.81023335617849E-05,u:"../Content/Topics/Well Test/XML Elements and Attributes.htm",a:"This section provides reference details about the elements and attributes as they are used in the well test configuration  XML file. More:\n\t\t Actions, Action, Action Types Commands, Command Conditions, Condition ExitOnTagValueActions General Headers, Header HeaderTemplates, HeaderTemplate Monitors, ...",t:"Well Test Elements and Attributes"},"2953":{i:0.00163094967348603,u:"../Content/Topics/Well Test/XML Actions.htm",a:"A \u003cCommand\u003e contains one or more \u003cActions\u003e elements.  To learn about how these elements relate to other elements in a well test configuration XML structure, see  Well Test Hierarchy . Example\n See each of the Action Types listed below for examples. Actions The \u003cActions\u003e element has one type of child ...",t:"Actions, Action, Action Types"},"2954":{i:0.000256116235267804,u:"../Content/Topics/Well Test/XML Config - Exit Action Type.htm",a:"The Exit action type is used to stop the current well in test. The only required attribute is the action type. An optional set of attributes are available to issue a setpoint. These are the same as defined in the  SetPoint  action type. To learn about how these elements relate to other elements in a ...",t:"Exit Action Type"},"2955":{i:0.00019630156287507,u:"../Content/Topics/Well Test/XML Config - HeaderCommand Action Type.htm",a:"The Header Command (HeaderCommand) action type is used to reference a command defined at the header level. If there are a set of actions that will be repeated for every position, a command can be defined with those actions at the header. Then each position could be configured with a Header Command ...",t:"HeaderCommand Action Type"},"2956":{i:0.000304693606112166,u:"../Content/Topics/Well Test/XML Config - Monitor Action Type.htm",a:"The Monitor action type is used in device-based (PLC) mode configurations where the host needs to monitor the device and take action when certain conditions occur. To do this, there are configurable Monitor blocks in the XML structure where a set of conditions are defined and if those conditions are ...",t:"Monitor Action Type"},"2957":{i:0.000216249751319153,u:"../Content/Topics/Well Test/XML Config - PointValueCompare Action Type.htm",a:"The Point Value Compare (PointValueCompare) action type is used to compare two values and perform an action, if true. The values used in the comparison can be either from a point or a hard-coded value. To learn about how these elements relate to other elements in a well test configuration XML ...",t:"PointValueCompare Action Type"},"2958":{i:0.00134037064313685,u:"../Content/Topics/Well Test/XML Config - Script Action Type.htm",a:"The Script action type is used to run a specified VB script that will process well test data and produce the values needed for the well test record. See  Processing and Storing Well Test Results  for more information about how the Well test results are written out to the VHS. To learn about how ...",t:"Script Action Type"},"2959":{i:0.000256116235267804,u:"../Content/Topics/Well Test/XML Config - SetPoint Action Type.htm",a:"The Set Point (SetPoint) action type is used to issue a SetPoint to a CygNet point. This action can be used to provide status throughout the command sequence. To learn about how these elements relate to other elements in a well test configuration XML structure, see  Well Test Hierarchy . Example\n ...",t:"SetPoint Action Type"},"2960":{i:0.000283202130777521,u:"../Content/Topics/Well Test/XML Config - Test Action Type.htm",a:"The Test action type is used in Host-based command sequencing to wait for a specified period. The primary use of this action is to halt the process until the well test time has elapsed before processing the well test record. This is also useful is a variety of situations such as waiting for the ...",t:"Test Action Type"},"2961":{i:0.00133650333557619,u:"../Content/Topics/Well Test/XML Config - UisCommand Action Type.htm",a:"The UIS Command (UisCommand) action type is used to send a UIS Command to a configured device.  To learn about how these elements relate to other elements in a well test configuration XML structure, see  Well Test Hierarchy . Example\n \u003cActions\u003e \u003cAction type=\"UisCommand\" command=\"SETMSVPOS\" ...",t:"UisCommand Action Type"},"2962":{i:0.000333667005175467,u:"../Content/Topics/Well Test/XML Commands.htm",a:"A \u003cPosition\u003e element has one or more defined \u003cCommands\u003e.  To learn about how these elements relate to other elements in a well test configuration XML structure, see  Well Test Hierarchy . Example\n \u003cPositions\u003e \u003cPosition\u003e \u003cCommands\u003e \u003cCommand type=\"START\"\u003e \u003cActions\u003e \u003cAction …\u003e \u003cAction  /\u003e . . . \u003cAction ...",t:"Commands, Command"},"2963":{i:0.000266576423887704,u:"../Content/Topics/Well Test/XML Conditions.htm",a:"The  Monitor  action type must specify one or more monitor definition blocks in the configuration XML. Each monitor block is contained within the \u003cMonitors\u003e element. Each \u003cMonitors\u003e element contains one or more \u003cMonitor\u003e blocks, each containing one or more \u003cConditions\u003e and \u003cActions\u003e. And each of ...",t:"Conditions, Condition"},"2964":{i:0.000276837258353849,u:"../Content/Topics/Well Test/XML ExitOnTagValueActions.htm",a:"The Test action type also supports a series of conditional properties that can be used to interact with the primary test action. They represent the values of an expression and when the expression is true, the conditional actions defined will be executed. For example, specify an Exit action to exit ...",t:"ExitOnTagValueActions"},"2965":{i:0.000134659976312279,u:"../Content/Topics/Well Test/XML General.htm",a:"The \u003cGeneral\u003e element of the XML configuration defines general properties required by the CygNet Well Test Module, and consists of the following child elements: \u003cPointScheme\u003e — Specifies the  point scheme  used by the CygNet Well Test Module. \u003cRecordRetentionDays\u003e — Specifies the number of days to ...",t:"General"},"2966":{i:0.00016266951496837,u:"../Content/Topics/Well Test/XML Headers.htm",a:"The \u003cHeaders\u003e element of the XML configuration contains elements that configure a list of headers, each separator facility, its properties, and their associated wells. To learn about how these elements relate to other elements in a well test configuration XML structure, see  Well Test Hierarchy . ...",t:"Headers, Header"},"2967":{i:0.000194670313459984,u:"../Content/Topics/Well Test/XML HeaderTemplates.htm",a:"The \u003cHeaderTemplates\u003e element of the XML configuration contains a list of all the defined header templates. A header template contains a list of positions, the commands associated with each position, and all actions associated with each command. Additionally, commands can also be defined at the ...",t:"HeaderTemplates, HeaderTemplate"},"2968":{i:0.000409325502415114,u:"../Content/Topics/Well Test/XML Monitors.htm",a:"A Monitor action type may contain multiple monitor definition blocks, configured within the Monitors Definitions block. Each Definitions block contains one or more Conditions and one or more Actions. In the XML configuration these actions are specified in the \u003c Monitors \u003e, \u003c Conditions \u003e and \u003c ...",t:"Monitors, Monitor"},"2969":{i:0.00194349887576978,u:"../Content/Topics/Well Test/XML Parameters.htm",a:"The  UisCommand  and  Script  action type can contain optional \u003c Parameters \u003e elements. These are used to pass in any parameters to the UIS Command or the VB script. A \u003cParameters\u003e element has defined \u003cParameter\u003e elements, each containing one or more \u003cPart\u003e elements. Parts are used to build strings ...",t:"Parameters, Parameter, Part"},"2970":{i:0.000180360160923694,u:"../Content/Topics/Well Test/XML Positions.htm",a:"A \u003cHeaderTemplate\u003e element has defined \u003cPositions\u003e. Positions are crucial to the effectiveness of the well test process.  To learn about how these elements relate to other elements in a well test configuration XML structure, see  Well Test Hierarchy . Example\n \u003cHeaderTemplates\u003e \u003cHeaderTemplate\u003e ...",t:"Positions, Position"},"2971":{i:0.000424832151304802,u:"../Content/Topics/Well Test/XML SleepTimerActions.htm",a:"The  Monitor  or  Test  action types support the configuration of sleep time action(s) to specify how long the Test or Monitor action type will \"sleep\" before updating the actual timeout value and evaluating the conditional expression. If any actions are specified for the Sleep time actions,  then ...",t:"SleepTimerActions"},"2972":{i:0.000185032832678475,u:"../Content/Topics/Well Test/XML TimeoutActions.htm",a:"The Monitor action type supports the configuration of a timeout value. When the timeout expires, the action(s) specified in the Timeout Actions property will be executed. In the XML configuration these timeout actions are specified in the \u003c TimeoutActions \u003e element.  To learn about how these ...",t:"TimeoutActions"},"2973":{i:0.000393698413488124,u:"../Content/Topics/Well Test/XML TrueAction, FalseAction.htm",a:"The  PointValueCompare  action type supports the configuration of true and false actions, these will be executed if the comparative expression is evaluated as true and/or false. If the expression evaluated is true, the action defined in the True Action property will be executed. Similarly, if the ...",t:"TrueAction, FalseAction"},"2974":{i:0.000138144600692801,u:"../Content/Topics/Well Test/XML UdcConfiguration.htm",a:"The \u003cUdcConfiguration\u003e element of the XML configuration contains elements that define the UDC definitions where the CygNet Well Test Module will post well test values to well-known points. The UDCs for these points are configurable with the \u003cUdcConfiguration\u003e and \u003cUdcDef\u003e elements. To learn about ...",t:"UdcConfiguration, UdcDef"},"2975":{i:0.000192988677093017,u:"../Content/Topics/Well Test/XML Wells.htm",a:"The \u003cWells\u003e element of the XML configuration contains a list of \u003cWell\u003es associated with each header. Each well is associated with a facility tag and position number. Only enabled wells will be tested. Two attributes, enabled and enabledUdc, are used to determine if the well is active and should be ...",t:"Wells, Well"},"2976":{i:0.000131343238013185,u:"../Content/Topics/Well Test/XML WellTestConfiguration.htm",a:"The \u003cWellTestConfiguration\u003e element is the root node for the well test configuration  XML. Other elements nested between the opening and closing WellTestConfiguration tags define the general, headers, wells, UDC configuration, and header template, positions, commands, actions, and action type ...",t:"WellTestConfiguration"},"2977":{i:0.000179254472093345,u:"../Content/Topics/Well Test/Creating the Relative Facilities File.htm",a:"Information about a CygNet installation\u0027s set of relative facilities can be configured as part of the Canvas application running on the CygNet host server. This information can be exported directly from the Relative Facility settings on the Backstage View within Canvas or the relative facility ...",t:"Creating the Relative Facilities File"},"2978":{i:0.000122039775854441,u:"../Content/Topics/Well Test/Well Test Results - Processing and Storing.htm",a:"Once the well test action sequence completes, the well test contents must be generated. Since the values for the well test record can come from various locations due to the unique configurations at the field-level, a programmable approach in the form of a VB script is required. After the test is ...",t:"Processing and Storing Well Test Results"},"2979":{i:0.000135006573203961,u:"../Content/Topics/Well Test/Well Test Results - Retrieving.htm",a:"Any external system can retrieve well test records using the  CygNet.API.WellTest . The CygNet.API.WellTest has two helper functions that can be used to retrieve well test records: The GetAllWellTests function is supplied with starting and ending timestamps. The well test records are returned in a ...",t:"Retrieving Well Test Records"},"2980":{i:0.000391510400760901,u:"../Content/Topics/Well Test/Sample Canvas Well Test Screens.htm",a:"There are sample well test screens and scripts included on the CygNet CD_Image. The .can files must be opened in the Canvas HMI application, are based on a sample configuration, and must be modified to work within your installation.   Sample Files Location In the CD_Image folder find the ...",t:"Sample Well Test Screens and Scripts"},"2981":{i:0.0165385050091476,u:"../Content/Resources/BridgeAPI/Help.html",a:"Introduction \n                The CygNet Bridge API provides methods for secure access to CygNet system data for integration into desktop, mobile, or web applications. \n                Refer to CygNet Help v9.3 for information about CygNet Bridge companion products and installation guidance. ...",t:"CygNet Bridge API Help Page"},"2982":{i:0.000208475943962377,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=AccessLevel.html",a:"Help Page Home AccessLevel Possible enumeration values: Name Description None Read Update Add Delete Admin",t:"AccessLevel"},"2983":{i:0.000161383020441666,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=AlarmAckError.html",a:"Help Page Home AlarmAckError Alarm acknowledgement errors Name Description Type Additional information alarmId Alarm ID for the alarm acknowledgement error AlarmIdDTO None error Alarm acknowledgement error message \n                        string\n                     None",t:"AlarmAckError"},"2984":{i:0.000161383020441666,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=AlarmClearError.html",a:"Help Page Home AlarmClearError Alarm clearance errors Name Description Type Additional information alarmId Alarm ID associated with the alarm clearance error AlarmIdDTO None error Alarm clearance error message \n                        string\n                     None",t:"AlarmClearError"},"2985":{i:0.000392742008170468,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=AlarmIdDTO.html",a:"Help Page Home AlarmIdDTO Alarm ID object Name Description Type Additional information pointTag Point tag associated with the Alarm ID \n                        string\n                     None alarmRecordVersion Version of alarm record for the point tag \n                        string\n               ...",t:"AlarmIdDTO"},"2986":{i:0.000773591026210919,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=AlarmRecordDTO.html",a:"Help Page Home AlarmRecordDTO Alarm Record object Name Description Type Additional information isSuppressed Indicates whether or not the alarm is suppressed \n                        boolean\n                     None pointTag Point tag associated with the alarm \n                        string\n        ...",t:"AlarmRecordDTO"},"2987":{i:9.68632085280355E-05,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=ComparisonMethod.html",a:"Help Page Home ComparisonMethod Possible enumeration values: Name Description String CaseInsensitiveString Integer FloatingPoint DateTime",t:"ComparisonMethod"},"2988":{i:9.68632085280355E-05,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=ComparisonOperator.html",a:"Help Page Home ComparisonOperator Possible enumeration values: Name Description Equal NotEqual GreaterThan GreaterThanOrEqual LessThan LessThanOrEqual",t:"ComparisonOperator"},"2989":{i:0.000309557789219983,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=CygNetProperty.html",a:"Help Page Home CygNetProperty Possible enumeration values: Name Description CorePropertyBase ValidToken InvalidToken NotAToken PercentToken Invalid Value Timestamp BaseStatus UserStatus AlarmAcknowledgementStatus Description Units Tag TagLong TagFull PointId PointIdLong SiteService Site Service ...",t:"CygNetProperty"},"2990":{i:0.000290011122864867,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=DataElementDTO.html",a:"Help Page Home DataElementDTO Specifies a data group element Name Description Type Additional information byUdc If byUDC = true, elementID contains a UDC; otherwise it contains a data group element ID (DEID) \n                        boolean\n                     Required elementId The data group ...",t:"DataElementDTO"},"2991":{i:0.000302661791003801,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=DataElementValueDTO.html",a:"Help Page Home DataElementValueDTO Specifies a data element and value Name Description Type Additional information dataElement The data group element DataElementDTO Required value The value of the element \n                        string\n                     Required",t:"DataElementValueDTO"},"2992":{i:0.000208475943962377,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=DataGroupProperty.html",a:"Help Page Home DataGroupProperty Data group property enumerations (PropId) Possible enumeration values: Name Description Description Data Group description Facility Data Group facility Visible Visible WebEnabled Web enabled DatabaseKey DB key DataGroupSpecificData Data Group specific data ...",t:"DataGroupProperty"},"2993":{i:0.000302661791003801,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=DataGroupTransactionDTO.html",a:"Help Page Home DataGroupTransactionDTO Encapsulates a data group transaction Name Description Type Additional information header This transaction\u0027s header information DataGroupTransactionHeaderDTO None transactionDataXml This transaction\u0027s data in XML format \n                        string\n          ...",t:"DataGroupTransactionDTO"},"2994":{i:0.000337104046385579,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=DataGroupTransactionHeaderDTO.html",a:"Help Page Home DataGroupTransactionHeaderDTO Encapsulates a data group transaction\u0027s header information Name Description Type Additional information deviceId This transaction\u0027s device identifier \n                        string\n                     None facilityId This transaction\u0027s facility ...",t:"DataGroupTransactionHeaderDTO"},"2995":{i:0.000208475943962377,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=DeviceProperty.html",a:"Help Page Home DeviceProperty Device property enumerations Possible enumeration values: Name Description CommFailoverEnabled Comm failover enabled CommSelection Comm selection CommSpecificInfo Comm specific info CryoutEnabled Cryout enabled DeviceAddress Device address DeviceCategory Device category ...",t:"DeviceProperty"},"2996":{i:0.000208475943962377,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=FacilityAttributeDefinitionDTO.html",a:"Help Page Home FacilityAttributeDefinitionDTO DTO describing the Facility Attributes Name Description Type Additional information description Description of the facility attribute \n                        string\n                     None category Category of the facility attribute \n                  ...",t:"FacilityAttributeDefinitionDTO"},"2997":{i:0.000208475943962377,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=FacilityLink.html",a:"Help Page Home FacilityLink Facility Link Name Description Type Additional information facility Facility name \n                        string\n                     None ordinal Ordinal value; -2 = (Dev) \n                        integer\n                     None",t:"FacilityLink"},"2998":{i:0.000208475943962377,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=FacilityRecordDTO.html",a:"Help Page Home FacilityRecordDTO Facility record Name Description Type Additional information tag Facility tag \n                        string\n                     None type Facility type \n                        string\n                     None description Facility description \n                     ...",t:"FacilityRecordDTO"},"2999":{i:0.00013960667899804,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=FilterCriteriaDTO.html",a:"Help Page Home FilterCriteriaDTO Compares a property to a specified value, using the given operator. \n            PropertyId is on the left-hand side of the operator, and Value is on the right. Name Description Type Additional information propertyId ID of the CygNet property CygNetProperty Required ...",t:"FilterCriteriaDTO"},"3000":{i:0.000255568867483089,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=FilterCriteriaListDTO.html",a:"Help Page Home FilterCriteriaListDTO Combines FilterCriteria into a single compound filter using the specified logical operator Name Description Type Additional information criteria List of FilterCriteria to be combined \n                                Collection of  FilterCriteriaDTO Required ...",t:"FilterCriteriaListDTO"},"3001":{i:0.000208475943962377,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=GroupAttributeDefinitionDTO.html",a:"Help Page Home GroupAttributeDefinitionDTO DTO describing the Group Attributes Name Description Type Additional information description Description of the attribute \n                        string\n                     None inUse Indicates whether or not the attribute is currently in use \n            ...",t:"GroupAttributeDefinitionDTO"},"3002":{i:0.00013783655868131,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=GroupFilterCriteriaDTO.html",a:"Help Page Home GroupFilterCriteriaDTO Filter criteria set.  The GroupProperties of Category, Type, and ReferenceType have special potential values. \n            Category values may be: None, RootGroup, SubGroup, Leaf, or Admin\n            Type values may be: None, StandardGroup, SummaryGroup, ...",t:"GroupFilterCriteriaDTO"},"3003":{i:0.000791552055300045,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=GroupHeaderDTO.html",a:"Help Page Home GroupHeaderDTO Minimal group identification DTO Name Description Type Additional information id ID of the group node \n                        unsigned integer\n                     None type NodeType enumeration defining the type of the group node NodeType None category NodeCategory ...",t:"GroupHeaderDTO"},"3004":{i:0.000349754714524513,u:"../Content/Resources/BridgeAPI/Help/ResourceModel@modelName=GroupNodeDTO.html",a:"Help Page Home GroupNodeDTO Group node detail DTO Name Description Type Additional information attributes Array of attributes in sorted order.  Index of array indicates ID \n                                Collection of string\n\n                     None applications Array of applications in sorted ...",t:"GroupNodeDTO"},});