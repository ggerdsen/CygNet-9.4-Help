<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Canvas.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Canvas|Using Canvas Controls and Objects|CygNet Grid">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="description" content="Describes the methods of a CygNet grid." /><title>CygNet Grid Methods</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/HelpTable2.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/NoBorder8.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/HTML5.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><a class="MCBreadcrumbsLink" href="../Canvas_Overview/Canvas.htm">Canvas</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="All_Controls.htm">Using Canvas Controls and Objects</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="CygNet_Grid.htm">CygNet Grid</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">CygNet Grid Methods</span>
        </div>
        <h2><a name="aanchor64"></a>
            <MadCap:concept term="Canvas Controls;Canvas Scripting" />CygNet Grid Methods</h2>
        <p>
            <img src="../../Resources/Images/Buttons Icons/Method_script.png" alt="Method icon" title="Method icon" /> The <b>CygNet Grid</b> supports the following scripting methods. </p>
        <p>See <a href="../Scripting/Accessing_Screen_Objects.htm">Accessing Screen Objects</a> for more information about how to view control objects in script in the <span class="GeneralProduct_Mid">Canvas application</span>.</p>
        <p>Refer to the <a href="https://github.com/cygnet-software/CanvasDemoScreens"><span class="GeneralProduct_Short">Canvas</span> Demo Screens</a> on GitHub for examples more detail on some of these methods.</p>
        <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');" class="TableStyle-HelpTable2" cellspacing="0" summary="CygNet Grid Methods">
            <col class="TableStyle-HelpTable2-Column-Column1" style="width: 10%;" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">Method</th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><b>AddRow</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>The <b>AddRow</b> method adds a row to the grid. It can include a facility tag.</p>
                            <p class="Example">Example</p>
                            <table class="Code" summary="Code example">
                                <tr>
                                    <td>
                                        <p class="Code"><code>public void AddRow()</code>
                                        </p>
                                        <p class="Code"><code>public void AddRow(FacilityTag facility)</code>
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>AddRows</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>The <b>AddRows</b> method adds rows to the grid. It can take an enumerated list of facility tags.</p>
                            <p class="Example">Example</p>
                            <table class="Code" summary="Code example">
                                <tr>
                                    <td>
                                        <p class="Code">public void AddRows(IEnumerable&lt;FacilityTag&gt; facilities)</p>
                                    </td>
                                </tr>
                            </table>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><b>BuildFromXML</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>&#160;</p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>Equals</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>The <b>Equals</b> method determines whether the specified object is equal to the current object.</p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><b>Export</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>The <b>Export</b> method exports data from a grid column. Supported formats include CSV, HTML, and Text. Export from historical columns is not supported.</p>
                        <p class="Example">Example</p>
                        <p>The following example uses a button click event and edit box to provide a path to export to. </p>
                        <table class="Code" summary="Code example">
                            <tr>
                                <td>
                                    <p class="Code">Objects.CsvExportButton.Click += new EventHandler(this.CsvExportButton_Click);</p>
                                    <p class="Code">Objects.HtmlExportButton.Click += new EventHandler(this.HtmlExportButton_Click);</p>
                                    <p class="Code">Objects.TextExportButton.Click += new EventHandler(this.TextExportButton_Click);</p>
                                    <p class="Code">Objects.EditBox1.Initialize += new EventHandler(this.EditBox1_Initialize);</p>
                                    <p class="Code">&#160;</p>
                                    <p class="Code">private void EditBox1_Initialize(object sender, EventArgs args)</p>
                                    <p class="Code">{</p>
                                    <p class="Code2">Objects.EditBox1.Text = @"E:\temp\GridExport";</p>
                                    <p class="Code">}</p>
                                    <p class="Code">&#160;</p>
                                    <p class="Code">private void CsvExportButton_Click(object sender, EventArgs args)</p>
                                    <p class="Code">{</p>
                                    <p class="Code2">Objects.CygNetGrid1.Export(Objects.EditBox1.Text + ".csv",</p>
                                    <p class="Code3">Canvas.Controls.Grid.GridExportFormat.Csv,</p>
                                    <p class="Code3">true);</p>
                                    <p class="Code">}</p>
                                    <p class="Code">&#160;</p>
                                    <p class="Code">private void HtmlExportButton_Click(object sender, EventArgs args)</p>
                                    <p class="Code">{</p>
                                    <p class="Code2">Objects.CygNetGrid1.Export(Objects.EditBox1.Text + ".html",</p>
                                    <p class="Code3">Canvas.Controls.Grid.GridExportFormat.Html,</p>
                                    <p class="Code3">true);</p>
                                    <p class="Code">}</p>
                                    <p class="Code">&#160;</p>
                                    <p class="Code">private void TextExportButton_Click(object sender, EventArgs args)</p>
                                    <p class="Code">{</p>
                                    <p class="Code2">Objects.CygNetGrid1.Export(Objects.EditBox1.Text + ".txt",</p>
                                    <p class="Code3">Canvas.Controls.Grid.GridExportFormat.Text,</p>
                                    <p class="Code3">true);</p>
                                    <p class="Code">}</p>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>Focus</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>The <b>Focus</b> method sets the focus to the control to allow further operations.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><b>GetCell</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>The <b>GetCell</b> method retrieves cell data from the grid. It returns a DataCell object.</p>
                            <p class="Example">Example</p>
                            <p>A DataCell object is in the following namespace:</p>
                            <table class="Code" summary="Code example">
                                <tr>
                                    <td>
                                        <p class="Code">public Canvas.Controls.Grid.CygNetGrid.DataCell GetCell(int row, int column)</p>
                                    </td>
                                </tr>
                            </table>
                            <p>A DataCell has one public method:</p>
                            <table class="Code" summary="Code example">
                                <tr>
                                    <td>
                                        <p class="Code">public virtual CygNet.Data.Core.FacilityTag GetAssociatedFacilityTag()</p>
                                    </td>
                                </tr>
                            </table>
                            <p>A DataCell has four public properties:</p>
                            <table class="Code" summary="Code example">
                                <tr>
                                    <td>
                                        <p class="Code"><code>public CygNet.Data.Alarms.CygNetAlarmProperties.CygNetAlarmProperty AlarmDisplayProperty { get; }</code>
                                        </p>
                                        <p class="Code"><code>public System.Windows.Media.Brush BackgroundColor { get; set; }</code>
                                        </p>
                                        <p class="Code"><code>public CygNet.Data.Core.CygNetCoreProperties.CygNetProperty CoreDisplayProperty { get; }</code>
                                        </p>
                                        <p class="Code"><code>public virtual object Value { get; set; }</code>
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>GetCellValue</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>The <b>GetCellValue</b> method retrieves cell values from the grid. Parameters include row and column. Returns a string value.</p>
                            <p class="Example">Example</p>
                            <table class="Code" summary="Code example">
                                <tr>
                                    <td>
                                        <p class="Code">public string GetCellValue(int row, int column)</p>
                                    </td>
                                </tr>
                            </table>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><b>GetColumnDefinition</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">&#160;</td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>GetData</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>The <b>GetData</b> method returns data in a specified data format.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><b>GetHashCode</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>The <b>GetHashCode</b> method returns a hash code for the current object.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>GetType</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>The <b>GetType</b> method returns the runtime type of the current instance.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><b>ReceiveNewFacilities</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>&#160;</p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>ReceiveNewSiteService</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>&#160;</p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><b>Refresh</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>The <b>Refresh</b> method refreshes the data in the control from the Current Value Service (CVS).</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>ResolveRelativeFacility</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>The <b>ResolveRelativeFacility</b> method returns the resolved relative facility.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p style="font-weight: bold;">SelectAll</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>The <b>Select All</b> method allows multi-row selection via script. If the <a href="All_Properties.htm#SelectionMode">SelectionMode</a> property is <i>Multiple</i> or <i>Extended</i>, <b>SelectAll</b> will select all rows in a grid and the <b>SelectedRows</b> property will return the matching DataRow objects. <b>SelectAll</b> will not obviously change the selection if SelectionMode is <i>Single</i>.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>SerializeObject</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>The <b>SerializeObject </b>method stores the object in memory so that it can be recreated when needed.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><b>SetCellValue</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>The <b>SetCellValue</b> method can be used to add custom data to the grid. Parameters include row, column, and string value. Returns a Boolean value to indicate success or failure.</p>
                            <p class="Example">Example</p>
                            <table class="Code" summary="Code example">
                                <tr>
                                    <td>
                                        <p class="Code">public bool SetCellValue(int row, int column, string value)</p>
                                    </td>
                                </tr>
                            </table>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>SetRowFacility</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>&#160;</p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><b>ShowFacilityFilterDialog</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>&#160;</p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><b>ToString</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>The <b>ToString</b> method returns a string that represents the current object.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyB-Column1-Body1">
                        <p><b>UpdateFacilityTagListFilter</b>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyA-Column1-Body1">
                        <p>The <b>UpdateFacilityTagListFilter</b> method changes the facility filter of the grid. The method ensures that the <a href="CygNet_Grid_Properties.htm#Row_config_facility">FacilitySource</a> property is <b>&lt;Self&gt;</b>, updates the <a href="CygNet_Grid_Properties.htm#Row_config_facility">FacilityTagListFilter</a> property, and then calls on the <b>Refresh</b> method.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <hr width="100%" size="1" />
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/NoBorder8.css');" summary="MasterFooter" class="TableStyle-NoBorder8" cellspacing="0">
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <tbody>
                <tr class="TableStyle-NoBorder8-Body-Body1">
                    <td class="TableStyle-NoBorder8-BodyB-Column1-Body1">
                        <p><a href="mailto:softwaredocs.feedback@weatherford.com?subject=Documentation%20feedback"><img src="../../Resources/Images/Buttons Icons/Feedback_footer.png" alt="Let us know how we can improve this topic." title="Let us know how we can improve this topic." class="Inline" /></a>
                        </p>
                    </td>
                    <td class="TableStyle-NoBorder8-BodyA-Column1-Body1">
                        <p class="MasterFooterContact"><a href="https://www.weatherford.com/en/products-and-services/production/production-4-0/iot-scada-platform//" target="_blank"><img src="../../Resources/Images/General/WFT_31x21.png" alt="CygNet at weatherford.com" title="CygNet at weatherford.com" /></a>
                        </p>
                        <p class="MasterFooterContact">© <span class="GeneralCurrentYear">2020</span> Weatherford. All rights reserved.</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>