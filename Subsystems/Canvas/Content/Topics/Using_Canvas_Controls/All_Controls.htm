<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Canvas.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Canvas">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="description" content="Lists all Canvas controls, tools, and objects." /><title>Canvas Controls and Objects</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/HelpTable2.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/NoBorder8.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/HTML5.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><a class="MCBreadcrumbsLink" href="../Canvas_Overview/Canvas.htm">Canvas</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Canvas Controls and Objects</span>
        </div>
        <h1><a name="aanchor26"></a>
            <MadCap:concept term="Canvas Controls" />Using <span class="GeneralProduct_Short">Canvas</span> Controls and Objects</h1>
        <p>This topic introduces the <span class="GeneralProduct_Short">Canvas</span> controls and objects.</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/HelpTable2.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-HelpTable2" cellspacing="0" summary="Canvas Controls and Objects">
            <col class="TableStyle-HelpTable2-Column-Column1" style="width: 150px;" />
            <col class="TableStyle-HelpTable2-Column-Column1" style="width: 150px;" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <col class="TableStyle-HelpTable2-Column-Column1" />
            <thead>
                <tr class="TableStyle-HelpTable2-Head-Header1">
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">
                        <p>Control</p>
                    </th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1">
                        <p>Type</p>
                    </th>
                    <th class="TableStyle-HelpTable2-HeadE-Column1-Header1" style="text-align: center;">
                        <img src="../../Resources/Images/General/CygNet_Aware.png" title="CygNet Aware" alt="CygNet Aware" />
                    </th>
                    <th class="TableStyle-HelpTable2-HeadD-Column1-Header1">
                        <p>Description</p>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Alarm_Grid.htm">Alarm Grid</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Grids</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Grid.png" class="Inline" alt="Grid icon" title="Grid" /> The<b> Alarm Grid</b> is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware control that supports the creation of customizable and interactive tables for the display and management of large amounts of alarm data in columns and rows. Five customizable column types are supported: Alarm, Facility, Generic, Point, and a column displaying an alarm icon, which can be customized based on alarm priority for unacknowledged alarms. Alarm columns are mapped to an alarm attribute; facility columns are mapped to a facility attribute; generic columns can display any kind of scripted data of your choice and its cells can be edited in run mode;  and point columns are mapped to point attribute. Data can be filtered using custom alarm filtering rules. Cell background color, text color, and border color can be manually configured or sourced from the colors configured in the CygNet point scheme for single color, foreground color, or background color. Colors in the control can be overridden when a custom color palette is selected for the screen.  You can also configure whether to display alarm acknowledgment as a blinking cell background, blinking text, or blinking border when a point is in alarm. A context menu is available in run mode to facilitate alarm acknowledgment, alarm clearing, alarm hiding, and ad hoc alarm suppression.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Button.htm">Button</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Common</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Button.png" class="Inline" alt="Button icon" title="Button" /> The <b>Button</b> is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware tool that can be used to add square or rectangular forms to your screens, which can be easily scripted to manage user interaction with CygNet data, for example, trigger an event, confirm an action, interact with other screen controls or other screens, or even start other applications. The control can display static text, such as a label, or dynamic text based on point or facility attributes. Dynamic text is built using tokens, which can represent real-time CVS point properties, point configuration properties, and facility properties.  The control can be configured with a valid point configuration but prevented from retrieving any <span class="GeneralSoftwareNameShort">CygNet</span> data, allowing the display of static text while still allowing <span class="GeneralSoftwareNameShort">CygNet</span> data context available from script. The control's background, text, and border color can be explicitly configured or sourced from the point state color defined for the associated point. Colors in the control can be overridden when a custom color palette is selected for the screen.  Alarm indication (blinking) is supported for the control's text and border when the associated point is in alarm.  
			Date, time, and value formatting for the text displayed on the control is supported. The control can be hidden if the associated point is invalid. The mouse cursor that appears when the mouse hovers over the control is configurable.  Font sizing, text styling, and text weighting are also configurable. This control supports tooltips, which can be displayed as tokenized text, a <span class="GeneralProduct_Short">Canvas</span> object, or the tooltip can be scripted to retrieve and display values for related points or <span class="GeneralSoftwareNameShort">CygNet</span> notes. A context menu is available in run mode with access to CygNet point and alarm data, including alarm acknowledgment, current and history values, point and facility configuration, and trending point data on a default chart. Buttons also support the addition of a configurable image.
		</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Chart.htm">Chart</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Charts</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Chart.png" class="Inline" alt="Chart icon" title="Chart" /> The <b>Chart</b> is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware control that provides a customizable means to visualize point values and historical CygNet data in several types of charts. The <span class="GeneralProduct_Short">Canvas</span> chart is highly configurable and supports the following options: an unlimited number of series that can be styled as desired, optionally displaying historical rollup values; configurable date ranges, both relative and absolute; live data updates at a configured interval allowing the chart to trend data at a real-time pace; the display of time slices and tooltips; optional, configurable legend options (date and value format, dynamic text display based on real-time properties); configurable x- and y-axis features (label color, position, tick color, and title); a configurable toolbar and its position, and dragging, panning, and zooming in run mode. The chart supports <span class="GeneralSoftwareNameShort">CygNet</span> data natively and non-<span class="GeneralSoftwareNameShort">CygNet</span> data via script. Other run mode options include stopping/restarting live updates, changing the date and time range, saving/opening a chart's configuration as a default chart, printing the current chart, export as an image, and export data to a CSV file.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Check_Box.htm">Check Box</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Common</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>&#160;</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Check_Box.png" class="Inline" alt="Check Box icon" title="Check Box" /> The <b>Check Box</b> can be used for a singular true or false option on a screen. Multiple check boxes may be added to any screen, but they operate independently of each other. The check box can be configured to display in a checked (true) state. You can also add a label to appear on the left or right of the check box and the font size of the label is customizable. Script is required to facilitate user interaction with a check box object.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Combo_Box.htm">Combo Box</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Common</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>&#160;</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Combo_Box.png" class="Inline" alt="Combo Box icon" title="Combo Box" /> A <b>Combo Box</b> provides a drop-down list control for your screens, where a user may select one among a list of mutually exclusive values. The list of items in the drop-down list is defined using the combo box's <b>Items</b> property. Each item in the drop-down list has a Label and a Value, either of which can be called in script to facilitate user interaction. You can configure the list to default to the first item and add some explanatory text to guide your users when no option has been selected. The background color of the combo box 's header and the color of the text in the combo box list is configurable. Font sizing, text styling, and text weighting are also configurable. </p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="CygNet_Grid.htm">CygNet Grid</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Grids</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Grid.png" class="Inline" alt="Grid icon" title="Grid" /> The<b> CygNet Grid</b> is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware control that supports the creation of customizable and interactive tables for the display and management of large amounts of data in columns and rows. Four customizable column types are supported: Facility, Generic, History, and Point: facility columns are mapped to a facility attribute and can resolve to a relative facility; generic columns can display any kind of scripted data of your choice and its cells can be edited in run mode; history columns are used to add a <a href="Sparkline.htm">sparkline</a> chart in each cell for a specified UDC; point columns are mapped to a UDC and point attribute and the color can be explicitly configured or sourced from the point state color defined for the point represented in the row. The facility and SiteService are configured for the grid row and each can be explicitly set (and filtered) or sourced from other another control or the screen. Any column's background, text, and border color can be explicitly configured or sourced from the point state color defined for the associated point. Colors in the control can be overridden when a custom color palette is selected for the screen. Alarm indication (blinking) is supported for a point column's background, text, and border when the associated point is in alarm.  A context menu is available in run mode with access to CygNet point and alarm data, including alarm acknowledgment, current and history values, point and facility configuration, and trending point data on a default chart. Each cell in a CygNet grid is like a <a href="Text_Tool.htm">text tool</a> and the two controls share many color and point configuration properties. 
			</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Detail.htm">Detail</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Data Visualization</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Detail.png" class="Inline" alt="Detail icon" title="Detail" /> The <b>Detail</b> control is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware tool, which displays real-time data for a single point in multiple formats within the same control. The control contains six elements: </p>
                            <ul>
                                <li value="1">three tokenized text strings (top, middle and bottom).  The control can display static text, such as a label, or dynamic text based on point or facility attributes. Dynamic text is built using tokens, which can represent real-time CVS point properties, point configuration properties, and facility properties. </li>
                                <li value="2">an alarm icon that can be configured to change color based on point state and change image based on alarm priority</li>
                                <li value="3">a small <a href="Sparkline.htm">sparkline</a> with configurable  line color, x- and y-axis, date ranges, both relative and absolute, and live data updates </li>
                                <li value="4">an arrow that is scripted to flip the detail control when clicked and display an object of your choosing on the reverse side of the detail control. The object on the reverse side will receive its point configuration from the detail control. </li>
                            </ul>
                            <p>The last three elements (alarm icon, sparkline, and flip icon) can be toggled on or off.</p>
                            <p>The control's background and text color can be explicitly configured or sourced from the point state color defined for the associated point. Colors in the control can be overridden when a custom color palette is selected for the screen. Date, time, and value formatting for the text displayed on the control is supported.  The control can be hidden if the associated point is invalid.  Font sizing, text styling, and text weighting are also configurable.  This control supports tooltips, which can be displayed as tokenized text, a <span class="GeneralProduct_Short">Canvas</span> object, or the tooltip can be scripted to retrieve and display values for related points or <span class="GeneralSoftwareNameShort">CygNet</span> notes.  A context menu is available in run mode with access to CygNet point and alarm data, including alarm acknowledgment, current and history values, point and facility configuration, and trending point data on a default chart.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Donut.htm">Donut</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Data Visualization</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Donut.png" class="Inline" alt="Donut icon" title="Donut" /> The <b>Donut </b>is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware control, which displays real-time point data on a circular linear scale. Data is represented in a ring that fills the donut in a clock-wise direction to a value between a lower and upper bound. The source of the lower value bound and upper value bound can be either hard-coded to an explicit value, or dynamically determined for each facility by sourcing the value from an application-specific attribute of the associated point (using an Indexed field or a General data field). A donut on a templated screen supports different bounds for each source facility. By using a point attribute to store the bounds (for example, Indexed 1 for the lower value bound and Indexed 2 for the upper value bound), you can have a templated screen without having to script the control. A configurable value marker is displayed on the donut to indicate the point value. A second inner ring is supported to show alarm ranges that correspond to the alarm setpoints for the associated point. A donut can optionally be labeled with three tokenized text strings. The control can display static text, such as a label, or dynamic text based on point or facility attributes. Dynamic text is built using tokens, which can represent real-time CVS point properties, point configuration properties, and facility properties.   The color of the donut's color properties can be explicitly configured or can be sourced from the point state of the associated point.  Colors in the control can be overridden when a custom color palette is selected for the screen. Font sizing, text styling, and text weighting are also configurable.  Date, time, and value formatting for the text displayed on the control is supported.  The control can be hidden if the associated point is invalid.  This control supports tooltips, which can be displayed as tokenized text, a <span class="GeneralProduct_Short">Canvas</span> object, or the tooltip can be scripted to retrieve and display values for related points or <span class="GeneralSoftwareNameShort">CygNet</span> notes.  A context menu is available in run mode with access to CygNet point and alarm data, including alarm acknowledgment, current and history values, point and facility configuration, and trending point data on a default chart.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Edit_Box.htm">Edit Box</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Common</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>&#160;</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Edit_Box.png" class="Inline" alt="Edit Box icon" title="Edit Box" /> The <b>Edit Box</b> can be added to a screen to allow single-line user input. Its purpose is to take user input, which can be retrieved via script using the Text property. The input could be used in a variety of ways. One of the most common implementations is to specify the value for a setpoint command; for example, to enter a maintenance date. Explanatory text for a user can be displayed when no other text has been entered. Script is required to facilitate user interaction with an edit box object.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Heat_Map.htm">Heat Map</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Data Visualization</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Heat_Map.png" class="Inline" alt="Heat Map icon" title="Heat Map" /> The <b>Heat Map </b>is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware tool that can be used to display historical CygNet data in a two-dimensional representation in which data values are represented by a range of configurable colors. Its purpose is to visualize data in colored rectangular cells where the color of each cell represents the cell's value and makes it easy to compare all data values. Several other configuration properties are supported, including: configurable date ranges, both relative and absolute; historical rollup values; background, low range color, and high range color; visible color scale; cell padding, labels, and tooltips; visible top labels, and row height.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Image.htm">Image</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Common</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Image.png" class="Inline" alt="Image icon" title="Image" /> The <b>Image</b> control is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware tool that can be used to display images on your screens. Supported image file formats include scalable vector graphics (.svg), bitmap (.bmp), portable network graphics (.png), jpeg (.jpg and .jpeg), and graphics interchange format (.gif). The  image can be configured to display a default static image or a dynamic image that changes based on the point state of the associated point. 
            The control can be configured with a valid point configuration but prevented from retrieving any <span class="GeneralSoftwareNameShort">CygNet</span> data, allowing the display of static text while still allowing <span class="GeneralSoftwareNameShort">CygNet</span> data context available from script.  Date, time, and value formatting for the text displayed on the control is supported.  The control can be hidden if the associated point is invalid.  The mouse cursor that appears when the mouse hovers over the control is configurable.   Font sizing, text styling, and text weighting are also configurable.  This control supports tooltips, which can be displayed as tokenized text, a <span class="GeneralProduct_Short">Canvas</span> object, or the tooltip can be scripted to retrieve and display values for related points or <span class="GeneralSoftwareNameShort">CygNet</span> notes.  A context menu is available in run mode with access to CygNet point and alarm data, including alarm acknowledgment, current and history values, point and facility configuration, and trending point data on a default chart. The image control does not support animated .gifs, or animated .svgs, at this time. If no default or custom point state image is specified, a missing image icon  (<img src="../../Resources/Images/Buttons Icons/MissingImage.png" class="Inline" title="Missing image icon" alt="Missing image icon" />) is displayed at design and run mode.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Linear_Gauges.htm">Linear Gauge (Horizontal)</a>
                        </p>
                        <p><a href="Linear_Gauges.htm">Linear Gauge (Vertical)</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Data Visualization</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <p>
                                    <img src="../../Resources/Images/Buttons Icons/Control_LinearGaugeHorizontal.png" class="Inline" alt="Linear Gauge Horizontal icon" title="Linear Gauge Horizontal" />
                                    <img src="../../Resources/Images/Buttons Icons/Control_Linear_Gauge.png" class="Inline" alt="Linear Gauge Vertical icon" title="Linear Gauge Vertical" /> The two <b>Linear Gauge</b> controls are <span class="GeneralSoftwareNameShort">CygNet</span>-aware  tools, which display real-time point data on a horizontal or vertical object. Two separate controls are supported: the <b>Linear Gauge (Horizontal)</b> the <b>Linear Gauge (Vertical)</b>. Data is represented by a bar that fills the control to a calculated value between a lower and upper bound. The source of the lower value bound and upper value bound can be either hard-coded to an explicit value, or dynamically determined for each facility by sourcing the value from an application-specific attribute of the associated point (using an Indexed field, or a General data field). A guage on a templated screen supports different bounds for each source facility. By using a point attribute to store the bounds (for example, Indexed 1 for the lower value bound and Indexed 2 for the upper value bound), you can have a templated screen without having to script the control. Both linear gauges support a linear or logarithmic scale, with the scale values displayed along the bar from the lower to upper bound. A primary scale is displayed on the right side (Vertical) or bottom side (Horizontal) showing major and minor ticks. A secondary scale is displayed on the left side (Vertical) or top side (Horizontal) showing the lower and upper bound values. An optional text label based on point or facility attributes is centered below the vertical gauge or centered along the horizontal gauge. The control can display static text, such as a label, or dynamic text based on point or facility attributes. Dynamic text is built using tokens, which can represent real-time CVS point properties, point configuration properties, and facility properties. The color of the linear gauges' background, text label, the bar representing the value, and the empty bar portion can be explicitly configured or sourced from the point state of the associated point. Colors in the control can be overridden when a custom color palette is selected for the screen. Font sizing, text styling, and text weighting are also configurable.  Date, time, and value formatting for the text displayed on the control is supported.  The control can be hidden if the associated point is invalid.  This control supports tooltips, which can be displayed as tokenized text, a <span class="GeneralProduct_Short">Canvas</span> object, or the tooltip can be scripted to retrieve and display values for related points or <span class="GeneralSoftwareNameShort">CygNet</span> notes.  A context menu is available in run mode with access to CygNet point and alarm data, including alarm acknowledgment, current and history values, point and facility configuration, and trending point data on a default chart.</p>
                            </p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Navigator.htm">Navigator</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Navigation</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>&#160;</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Navigator.png" class="Inline" alt="Navigator icon" title="Navigator icon" /> The <b>Navigator</b> control is a navigation control that can be populated to display any number of <span class="GeneralProduct_Short">Canvas</span> screens and objects. Intrinsic to the control is a hierarchical menu on the left side, which can be configured to organize access to different categories of information. The navigation menu supports a single nested level of navigation; that is, you can configure multiple top-level menu items, each containing multiple sub-menu items. When a menu or sub-menu item is clicked a related screen will be displayed in the body of the control. The path to the linked screen can be a local or network Windows file-system folder or a CygNet APPS or BSS folder. Additionally, each menu item can display a configurable icon to the left of the menu's label. The navigation menu includes an adaptive display mode designed to preserve screen real estate: it can be configured to minimize all menu items, display only the top-level menu icon, or display the icon and menu item label. See the <a href="Tab.htm">Tab</a> control for a lighter version of the navigator. </p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Nested_View.htm">Nested View</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>View</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Nested_View.png" class="Inline" alt="Nested View icon" title="Nested View" /> The <b>Nested View</b> is a CygNet-aware container that shows another screen, meaning you can show a screen within another screen. This allows for more templated screens or dynamic screens, which can be swapped out at run-time based on user selection. The source file path for the nested view screen can be a local or network Windows file-system folder or a <span class="GeneralSoftwareNameShort">CygNet</span> APPS or BSS folder. You can add as many nested views as you want to a single screen; you can also nest as many screens as you want within a nested view  – there is no limit to the number of levels within each nested view.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Object.htm">Object</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Screen</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Object.png" class="Inline" alt="Object icon" title="Object" /> An <b>Object</b> is a simple <span class="GeneralProduct_Short">Canvas</span> screen containing one or more controls, which can be used on one or many screens. The controls on an object might represent assets such as a well or compressor or device or facility. Once configured, you can drop an object onto many different screens. If you need to make a single edit to any one control on an object, you simply change the master object, save the object, and all screens containing that object will be automatically updated. Any change made to an object will affect all instances of that object on any <span class="GeneralProduct_Short">Canvas</span> screen where it is used. Objects are analogous to templated screens in CygNet Studio. An object and a screen share the same configuration properties, events, and methods.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Object_Container.htm">Object Container</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Containers</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Object_Container.png" class="Inline" alt="Object Container icon" title="Object Container" /> The <b>Object Container</b> is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware control that dynamically populates itself using <span class="GeneralProduct_Short">Canvas</span> object files (.cob) and passed-in facilities. The control determines how many <span class="GeneralProduct_Short">Canvas</span> objects to draw based on facility inheritance, and then fills itself in with an object for each child of the parent facility. The object container allows the creation of sophisticated, easy-to-maintain <span class="GeneralProduct_Short">Canvas</span> screens, it:</p>
                            <ul>
                                <li value="1">can be connected to a tag chooser or any other facility sender for its facility context</li>
                                <li value="2">supports relative facilities and facility filtering to specify exactly what to display in the container</li>
                                <li value="3">will dynamically resize and re-orient objects appropriately</li>
                                <li value="4">eliminates the need for complex white-space management scripting</li>
                            </ul>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Object.htm#Object_Viewer">Object Viewer</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>&#160;</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p style="text-align: center;">
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>In design mode a <span class="GeneralProduct_Short">Canvas</span> object is viewed in an <b>Object Viewer</b> control. The Object Viewer's properties are listed in the Properties pane in an Object Viewer control and have the same properties, events, and methods as the <a href="Nested_View_Properties.htm">Nested View</a> control. You can interact with an Object Viewer control via script in the same way you can with any <span class="GeneralProduct_Short">Canvas</span> control. An Object Viewer control can also have its own <a href="../Using_Canvas/Settings_Style_Sheets.htm">styles</a>.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Radio_Button.htm">Radio Button</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Common</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>&#160;</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Radio_Btn.png" class="Inline" alt="Radio Button icon" title="Radio Button" /> The <b>Radio Button</b> can be used to add a list of mutually exclusive items; that is, a list from which the user can select only a single item. Script is required to attach commands to the radio button, which will be executed when the radio button is clicked in run mode. Additionally, you can define a Group name to specify which radio buttons are mutually exclusive.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Screen.htm">Screen</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Screen</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Settings_cog.png" class="Inline" alt="Screen icon" title="Screen" /> The <b>Screen</b> is where you create flexible and interactive diagrams and layouts for your users. By configuring a screen with controls and tools, you can create a data-rich visualization of devices, facilities, and other elements in your <span class="GeneralSoftwareNameShort">CygNet</span> environment, convey information about the state of a process via charts, grids, gauges, images, and other data-visualization tools, and design workflows where objects are scripted to accept and implement an operator's control instructions in run mode. The <span class="GeneralProduct_Short">Canvas</span> screen is where you create the HMI for your users in the field and is analogous to TheFrame/TheView in CygNet Studio.</p>
                            <p><span class="GeneralProduct_Short">Canvas</span> screens and objects share the same configuration properties. Screens (and objects) support a <a href="../Scripting/Interscreen_Communication.htm">broadcast</a> feature that allows you to manipulate and pass the SiteService and facility from one screen to another using the <span class="GeneralProduct_Short">Canvas</span> user interface without writing script. Screens (and objects) support <a href="../Scripting/Navigation_by_Facility.htm">navigation by facility</a> to link to a facility's associated screen, using one of six navigation modes. Screen hyperlinking is supported via script. Screens and objects support a default or on-demand chart, which can be invoked anytime from a <span class="GeneralProduct_Short">Canvas</span> or <span class="GeneralProduct_View_Short">Canvas View</span> screen in design or run mode in the form of a separate dialog box. The default chart supports configurable date ranges, both relative and absolute; live data updates at a configured interval allowing the chart to trend data at a real-time pace. Other configurable screen features include: background color, custom color palette for point state, pan zoom control, title, layout grid (color, height, and snap action), and whether the <a href="../Alarms/Alarm_Notifier_Overview.htm">alarm notifier</a> is visible on the screen when opened in <span class="GeneralProduct_View_Short">Canvas View</span> and <span class="GeneralProduct_View_Lite">Canvas View Lite</span>.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Search_Box.htm">Search Box</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Navigation</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Search.png" class="Inline" alt="Search icon" title="Search" /> The <b>Search Box</b> is a powerful <span class="GeneralSoftwareNameShort">CygNet</span>-aware tool for searching facilities or other objects in your <span class="GeneralSoftwareNameShort">CygNet</span> environment. Two search modes are available:</p>
                            <h4>Facility Search</h4>
                            <p>This mode will search all facilities in the specified Facility service and return any matching facility names. Three options are supported when a desired search result is selected:</p>
                            <ol>
                                <li value="1"><b>Facility Sender</b> — the search box acts as a facility sender and sends the selected facility to any controls on the screen configured to receive it.</li>
                                <li value="2"><b>Navigation</b> — the search box navigates by facility and links to the selected facility's associated screen. The navigation mode is determined by the <a href="../Scripting/Navigation_by_Facility.htm#Screen_Nav_Mode">Facility navigation mode</a> setting on the screen displaying the search box. </li>
                                <li value="3"><b>Script</b> — an action can be scripted to execute when a facility is selected from the search results.</li>
                            </ol>
                            <p>You can limit the search box to execute a search against a Facility service associated with a current value service (CVS), against a custom filter rule, and against a list of facility properties. </p>
                            <h4>Custom Search </h4>
                            <p>In this mode the search box can be scripted to perform a custom search against any object, for example, a SQL database, a .csv file, even a web site. Further custom actions can be executed when selecting an item in the search results.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Shape.htm">Shape</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Common</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Shape.png" class="Inline" alt="Shape icon" title="Shape" /> The <b>Shape</b> control is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware tool, which supports the drawing of geometric shapes, such as ellipses, triangles, rectangles, polygons, lines, lines with arrowheads, and other custom paths on your screens. You can use one of several predefined shapes or line types or specify a geometric syntax to draw a custom path or line style. A shape's fill color, text color, and line color can be explicitly configured or sourced from the point state color defined for the associated point. Colors in the control can be overridden when a custom color palette is selected for the screen. The control can display static text, such as a label, or dynamic text based on point or facility attributes. Dynamic text is built using tokens, which can represent real-time CVS point properties, point configuration properties, and facility properties.  The control can be configured with a valid point configuration but prevented from retrieving any <span class="GeneralSoftwareNameShort">CygNet</span> data, allowing the display of static text while still allowing <span class="GeneralSoftwareNameShort">CygNet</span> data context available from script.  Font sizing, text styling, and text weighting are also configurable.  Date, time, and value formatting for the text displayed on the control is supported.  The control can be hidden if the associated point is invalid.  This control supports tooltips, which can be displayed as tokenized text, a <span class="GeneralProduct_Short">Canvas</span> object, or the tooltip can be scripted to retrieve and display values for related points or <span class="GeneralSoftwareNameShort">CygNet</span> notes. The mouse cursor that appears when the mouse hovers over the control is configurable.   A context menu is available in run mode with access to CygNet point and alarm data, including alarm acknowledgment, current and history values, point and facility configuration, and trending point data on a default chart.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Sparkline.htm">Sparkline</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Charts</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Sparkline.png" class="Inline" alt="Sparkline icon" title="Sparkline" /> The <b>Sparkline</b> chart is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware control that historical data for a single point on a single line. This lightweight line chart is drawn without axes, labels, or legend, and is typically used to understand the shape of historical data: trends up or down, highlight maximum or minimum values, and identify spikes in the data. A sparkline supports configurable line and background color, configurable x-axis and y-axis, configurable date ranges, both relative and absolute, and live data updates to allow the sparkline to request new data at a configured interval giving the appearance that the sparkline is trending data at a real-time pace. A sparkline can be added to other controls, including: a <a href="CygNet_Grid_Properties.htm#Column_config_history">CygNet grid</a>, a <a href="Detail_Properties.htm#Show_sparkline">Detail control</a>, and a <a href="Tile_View.htm">Tile View</a> control.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Tab.htm">Tab Control</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Navigation</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>&#160;</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Tab.png" class="Inline" alt="Tab Control icon" title="Tab Control" /> The <b>Tab </b>control is a navigation tool that incorporates a collection of tabs across the top of the control and an optional nested view linked to associated content. The tabs allow you to easily switch between different <span class="GeneralProduct_Short">Canvas</span> screens and objects within a single container. The path to the linked screen can be a local or network Windows file-system folder or a CygNet APPS or BSS folder. The nested view is only visible if a screen path is configured for that particular tab. The tab control is a lighter version of the <a href="Navigator.htm">Navigator</a>.  </p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Tag_Chooser.htm">Tag Chooser</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Navigation</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Tag_Chooser.png" class="Inline" alt="Tag Chooser icon" title="Tag Chooser" /> The <b>Tag Chooser</b> displays a hierarchical tree of CygNet facilities and points, allowing the creation and implementation of templated screens in <span class="GeneralProduct_Short">Canvas</span>. It can be used as the primary navigational control on your screens to drive other controls by passing in facilities and point values. The tag chooser supports both facility and point resolution. Point resolution is optional at the facility level and can be turned off or on simply by selecting the <b>Show points</b> check box at design time. Facilities are designated with a dark yellow diamond (<img src="../../Resources/Images/Buttons Icons/Facillity.png" class="Inline" title="Facility icon" alt="Facility icon" />) and points are designated with a blue circle (<img src="../../Resources/Images/Buttons Icons/Point.png" class="Inline" alt="Point icon" title="Point icon" />) in the tag chooser hierarchy.</p>
                            <h4>Hierarchy Type</h4>
                            <p>The tag chooser offers two hierarchy types: by <b>Facility service</b> attributes, or by <b>Group service</b> nodes:</p>
                            <ul>
                                <li value="1"><b>Facility service</b> configuration — This tag chooser hierarchy is organized by the global attributes configured in your CygNet Facility service. You can further limit the tag chooser by any CygNet filter attribute set up for your system.</li>
                                <li value="2"><b>Group service</b> configuration — This tag chooser hierarchy is organized by the nodes configured in your CygNet Group service. You can further filter the tag chooser by a facility type. This must be a valid facility type in your system. </li>
                            </ul>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Text_Tool.htm">Text Tool</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Common</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Text_Tool.png" class="Inline" alt="Text Tool icon" title="Text Tool" /> The <b>Text Tool</b> is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware control that can be used to display text on your <span class="GeneralProduct_Short">Canvas</span> screens. The control can display static text, such as a label, or dynamic text based on point or facility attributes. Dynamic text is built using tokens, which can represent real-time CVS point properties, point configuration properties, and facility properties.  The control can be configured with a valid point configuration but prevented from retrieving any <span class="GeneralSoftwareNameShort">CygNet</span> data, allowing the display of static text while still allowing <span class="GeneralSoftwareNameShort">CygNet</span> data context available from script. The control's background, text, and border color can be explicitly configured or sourced from the point state color defined for the associated point.  Colors in the control can be overridden when a custom color palette is selected for the screen. Alarm indication (blinking) is supported for the control's text, background, and border when the associated point is in alarm.  The control can be hidden if the associated point is invalid.  Date, time, and value formatting for the text displayed on the control is supported.  Font sizing, text alignment, trimming, wrapping, styling, and weighting are also configurable. This control supports tooltips, which can be displayed as tokenized text, a <span class="GeneralProduct_Short">Canvas</span> object, or the tooltip can be scripted to retrieve and display values for related points or <span class="GeneralSoftwareNameShort">CygNet</span> notes. A context menu is available in run mode with access to CygNet point and alarm data, including alarm acknowledgment, current and history values, point and facility configuration, and trending point data on a default chart.</p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p><a href="Tile_View.htm">Tile View</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2">
                        <p>Containers</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Tile_View.png" class="Inline" alt="Tile View icon" title="Time View" /> The <b>Tile View </b>is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware container that displays real-time data in a series of tiled <a href="Detail.htm">Detail</a> controls, one for each facility provided. The tile view determines how many detail tiles to draw based on facility inheritance, and then fills itself in with a tile for each child of the parent facility, adjusting layout accordingly. The tile view allows you to build screens in a dynamic way with little maintenance, and easily add new points or facilities to a screen without additional scripting. Each detail tile in a tile view displays six elements: </p>
                            <ul>
                                <li value="1">three tokenized text strings (top, middle and bottom). The control can display static text, such as a label, or dynamic text based on point or facility attributes. Dynamic text is built using tokens, which can represent real-time CVS point properties, point configuration properties, and facility properties. </li>
                                <li value="2">an alarm icon that can be configured to change color based on point state and change image based on alarm priority</li>
                                <li value="3">a small <a href="Sparkline.htm">sparkline</a> with configurable  line color, date ranges, both relative and absolute, and live data updates</li>
                                <li value="4">an arrow icon that is scripted to flip the tile when clicked and display an object of your choosing showing related data on the reverse side of the detail tile. The object on the reverse side will receive its point configuration from the detail control. </li>
                            </ul>
                            <p>The last three elements (alarm icon, sparkline, and flip icon) can be toggled on or off. The control's background and text color can be explicitly configured or sourced from the point state color defined for the associated point. Colors in the control can be overridden when a custom color palette is selected for the screen.   The tile view has two display modes for its tiles: </p>
                            <ul>
                                <li value="1">Single UDC — Where data for a single UDC is displayed and a tile will be created for each child of a parent facility</li>
                                <li value="2">Each UDC for Facility — Where facilities are queried for their associated UDCs and a tile will be created for each one</li>
                            </ul>
                            <p>Additionally, each tile in the tile view includes a title bar showing the facility name and a maximize button. When clicked in run mode the tile will maximize and open a screen, object, or CygNet Studio screen populated with related data for the passed-in facility from the originating tile. The maximized screen or object can be minimized to return to the initial tile view. Each tile displays a context menu  in run mode with access to CygNet point and alarm data, including alarm acknowledgment, current and history values, point and facility configuration, and trending point data on a default chart. </p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body1">
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p><a href="Tree_Map.htm">Tree Map</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1">
                        <p>Data Visualization</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyE-Column1-Body1" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyD-Column1-Body1">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Tree_Map.png" class="Inline" alt="Tree Map icon" title="Tree Map" /> The <b>Tree Map </b>is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware tool  that can be used to display historical or real-time data as a set of relatively-sized and colored rectangles. Each rectangle has an area proportional to its numerical value. Several other configuration properties are supported, including: configurable date ranges, both relative and absolute; background, low range color, and high range color;  display mode (best fit or vertically stacked); filtering to show only top or bottom items; and historical rollup values. </p>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-HelpTable2-Body-Body2">
                    <td class="TableStyle-HelpTable2-BodyB-Column1-Body2">
                        <p><a href="Value_Indicator.htm">Value Indicator</a>
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyB-Column1-Body2">
                        <p>Data Visualization</p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyB-Column1-Body2" style="text-align: center;">
                        <p>
                            <img src="../../Resources/Images/Buttons Icons/check.png" title="CygNet Aware" alt="CygNet Aware" />
                        </p>
                    </td>
                    <td class="TableStyle-HelpTable2-BodyA-Column1-Body2">
                        <p>
                            <p>
                                <img src="../../Resources/Images/Buttons Icons/Control_Value_Indicator.png" class="Inline" alt="Value Indicator icon" title="Value Indicator" /> The <b>Value Indicator</b> is a <span class="GeneralSoftwareNameShort">CygNet</span>-aware analog control that adds visual context to real-time point and alarm data. A data range is represented on a vertical bar that fills the control between an upper and lower bound. The source of the lower value bound and upper value bound can be either hard-coded to an explicit value, or dynamically determined for each facility by sourcing the value from an application-specific attribute of the associated point (using an Indexed field or a General data field). A value indicator on a templated screen supports different bounds for each source facility. By using a point attribute to store the bounds (for example, Indexed 1 for the lower value bound and Indexed 2 for the upper value bound), you can have a templated screen without having to script the control. Any configured alarm limits for the associated point are indicated on the bar and an animated marker on the left side points to the current value. The control can display static text, such as a label, or dynamic text based on point or facility attributes. Dynamic text is built using tokens, which can represent real-time CVS point properties, point configuration properties, and facility properties.  The color of the control’s background, text label, marker border, and marker interior can be explicitly configured or can be sourced from the point state of the associated point. The alarm limit range can optionally be configured to display point state color. Colors in the control can be overridden when a custom color palette is selected for the screen.  Font sizing, text styling, and text weighting are also configurable. Date, time, and value formatting for the text displayed on the control is supported. The control can be hidden if the associated point is invalid. This control supports tooltips, which can be displayed as tokenized text, a <span class="GeneralProduct_Short">Canvas</span> object, or the tooltip can be scripted to retrieve and display values for related points or <span class="GeneralSoftwareNameShort">CygNet</span> notes. A context menu is available in run mode with access to CygNet point and alarm data, including alarm acknowledgment, current and history values, point and facility configuration, and trending point data on a default chart.</p>
                        </p>
                    </td>
                </tr>
            </tbody>
        </table>
        <hr width="100%" size="1" />
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/NoBorder8.css');" summary="MasterFooter" class="TableStyle-NoBorder8" cellspacing="0">
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <col class="TableStyle-NoBorder8-Column-Column1" />
            <tbody>
                <tr class="TableStyle-NoBorder8-Body-Body1">
                    <td class="TableStyle-NoBorder8-BodyB-Column1-Body1">
                        <p><a href="mailto:softwaredocs.feedback@weatherford.com?subject=Documentation%20feedback"><img src="../../Resources/Images/Buttons Icons/Feedback_footer.png" alt="Let us know how we can improve this topic." title="Let us know how we can improve this topic." class="Inline" /></a>
                        </p>
                    </td>
                    <td class="TableStyle-NoBorder8-BodyA-Column1-Body1">
                        <p class="MasterFooterContact"><a href="https://www.weatherford.com/en/products-and-services/production/production-4-0/iot-scada-platform//" target="_blank"><img src="../../Resources/Images/General/WFT_31x21.png" alt="CygNet at weatherford.com" title="CygNet at weatherford.com" /></a>
                        </p>
                        <p class="MasterFooterContact">© <span class="GeneralCurrentYear">2020</span> Weatherford. All rights reserved.</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>